
Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000058  00800100  00000bf6  00000c8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bf6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  00800158  00800158  00000ce2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ce2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000d80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001136  00000000  00000000  00000e38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008a3  00000000  00000000  00001f6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007a8  00000000  00000000  00002811  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d8  00000000  00000000  00002fbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f6  00000000  00000000  00003194  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000860  00000000  00000000  0000368a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00003eea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 be 01 	jmp	0x37c	; 0x37c <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 ef       	ldi	r30, 0xF6	; 246
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 35       	cpi	r26, 0x58	; 88
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e5       	ldi	r26, 0x58	; 88
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ad 36       	cpi	r26, 0x6D	; 109
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 f7 01 	call	0x3ee	; 0x3ee <main>
  9e:	0c 94 f9 05 	jmp	0xbf2	; 0xbf2 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
	}
}

void stepper_start_move(uint16_t steps, uint8_t dir) {
	step_dir = dir;
	steps_remaining = steps;
  a6:	80 e4       	ldi	r24, 0x40	; 64
  a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
  ac:	86 e8       	ldi	r24, 0x86	; 134
  ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  b2:	08 95       	ret

000000b4 <adc_read>:
  b4:	87 70       	andi	r24, 0x07	; 7
  b6:	80 64       	ori	r24, 0x40	; 64
  b8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
  bc:	ea e7       	ldi	r30, 0x7A	; 122
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	80 64       	ori	r24, 0x40	; 64
  c4:	80 83       	st	Z, r24
  c6:	80 81       	ld	r24, Z
  c8:	86 fd       	sbrc	r24, 6
  ca:	fd cf       	rjmp	.-6      	; 0xc6 <adc_read+0x12>
  cc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  d0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  d4:	08 95       	ret

000000d6 <read_key>:
  d6:	80 e0       	ldi	r24, 0x00	; 0
  d8:	0e 94 5a 00 	call	0xb4	; 0xb4 <adc_read>
  dc:	82 33       	cpi	r24, 0x32	; 50
  de:	91 05       	cpc	r25, r1
  e0:	80 f0       	brcs	.+32     	; 0x102 <read_key+0x2c>
  e2:	86 39       	cpi	r24, 0x96	; 150
  e4:	91 05       	cpc	r25, r1
  e6:	78 f0       	brcs	.+30     	; 0x106 <read_key+0x30>
  e8:	8c 32       	cpi	r24, 0x2C	; 44
  ea:	21 e0       	ldi	r18, 0x01	; 1
  ec:	92 07       	cpc	r25, r18
  ee:	68 f0       	brcs	.+26     	; 0x10a <read_key+0x34>
  f0:	84 3f       	cpi	r24, 0xF4	; 244
  f2:	21 e0       	ldi	r18, 0x01	; 1
  f4:	92 07       	cpc	r25, r18
  f6:	58 f0       	brcs	.+22     	; 0x10e <read_key+0x38>
  f8:	8c 3b       	cpi	r24, 0xBC	; 188
  fa:	92 40       	sbci	r25, 0x02	; 2
  fc:	50 f0       	brcs	.+20     	; 0x112 <read_key+0x3c>
  fe:	80 e0       	ldi	r24, 0x00	; 0
 100:	08 95       	ret
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	08 95       	ret
 106:	82 e0       	ldi	r24, 0x02	; 2
 108:	08 95       	ret
 10a:	83 e0       	ldi	r24, 0x03	; 3
 10c:	08 95       	ret
 10e:	84 e0       	ldi	r24, 0x04	; 4
 110:	08 95       	ret
 112:	85 e0       	ldi	r24, 0x05	; 5
 114:	08 95       	ret

00000116 <debounced_read_key>:
 116:	0e 94 6b 00 	call	0xd6	; 0xd6 <read_key>
 11a:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <__data_end>
 11e:	89 17       	cp	r24, r25
 120:	71 f0       	breq	.+28     	; 0x13e <debounced_read_key+0x28>
 122:	2f ef       	ldi	r18, 0xFF	; 255
 124:	80 e7       	ldi	r24, 0x70	; 112
 126:	92 e0       	ldi	r25, 0x02	; 2
 128:	21 50       	subi	r18, 0x01	; 1
 12a:	80 40       	sbci	r24, 0x00	; 0
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <debounced_read_key+0x12>
 130:	00 c0       	rjmp	.+0      	; 0x132 <debounced_read_key+0x1c>
 132:	00 00       	nop
 134:	0e 94 6b 00 	call	0xd6	; 0xd6 <read_key>
 138:	98 2f       	mov	r25, r24
 13a:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <__data_end>
 13e:	89 2f       	mov	r24, r25
 140:	08 95       	ret

00000142 <lcd_strobe>:
 142:	29 9a       	sbi	0x05, 1	; 5
 144:	85 e0       	ldi	r24, 0x05	; 5
 146:	8a 95       	dec	r24
 148:	f1 f7       	brne	.-4      	; 0x146 <lcd_strobe+0x4>
 14a:	00 00       	nop
 14c:	29 98       	cbi	0x05, 1	; 5
 14e:	8f e8       	ldi	r24, 0x8F	; 143
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <lcd_strobe+0x10>
 156:	00 c0       	rjmp	.+0      	; 0x158 <lcd_strobe+0x16>
 158:	00 00       	nop
 15a:	08 95       	ret

0000015c <lcd_send_nibble>:
 15c:	2b b1       	in	r18, 0x0b	; 11
 15e:	2f 70       	andi	r18, 0x0F	; 15
 160:	30 e1       	ldi	r19, 0x10	; 16
 162:	83 9f       	mul	r24, r19
 164:	c0 01       	movw	r24, r0
 166:	11 24       	eor	r1, r1
 168:	82 2b       	or	r24, r18
 16a:	8b b9       	out	0x0b, r24	; 11
 16c:	0e 94 a1 00 	call	0x142	; 0x142 <lcd_strobe>
 170:	08 95       	ret

00000172 <lcd_command>:
 172:	cf 93       	push	r28
 174:	c8 2f       	mov	r28, r24
 176:	28 98       	cbi	0x05, 0	; 5
 178:	82 95       	swap	r24
 17a:	8f 70       	andi	r24, 0x0F	; 15
 17c:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_send_nibble>
 180:	8c 2f       	mov	r24, r28
 182:	8f 70       	andi	r24, 0x0F	; 15
 184:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_send_nibble>
 188:	c1 50       	subi	r28, 0x01	; 1
 18a:	c2 30       	cpi	r28, 0x02	; 2
 18c:	30 f4       	brcc	.+12     	; 0x19a <lcd_command+0x28>
 18e:	8f e3       	ldi	r24, 0x3F	; 63
 190:	9f e1       	ldi	r25, 0x1F	; 31
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <lcd_command+0x20>
 196:	00 c0       	rjmp	.+0      	; 0x198 <lcd_command+0x26>
 198:	00 00       	nop
 19a:	cf 91       	pop	r28
 19c:	08 95       	ret

0000019e <lcd_data>:
 19e:	cf 93       	push	r28
 1a0:	c8 2f       	mov	r28, r24
 1a2:	28 9a       	sbi	0x05, 0	; 5
 1a4:	82 95       	swap	r24
 1a6:	8f 70       	andi	r24, 0x0F	; 15
 1a8:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_send_nibble>
 1ac:	8c 2f       	mov	r24, r28
 1ae:	8f 70       	andi	r24, 0x0F	; 15
 1b0:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_send_nibble>
 1b4:	8f e8       	ldi	r24, 0x8F	; 143
 1b6:	91 e0       	ldi	r25, 0x01	; 1
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	f1 f7       	brne	.-4      	; 0x1b8 <lcd_data+0x1a>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <lcd_data+0x20>
 1be:	00 00       	nop
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <lcd_backlight>:
 1c4:	88 23       	and	r24, r24
 1c6:	11 f0       	breq	.+4      	; 0x1cc <lcd_backlight+0x8>
 1c8:	2a 9a       	sbi	0x05, 2	; 5
 1ca:	08 95       	ret
 1cc:	2a 98       	cbi	0x05, 2	; 5
 1ce:	08 95       	ret

000001d0 <lcd_init>:
 1d0:	84 b1       	in	r24, 0x04	; 4
 1d2:	87 60       	ori	r24, 0x07	; 7
 1d4:	84 b9       	out	0x04, r24	; 4
 1d6:	8a b1       	in	r24, 0x0a	; 10
 1d8:	80 6f       	ori	r24, 0xF0	; 240
 1da:	8a b9       	out	0x0a, r24	; 10
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_backlight>
 1e2:	2f ef       	ldi	r18, 0xFF	; 255
 1e4:	80 e7       	ldi	r24, 0x70	; 112
 1e6:	92 e0       	ldi	r25, 0x02	; 2
 1e8:	21 50       	subi	r18, 0x01	; 1
 1ea:	80 40       	sbci	r24, 0x00	; 0
 1ec:	90 40       	sbci	r25, 0x00	; 0
 1ee:	e1 f7       	brne	.-8      	; 0x1e8 <lcd_init+0x18>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <lcd_init+0x22>
 1f2:	00 00       	nop
 1f4:	28 98       	cbi	0x05, 0	; 5
 1f6:	83 e0       	ldi	r24, 0x03	; 3
 1f8:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_send_nibble>
 1fc:	8f e1       	ldi	r24, 0x1F	; 31
 1fe:	9e e4       	ldi	r25, 0x4E	; 78
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <lcd_init+0x30>
 204:	00 c0       	rjmp	.+0      	; 0x206 <lcd_init+0x36>
 206:	00 00       	nop
 208:	83 e0       	ldi	r24, 0x03	; 3
 20a:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_send_nibble>
 20e:	8f e8       	ldi	r24, 0x8F	; 143
 210:	91 e0       	ldi	r25, 0x01	; 1
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <lcd_init+0x42>
 216:	00 c0       	rjmp	.+0      	; 0x218 <lcd_init+0x48>
 218:	00 00       	nop
 21a:	83 e0       	ldi	r24, 0x03	; 3
 21c:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_send_nibble>
 220:	8f e8       	ldi	r24, 0x8F	; 143
 222:	91 e0       	ldi	r25, 0x01	; 1
 224:	01 97       	sbiw	r24, 0x01	; 1
 226:	f1 f7       	brne	.-4      	; 0x224 <lcd_init+0x54>
 228:	00 c0       	rjmp	.+0      	; 0x22a <lcd_init+0x5a>
 22a:	00 00       	nop
 22c:	82 e0       	ldi	r24, 0x02	; 2
 22e:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_send_nibble>
 232:	8f e8       	ldi	r24, 0x8F	; 143
 234:	91 e0       	ldi	r25, 0x01	; 1
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <lcd_init+0x66>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <lcd_init+0x6c>
 23c:	00 00       	nop
 23e:	88 e2       	ldi	r24, 0x28	; 40
 240:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_command>
 244:	8c e0       	ldi	r24, 0x0C	; 12
 246:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_command>
 24a:	86 e0       	ldi	r24, 0x06	; 6
 24c:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_command>
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_command>
 256:	8f e3       	ldi	r24, 0x3F	; 63
 258:	9f e1       	ldi	r25, 0x1F	; 31
 25a:	01 97       	sbiw	r24, 0x01	; 1
 25c:	f1 f7       	brne	.-4      	; 0x25a <lcd_init+0x8a>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <lcd_init+0x90>
 260:	00 00       	nop
 262:	08 95       	ret

00000264 <lcd_print>:
 264:	cf 93       	push	r28
 266:	df 93       	push	r29
 268:	ec 01       	movw	r28, r24
 26a:	88 81       	ld	r24, Y
 26c:	88 23       	and	r24, r24
 26e:	31 f0       	breq	.+12     	; 0x27c <lcd_print+0x18>
 270:	21 96       	adiw	r28, 0x01	; 1
 272:	0e 94 cf 00 	call	0x19e	; 0x19e <lcd_data>
 276:	89 91       	ld	r24, Y+
 278:	81 11       	cpse	r24, r1
 27a:	fb cf       	rjmp	.-10     	; 0x272 <lcd_print+0xe>
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	08 95       	ret

00000282 <update_lcd_display>:
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_command>
 288:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <editing_mode>
 28c:	81 30       	cpi	r24, 0x01	; 1
 28e:	29 f4       	brne	.+10     	; 0x29a <update_lcd_display+0x18>
 290:	88 e0       	ldi	r24, 0x08	; 8
 292:	91 e0       	ldi	r25, 0x01	; 1
 294:	0e 94 32 01 	call	0x264	; 0x264 <lcd_print>
 298:	0d c0       	rjmp	.+26     	; 0x2b4 <update_lcd_display+0x32>
 29a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <editing_mode>
 29e:	82 30       	cpi	r24, 0x02	; 2
 2a0:	29 f4       	brne	.+10     	; 0x2ac <update_lcd_display+0x2a>
 2a2:	84 e1       	ldi	r24, 0x14	; 20
 2a4:	91 e0       	ldi	r25, 0x01	; 1
 2a6:	0e 94 32 01 	call	0x264	; 0x264 <lcd_print>
 2aa:	04 c0       	rjmp	.+8      	; 0x2b4 <update_lcd_display+0x32>
 2ac:	80 e2       	ldi	r24, 0x20	; 32
 2ae:	91 e0       	ldi	r25, 0x01	; 1
 2b0:	0e 94 32 01 	call	0x264	; 0x264 <lcd_print>
 2b4:	80 ec       	ldi	r24, 0xC0	; 192
 2b6:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_command>
 2ba:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 2be:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 2c2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
 2c6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
 2ca:	3f 93       	push	r19
 2cc:	2f 93       	push	r18
 2ce:	9f 93       	push	r25
 2d0:	8f 93       	push	r24
 2d2:	86 e2       	ldi	r24, 0x26	; 38
 2d4:	91 e0       	ldi	r25, 0x01	; 1
 2d6:	9f 93       	push	r25
 2d8:	8f 93       	push	r24
 2da:	8d e5       	ldi	r24, 0x5D	; 93
 2dc:	91 e0       	ldi	r25, 0x01	; 1
 2de:	9f 93       	push	r25
 2e0:	8f 93       	push	r24
 2e2:	0e 94 0f 03 	call	0x61e	; 0x61e <sprintf>
 2e6:	8d e5       	ldi	r24, 0x5D	; 93
 2e8:	91 e0       	ldi	r25, 0x01	; 1
 2ea:	0e 94 32 01 	call	0x264	; 0x264 <lcd_print>
 2ee:	8d b7       	in	r24, 0x3d	; 61
 2f0:	9e b7       	in	r25, 0x3e	; 62
 2f2:	08 96       	adiw	r24, 0x08	; 8
 2f4:	0f b6       	in	r0, 0x3f	; 63
 2f6:	f8 94       	cli
 2f8:	9e bf       	out	0x3e, r25	; 62
 2fa:	0f be       	out	0x3f, r0	; 63
 2fc:	8d bf       	out	0x3d, r24	; 61
 2fe:	08 95       	ret

00000300 <stepper_init>:
 300:	84 b1       	in	r24, 0x04	; 4
 302:	88 63       	ori	r24, 0x38	; 56
 304:	84 b9       	out	0x04, r24	; 4
 306:	2d 98       	cbi	0x05, 5	; 5
 308:	08 95       	ret

0000030a <stepper_enable>:
 30a:	88 23       	and	r24, r24
 30c:	11 f0       	breq	.+4      	; 0x312 <stepper_enable+0x8>
 30e:	2d 9a       	sbi	0x05, 5	; 5
 310:	08 95       	ret
 312:	2d 98       	cbi	0x05, 5	; 5
 314:	08 95       	ret

00000316 <set_speed>:
}

void set_speed(uint16_t steps_per_sec) {
	if (steps_per_sec == 0) steps_per_sec = 1;
 316:	00 97       	sbiw	r24, 0x00	; 0
 318:	11 f4       	brne	.+4      	; 0x31e <set_speed+0x8>
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	90 e0       	ldi	r25, 0x00	; 0
	step_speed = steps_per_sec;
 31e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 322:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	OCR1A = (F_CPU / 8 / step_speed) - 1;
 326:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 32a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 32e:	40 e0       	ldi	r20, 0x00	; 0
 330:	50 e0       	ldi	r21, 0x00	; 0
 332:	60 e8       	ldi	r22, 0x80	; 128
 334:	74 e8       	ldi	r23, 0x84	; 132
 336:	8e e1       	ldi	r24, 0x1E	; 30
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__udivmodsi4>
 33e:	21 50       	subi	r18, 0x01	; 1
 340:	31 09       	sbc	r19, r1
 342:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 346:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 34a:	08 95       	ret

0000034c <timer1_init>:
}

void timer1_init() {
 34c:	cf 93       	push	r28
 34e:	df 93       	push	r29
	TCCR1B |= (1 << WGM12);
 350:	c1 e8       	ldi	r28, 0x81	; 129
 352:	d0 e0       	ldi	r29, 0x00	; 0
 354:	88 81       	ld	r24, Y
 356:	88 60       	ori	r24, 0x08	; 8
 358:	88 83       	st	Y, r24
	TIMSK1 |= (1 << OCIE1A);
 35a:	ef e6       	ldi	r30, 0x6F	; 111
 35c:	f0 e0       	ldi	r31, 0x00	; 0
 35e:	80 81       	ld	r24, Z
 360:	82 60       	ori	r24, 0x02	; 2
 362:	80 83       	st	Z, r24
	set_speed(step_speed);
 364:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 368:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 36c:	0e 94 8b 01 	call	0x316	; 0x316 <set_speed>
	TCCR1B |= (1 << CS11);
 370:	88 81       	ld	r24, Y
 372:	82 60       	ori	r24, 0x02	; 2
 374:	88 83       	st	Y, r24
}
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	08 95       	ret

0000037c <__vector_11>:

ISR(TIMER1_COMPA_vect) {
 37c:	1f 92       	push	r1
 37e:	0f 92       	push	r0
 380:	0f b6       	in	r0, 0x3f	; 63
 382:	0f 92       	push	r0
 384:	11 24       	eor	r1, r1
 386:	8f 93       	push	r24
 388:	9f 93       	push	r25
 38a:	cf 93       	push	r28
 38c:	df 93       	push	r29
 38e:	1f 92       	push	r1
 390:	cd b7       	in	r28, 0x3d	; 61
 392:	de b7       	in	r29, 0x3e	; 62
	if (steps_remaining > 0) {
 394:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <steps_remaining>
 398:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <steps_remaining+0x1>
 39c:	89 2b       	or	r24, r25
 39e:	e9 f0       	breq	.+58     	; 0x3da <__vector_11+0x5e>
		if (step_dir)
 3a0:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <step_dir>
 3a4:	88 23       	and	r24, r24
 3a6:	11 f0       	breq	.+4      	; 0x3ac <__vector_11+0x30>
		PORTB |= (1 << DIR_PIN);
 3a8:	2c 9a       	sbi	0x05, 4	; 5
 3aa:	01 c0       	rjmp	.+2      	; 0x3ae <__vector_11+0x32>
		else
		PORTB &= ~(1 << DIR_PIN);
 3ac:	2c 98       	cbi	0x05, 4	; 5

		PORTB |= (1 << STEP_PIN);
 3ae:	2b 9a       	sbi	0x05, 3	; 5
		for (volatile uint8_t i = 0; i < 20; i++) {
 3b0:	19 82       	std	Y+1, r1	; 0x01
 3b2:	89 81       	ldd	r24, Y+1	; 0x01
 3b4:	84 31       	cpi	r24, 0x14	; 20
 3b6:	38 f4       	brcc	.+14     	; 0x3c6 <__vector_11+0x4a>
			__asm__ __volatile__("nop");
 3b8:	00 00       	nop
		PORTB |= (1 << DIR_PIN);
		else
		PORTB &= ~(1 << DIR_PIN);

		PORTB |= (1 << STEP_PIN);
		for (volatile uint8_t i = 0; i < 20; i++) {
 3ba:	89 81       	ldd	r24, Y+1	; 0x01
 3bc:	8f 5f       	subi	r24, 0xFF	; 255
 3be:	89 83       	std	Y+1, r24	; 0x01
 3c0:	89 81       	ldd	r24, Y+1	; 0x01
 3c2:	84 31       	cpi	r24, 0x14	; 20
 3c4:	c8 f3       	brcs	.-14     	; 0x3b8 <__vector_11+0x3c>
			__asm__ __volatile__("nop");
		}
		PORTB &= ~(1 << STEP_PIN);
 3c6:	2b 98       	cbi	0x05, 3	; 5
		steps_remaining--;
 3c8:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <steps_remaining>
 3cc:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <steps_remaining+0x1>
 3d0:	01 97       	sbiw	r24, 0x01	; 1
 3d2:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <steps_remaining+0x1>
 3d6:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <steps_remaining>
	}
}
 3da:	0f 90       	pop	r0
 3dc:	df 91       	pop	r29
 3de:	cf 91       	pop	r28
 3e0:	9f 91       	pop	r25
 3e2:	8f 91       	pop	r24
 3e4:	0f 90       	pop	r0
 3e6:	0f be       	out	0x3f, r0	; 63
 3e8:	0f 90       	pop	r0
 3ea:	1f 90       	pop	r1
 3ec:	18 95       	reti

000003ee <main>:

int main(void) {
	lcd_init();
 3ee:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_init>
	adc_init();
 3f2:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
	stepper_init();
 3f6:	0e 94 80 01 	call	0x300	; 0x300 <stepper_init>
	stepper_enable(1);
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	0e 94 85 01 	call	0x30a	; 0x30a <stepper_enable>
	timer1_init();
 400:	0e 94 a6 01 	call	0x34c	; 0x34c <timer1_init>
	sei();
 404:	78 94       	sei

	lcd_print("Press any button");
 406:	81 e3       	ldi	r24, 0x31	; 49
 408:	91 e0       	ldi	r25, 0x01	; 1
 40a:	0e 94 32 01 	call	0x264	; 0x264 <lcd_print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 40e:	2f ef       	ldi	r18, 0xFF	; 255
 410:	83 ed       	ldi	r24, 0xD3	; 211
 412:	90 e3       	ldi	r25, 0x30	; 48
 414:	21 50       	subi	r18, 0x01	; 1
 416:	80 40       	sbci	r24, 0x00	; 0
 418:	90 40       	sbci	r25, 0x00	; 0
 41a:	e1 f7       	brne	.-8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
	_delay_ms(1000);
	update_lcd_display();
 420:	0e 94 41 01 	call	0x282	; 0x282 <update_lcd_display>

	uint8_t prev_key = 0;
	uint8_t last_select = 0;
 424:	c0 e0       	ldi	r28, 0x00	; 0

		if (key == 5 && last_select == 0) {
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
 426:	d0 e0       	ldi	r29, 0x00	; 0

	while (1) {
		uint8_t key = debounced_read_key();

		if (key == 5 && last_select == 0) {
			editing_mode = (editing_mode + 1) % 3;
 428:	03 e0       	ldi	r16, 0x03	; 3
 42a:	10 e0       	ldi	r17, 0x00	; 0

	uint8_t prev_key = 0;
	uint8_t last_select = 0;

	while (1) {
		uint8_t key = debounced_read_key();
 42c:	0e 94 8b 00 	call	0x116	; 0x116 <debounced_read_key>

		if (key == 5 && last_select == 0) {
 430:	85 30       	cpi	r24, 0x05	; 5
 432:	71 f4       	brne	.+28     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 434:	c1 11       	cpse	r28, r1
 436:	a5 c0       	rjmp	.+330    	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
			editing_mode = (editing_mode + 1) % 3;
 438:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <editing_mode>
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	01 96       	adiw	r24, 0x01	; 1
 440:	b8 01       	movw	r22, r16
 442:	0e 94 c5 02 	call	0x58a	; 0x58a <__divmodhi4>
 446:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <editing_mode>
			update_lcd_display();
 44a:	0e 94 41 01 	call	0x282	; 0x282 <update_lcd_display>
 44e:	99 c0       	rjmp	.+306    	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
		}
		last_select = (key == 5);

		if (editing_mode == 0) {
 450:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <editing_mode>
 454:	91 11       	cpse	r25, r1
 456:	2b c0       	rjmp	.+86     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
			if (key == 1) {
 458:	81 30       	cpi	r24, 0x01	; 1
 45a:	99 f4       	brne	.+38     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
				lcd_command(LCD_CLEAR);
 45c:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_command>
				lcd_print("Move Right");
 460:	82 e4       	ldi	r24, 0x42	; 66
 462:	91 e0       	ldi	r25, 0x01	; 1
 464:	0e 94 32 01 	call	0x264	; 0x264 <lcd_print>
				stepper_start_move(step_count, 1);
 468:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
 46c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
		PORTB &= ~(1 << EN_PIN);
	}
}

void stepper_start_move(uint16_t steps, uint8_t dir) {
	step_dir = dir;
 470:	21 e0       	ldi	r18, 0x01	; 1
 472:	20 93 59 01 	sts	0x0159, r18	; 0x800159 <step_dir>
	steps_remaining = steps;
 476:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <steps_remaining+0x1>
 47a:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <steps_remaining>

		if (key == 5 && last_select == 0) {
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
 47e:	cd 2f       	mov	r28, r29
 480:	76 c0       	rjmp	.+236    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
		if (editing_mode == 0) {
			if (key == 1) {
				lcd_command(LCD_CLEAR);
				lcd_print("Move Right");
				stepper_start_move(step_count, 1);
				} else if (key == 4) {
 482:	84 30       	cpi	r24, 0x04	; 4
 484:	09 f0       	breq	.+2      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 486:	70 c0       	rjmp	.+224    	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
				lcd_command(LCD_CLEAR);
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_command>
				lcd_print("Move Left");
 48e:	8d e4       	ldi	r24, 0x4D	; 77
 490:	91 e0       	ldi	r25, 0x01	; 1
 492:	0e 94 32 01 	call	0x264	; 0x264 <lcd_print>
				stepper_start_move(step_count, 0);
 496:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
 49a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
		PORTB &= ~(1 << EN_PIN);
	}
}

void stepper_start_move(uint16_t steps, uint8_t dir) {
	step_dir = dir;
 49e:	d0 93 59 01 	sts	0x0159, r29	; 0x800159 <step_dir>
	steps_remaining = steps;
 4a2:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <steps_remaining+0x1>
 4a6:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <steps_remaining>

		if (key == 5 && last_select == 0) {
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
 4aa:	cd 2f       	mov	r28, r29
 4ac:	60 c0       	rjmp	.+192    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
				lcd_command(LCD_CLEAR);
				lcd_print("Move Left");
				stepper_start_move(step_count, 0);
			}
			} else {
			if (key == 2) {
 4ae:	82 30       	cpi	r24, 0x02	; 2
 4b0:	31 f5       	brne	.+76     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
				if (editing_mode == 1) {
 4b2:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <editing_mode>
 4b6:	81 30       	cpi	r24, 0x01	; 1
 4b8:	59 f4       	brne	.+22     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
					step_count += 100;
 4ba:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
 4be:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
 4c2:	8c 59       	subi	r24, 0x9C	; 156
 4c4:	9f 4f       	sbci	r25, 0xFF	; 255
 4c6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <step_count+0x1>
 4ca:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <step_count>
 4ce:	13 c0       	rjmp	.+38     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
					} else if (editing_mode == 2) {
 4d0:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <editing_mode>
 4d4:	82 30       	cpi	r24, 0x02	; 2
 4d6:	79 f4       	brne	.+30     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
					step_speed += 50;
 4d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 4dc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 4e0:	c2 96       	adiw	r24, 0x32	; 50
 4e2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 4e6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
					set_speed(step_speed);
 4ea:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 4ee:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 4f2:	0e 94 8b 01 	call	0x316	; 0x316 <set_speed>
				}
				update_lcd_display();
 4f6:	0e 94 41 01 	call	0x282	; 0x282 <update_lcd_display>

		if (key == 5 && last_select == 0) {
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
 4fa:	cd 2f       	mov	r28, r29
 4fc:	38 c0       	rjmp	.+112    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
					step_speed += 50;
					set_speed(step_speed);
				}
				update_lcd_display();
			}
			if (key == 3) {
 4fe:	83 30       	cpi	r24, 0x03	; 3
 500:	a9 f5       	brne	.+106    	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
				if (editing_mode == 1 && step_count >= 100) {
 502:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <editing_mode>
 506:	81 30       	cpi	r24, 0x01	; 1
 508:	91 f4       	brne	.+36     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 50a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
 50e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
 512:	84 36       	cpi	r24, 0x64	; 100
 514:	91 05       	cpc	r25, r1
 516:	58 f0       	brcs	.+22     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
					step_count -= 100;
 518:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
 51c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
 520:	84 56       	subi	r24, 0x64	; 100
 522:	91 09       	sbc	r25, r1
 524:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <step_count+0x1>
 528:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <step_count>
 52c:	19 c0       	rjmp	.+50     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
					} else if (editing_mode == 2 && step_speed > 50) {
 52e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <editing_mode>
 532:	82 30       	cpi	r24, 0x02	; 2
 534:	a9 f4       	brne	.+42     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 536:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 53a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 53e:	c3 97       	sbiw	r24, 0x33	; 51
 540:	78 f0       	brcs	.+30     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
					step_speed -= 50;
 542:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 546:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 54a:	c2 97       	sbiw	r24, 0x32	; 50
 54c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 550:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
					set_speed(step_speed);
 554:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 558:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 55c:	0e 94 8b 01 	call	0x316	; 0x316 <set_speed>
				}
				update_lcd_display();
 560:	0e 94 41 01 	call	0x282	; 0x282 <update_lcd_display>

		if (key == 5 && last_select == 0) {
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
 564:	cd 2f       	mov	r28, r29
 566:	03 c0       	rjmp	.+6      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 568:	cd 2f       	mov	r28, r29
 56a:	01 c0       	rjmp	.+2      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 56c:	cd 2f       	mov	r28, r29
 56e:	2f ef       	ldi	r18, 0xFF	; 255
 570:	81 ee       	ldi	r24, 0xE1	; 225
 572:	94 e0       	ldi	r25, 0x04	; 4
 574:	21 50       	subi	r18, 0x01	; 1
 576:	80 40       	sbci	r24, 0x00	; 0
 578:	90 40       	sbci	r25, 0x00	; 0
 57a:	e1 f7       	brne	.-8      	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 57c:	00 c0       	rjmp	.+0      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 57e:	00 00       	nop
			}
		}

		_delay_ms(100);
		prev_key = key;
	}
 580:	55 cf       	rjmp	.-342    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);

		if (editing_mode == 0) {
 582:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <editing_mode>

		if (key == 5 && last_select == 0) {
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
 586:	c1 e0       	ldi	r28, 0x01	; 1
 588:	f2 cf       	rjmp	.-28     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>

0000058a <__divmodhi4>:
 58a:	97 fb       	bst	r25, 7
 58c:	07 2e       	mov	r0, r23
 58e:	16 f4       	brtc	.+4      	; 0x594 <__divmodhi4+0xa>
 590:	00 94       	com	r0
 592:	07 d0       	rcall	.+14     	; 0x5a2 <__divmodhi4_neg1>
 594:	77 fd       	sbrc	r23, 7
 596:	09 d0       	rcall	.+18     	; 0x5aa <__divmodhi4_neg2>
 598:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__udivmodhi4>
 59c:	07 fc       	sbrc	r0, 7
 59e:	05 d0       	rcall	.+10     	; 0x5aa <__divmodhi4_neg2>
 5a0:	3e f4       	brtc	.+14     	; 0x5b0 <__divmodhi4_exit>

000005a2 <__divmodhi4_neg1>:
 5a2:	90 95       	com	r25
 5a4:	81 95       	neg	r24
 5a6:	9f 4f       	sbci	r25, 0xFF	; 255
 5a8:	08 95       	ret

000005aa <__divmodhi4_neg2>:
 5aa:	70 95       	com	r23
 5ac:	61 95       	neg	r22
 5ae:	7f 4f       	sbci	r23, 0xFF	; 255

000005b0 <__divmodhi4_exit>:
 5b0:	08 95       	ret

000005b2 <__udivmodsi4>:
 5b2:	a1 e2       	ldi	r26, 0x21	; 33
 5b4:	1a 2e       	mov	r1, r26
 5b6:	aa 1b       	sub	r26, r26
 5b8:	bb 1b       	sub	r27, r27
 5ba:	fd 01       	movw	r30, r26
 5bc:	0d c0       	rjmp	.+26     	; 0x5d8 <__udivmodsi4_ep>

000005be <__udivmodsi4_loop>:
 5be:	aa 1f       	adc	r26, r26
 5c0:	bb 1f       	adc	r27, r27
 5c2:	ee 1f       	adc	r30, r30
 5c4:	ff 1f       	adc	r31, r31
 5c6:	a2 17       	cp	r26, r18
 5c8:	b3 07       	cpc	r27, r19
 5ca:	e4 07       	cpc	r30, r20
 5cc:	f5 07       	cpc	r31, r21
 5ce:	20 f0       	brcs	.+8      	; 0x5d8 <__udivmodsi4_ep>
 5d0:	a2 1b       	sub	r26, r18
 5d2:	b3 0b       	sbc	r27, r19
 5d4:	e4 0b       	sbc	r30, r20
 5d6:	f5 0b       	sbc	r31, r21

000005d8 <__udivmodsi4_ep>:
 5d8:	66 1f       	adc	r22, r22
 5da:	77 1f       	adc	r23, r23
 5dc:	88 1f       	adc	r24, r24
 5de:	99 1f       	adc	r25, r25
 5e0:	1a 94       	dec	r1
 5e2:	69 f7       	brne	.-38     	; 0x5be <__udivmodsi4_loop>
 5e4:	60 95       	com	r22
 5e6:	70 95       	com	r23
 5e8:	80 95       	com	r24
 5ea:	90 95       	com	r25
 5ec:	9b 01       	movw	r18, r22
 5ee:	ac 01       	movw	r20, r24
 5f0:	bd 01       	movw	r22, r26
 5f2:	cf 01       	movw	r24, r30
 5f4:	08 95       	ret

000005f6 <__udivmodhi4>:
 5f6:	aa 1b       	sub	r26, r26
 5f8:	bb 1b       	sub	r27, r27
 5fa:	51 e1       	ldi	r21, 0x11	; 17
 5fc:	07 c0       	rjmp	.+14     	; 0x60c <__udivmodhi4_ep>

000005fe <__udivmodhi4_loop>:
 5fe:	aa 1f       	adc	r26, r26
 600:	bb 1f       	adc	r27, r27
 602:	a6 17       	cp	r26, r22
 604:	b7 07       	cpc	r27, r23
 606:	10 f0       	brcs	.+4      	; 0x60c <__udivmodhi4_ep>
 608:	a6 1b       	sub	r26, r22
 60a:	b7 0b       	sbc	r27, r23

0000060c <__udivmodhi4_ep>:
 60c:	88 1f       	adc	r24, r24
 60e:	99 1f       	adc	r25, r25
 610:	5a 95       	dec	r21
 612:	a9 f7       	brne	.-22     	; 0x5fe <__udivmodhi4_loop>
 614:	80 95       	com	r24
 616:	90 95       	com	r25
 618:	bc 01       	movw	r22, r24
 61a:	cd 01       	movw	r24, r26
 61c:	08 95       	ret

0000061e <sprintf>:
 61e:	ae e0       	ldi	r26, 0x0E	; 14
 620:	b0 e0       	ldi	r27, 0x00	; 0
 622:	e5 e1       	ldi	r30, 0x15	; 21
 624:	f3 e0       	ldi	r31, 0x03	; 3
 626:	0c 94 d0 05 	jmp	0xba0	; 0xba0 <__prologue_saves__+0x1c>
 62a:	0d 89       	ldd	r16, Y+21	; 0x15
 62c:	1e 89       	ldd	r17, Y+22	; 0x16
 62e:	86 e0       	ldi	r24, 0x06	; 6
 630:	8c 83       	std	Y+4, r24	; 0x04
 632:	1a 83       	std	Y+2, r17	; 0x02
 634:	09 83       	std	Y+1, r16	; 0x01
 636:	8f ef       	ldi	r24, 0xFF	; 255
 638:	9f e7       	ldi	r25, 0x7F	; 127
 63a:	9e 83       	std	Y+6, r25	; 0x06
 63c:	8d 83       	std	Y+5, r24	; 0x05
 63e:	ae 01       	movw	r20, r28
 640:	47 5e       	subi	r20, 0xE7	; 231
 642:	5f 4f       	sbci	r21, 0xFF	; 255
 644:	6f 89       	ldd	r22, Y+23	; 0x17
 646:	78 8d       	ldd	r23, Y+24	; 0x18
 648:	ce 01       	movw	r24, r28
 64a:	01 96       	adiw	r24, 0x01	; 1
 64c:	0e 94 31 03 	call	0x662	; 0x662 <vfprintf>
 650:	ef 81       	ldd	r30, Y+7	; 0x07
 652:	f8 85       	ldd	r31, Y+8	; 0x08
 654:	e0 0f       	add	r30, r16
 656:	f1 1f       	adc	r31, r17
 658:	10 82       	st	Z, r1
 65a:	2e 96       	adiw	r28, 0x0e	; 14
 65c:	e4 e0       	ldi	r30, 0x04	; 4
 65e:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__epilogue_restores__+0x1c>

00000662 <vfprintf>:
 662:	ab e0       	ldi	r26, 0x0B	; 11
 664:	b0 e0       	ldi	r27, 0x00	; 0
 666:	e7 e3       	ldi	r30, 0x37	; 55
 668:	f3 e0       	ldi	r31, 0x03	; 3
 66a:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <__prologue_saves__>
 66e:	6c 01       	movw	r12, r24
 670:	7b 01       	movw	r14, r22
 672:	8a 01       	movw	r16, r20
 674:	fc 01       	movw	r30, r24
 676:	17 82       	std	Z+7, r1	; 0x07
 678:	16 82       	std	Z+6, r1	; 0x06
 67a:	83 81       	ldd	r24, Z+3	; 0x03
 67c:	81 ff       	sbrs	r24, 1
 67e:	cc c1       	rjmp	.+920    	; 0xa18 <__stack+0x119>
 680:	ce 01       	movw	r24, r28
 682:	01 96       	adiw	r24, 0x01	; 1
 684:	3c 01       	movw	r6, r24
 686:	f6 01       	movw	r30, r12
 688:	93 81       	ldd	r25, Z+3	; 0x03
 68a:	f7 01       	movw	r30, r14
 68c:	93 fd       	sbrc	r25, 3
 68e:	85 91       	lpm	r24, Z+
 690:	93 ff       	sbrs	r25, 3
 692:	81 91       	ld	r24, Z+
 694:	7f 01       	movw	r14, r30
 696:	88 23       	and	r24, r24
 698:	09 f4       	brne	.+2      	; 0x69c <vfprintf+0x3a>
 69a:	ba c1       	rjmp	.+884    	; 0xa10 <__stack+0x111>
 69c:	85 32       	cpi	r24, 0x25	; 37
 69e:	39 f4       	brne	.+14     	; 0x6ae <vfprintf+0x4c>
 6a0:	93 fd       	sbrc	r25, 3
 6a2:	85 91       	lpm	r24, Z+
 6a4:	93 ff       	sbrs	r25, 3
 6a6:	81 91       	ld	r24, Z+
 6a8:	7f 01       	movw	r14, r30
 6aa:	85 32       	cpi	r24, 0x25	; 37
 6ac:	29 f4       	brne	.+10     	; 0x6b8 <vfprintf+0x56>
 6ae:	b6 01       	movw	r22, r12
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 6b6:	e7 cf       	rjmp	.-50     	; 0x686 <vfprintf+0x24>
 6b8:	91 2c       	mov	r9, r1
 6ba:	21 2c       	mov	r2, r1
 6bc:	31 2c       	mov	r3, r1
 6be:	ff e1       	ldi	r31, 0x1F	; 31
 6c0:	f3 15       	cp	r31, r3
 6c2:	d8 f0       	brcs	.+54     	; 0x6fa <vfprintf+0x98>
 6c4:	8b 32       	cpi	r24, 0x2B	; 43
 6c6:	79 f0       	breq	.+30     	; 0x6e6 <vfprintf+0x84>
 6c8:	38 f4       	brcc	.+14     	; 0x6d8 <vfprintf+0x76>
 6ca:	80 32       	cpi	r24, 0x20	; 32
 6cc:	79 f0       	breq	.+30     	; 0x6ec <vfprintf+0x8a>
 6ce:	83 32       	cpi	r24, 0x23	; 35
 6d0:	a1 f4       	brne	.+40     	; 0x6fa <vfprintf+0x98>
 6d2:	23 2d       	mov	r18, r3
 6d4:	20 61       	ori	r18, 0x10	; 16
 6d6:	1d c0       	rjmp	.+58     	; 0x712 <vfprintf+0xb0>
 6d8:	8d 32       	cpi	r24, 0x2D	; 45
 6da:	61 f0       	breq	.+24     	; 0x6f4 <vfprintf+0x92>
 6dc:	80 33       	cpi	r24, 0x30	; 48
 6de:	69 f4       	brne	.+26     	; 0x6fa <vfprintf+0x98>
 6e0:	23 2d       	mov	r18, r3
 6e2:	21 60       	ori	r18, 0x01	; 1
 6e4:	16 c0       	rjmp	.+44     	; 0x712 <vfprintf+0xb0>
 6e6:	83 2d       	mov	r24, r3
 6e8:	82 60       	ori	r24, 0x02	; 2
 6ea:	38 2e       	mov	r3, r24
 6ec:	e3 2d       	mov	r30, r3
 6ee:	e4 60       	ori	r30, 0x04	; 4
 6f0:	3e 2e       	mov	r3, r30
 6f2:	2a c0       	rjmp	.+84     	; 0x748 <vfprintf+0xe6>
 6f4:	f3 2d       	mov	r31, r3
 6f6:	f8 60       	ori	r31, 0x08	; 8
 6f8:	1d c0       	rjmp	.+58     	; 0x734 <vfprintf+0xd2>
 6fa:	37 fc       	sbrc	r3, 7
 6fc:	2d c0       	rjmp	.+90     	; 0x758 <vfprintf+0xf6>
 6fe:	20 ed       	ldi	r18, 0xD0	; 208
 700:	28 0f       	add	r18, r24
 702:	2a 30       	cpi	r18, 0x0A	; 10
 704:	40 f0       	brcs	.+16     	; 0x716 <vfprintf+0xb4>
 706:	8e 32       	cpi	r24, 0x2E	; 46
 708:	b9 f4       	brne	.+46     	; 0x738 <vfprintf+0xd6>
 70a:	36 fc       	sbrc	r3, 6
 70c:	81 c1       	rjmp	.+770    	; 0xa10 <__stack+0x111>
 70e:	23 2d       	mov	r18, r3
 710:	20 64       	ori	r18, 0x40	; 64
 712:	32 2e       	mov	r3, r18
 714:	19 c0       	rjmp	.+50     	; 0x748 <vfprintf+0xe6>
 716:	36 fe       	sbrs	r3, 6
 718:	06 c0       	rjmp	.+12     	; 0x726 <vfprintf+0xc4>
 71a:	8a e0       	ldi	r24, 0x0A	; 10
 71c:	98 9e       	mul	r9, r24
 71e:	20 0d       	add	r18, r0
 720:	11 24       	eor	r1, r1
 722:	92 2e       	mov	r9, r18
 724:	11 c0       	rjmp	.+34     	; 0x748 <vfprintf+0xe6>
 726:	ea e0       	ldi	r30, 0x0A	; 10
 728:	2e 9e       	mul	r2, r30
 72a:	20 0d       	add	r18, r0
 72c:	11 24       	eor	r1, r1
 72e:	22 2e       	mov	r2, r18
 730:	f3 2d       	mov	r31, r3
 732:	f0 62       	ori	r31, 0x20	; 32
 734:	3f 2e       	mov	r3, r31
 736:	08 c0       	rjmp	.+16     	; 0x748 <vfprintf+0xe6>
 738:	8c 36       	cpi	r24, 0x6C	; 108
 73a:	21 f4       	brne	.+8      	; 0x744 <vfprintf+0xe2>
 73c:	83 2d       	mov	r24, r3
 73e:	80 68       	ori	r24, 0x80	; 128
 740:	38 2e       	mov	r3, r24
 742:	02 c0       	rjmp	.+4      	; 0x748 <vfprintf+0xe6>
 744:	88 36       	cpi	r24, 0x68	; 104
 746:	41 f4       	brne	.+16     	; 0x758 <vfprintf+0xf6>
 748:	f7 01       	movw	r30, r14
 74a:	93 fd       	sbrc	r25, 3
 74c:	85 91       	lpm	r24, Z+
 74e:	93 ff       	sbrs	r25, 3
 750:	81 91       	ld	r24, Z+
 752:	7f 01       	movw	r14, r30
 754:	81 11       	cpse	r24, r1
 756:	b3 cf       	rjmp	.-154    	; 0x6be <vfprintf+0x5c>
 758:	98 2f       	mov	r25, r24
 75a:	9f 7d       	andi	r25, 0xDF	; 223
 75c:	95 54       	subi	r25, 0x45	; 69
 75e:	93 30       	cpi	r25, 0x03	; 3
 760:	28 f4       	brcc	.+10     	; 0x76c <vfprintf+0x10a>
 762:	0c 5f       	subi	r16, 0xFC	; 252
 764:	1f 4f       	sbci	r17, 0xFF	; 255
 766:	9f e3       	ldi	r25, 0x3F	; 63
 768:	99 83       	std	Y+1, r25	; 0x01
 76a:	0d c0       	rjmp	.+26     	; 0x786 <vfprintf+0x124>
 76c:	83 36       	cpi	r24, 0x63	; 99
 76e:	31 f0       	breq	.+12     	; 0x77c <vfprintf+0x11a>
 770:	83 37       	cpi	r24, 0x73	; 115
 772:	71 f0       	breq	.+28     	; 0x790 <vfprintf+0x12e>
 774:	83 35       	cpi	r24, 0x53	; 83
 776:	09 f0       	breq	.+2      	; 0x77a <vfprintf+0x118>
 778:	59 c0       	rjmp	.+178    	; 0x82c <vfprintf+0x1ca>
 77a:	21 c0       	rjmp	.+66     	; 0x7be <vfprintf+0x15c>
 77c:	f8 01       	movw	r30, r16
 77e:	80 81       	ld	r24, Z
 780:	89 83       	std	Y+1, r24	; 0x01
 782:	0e 5f       	subi	r16, 0xFE	; 254
 784:	1f 4f       	sbci	r17, 0xFF	; 255
 786:	88 24       	eor	r8, r8
 788:	83 94       	inc	r8
 78a:	91 2c       	mov	r9, r1
 78c:	53 01       	movw	r10, r6
 78e:	13 c0       	rjmp	.+38     	; 0x7b6 <vfprintf+0x154>
 790:	28 01       	movw	r4, r16
 792:	f2 e0       	ldi	r31, 0x02	; 2
 794:	4f 0e       	add	r4, r31
 796:	51 1c       	adc	r5, r1
 798:	f8 01       	movw	r30, r16
 79a:	a0 80       	ld	r10, Z
 79c:	b1 80       	ldd	r11, Z+1	; 0x01
 79e:	36 fe       	sbrs	r3, 6
 7a0:	03 c0       	rjmp	.+6      	; 0x7a8 <vfprintf+0x146>
 7a2:	69 2d       	mov	r22, r9
 7a4:	70 e0       	ldi	r23, 0x00	; 0
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <vfprintf+0x14a>
 7a8:	6f ef       	ldi	r22, 0xFF	; 255
 7aa:	7f ef       	ldi	r23, 0xFF	; 255
 7ac:	c5 01       	movw	r24, r10
 7ae:	0e 94 1d 05 	call	0xa3a	; 0xa3a <strnlen>
 7b2:	4c 01       	movw	r8, r24
 7b4:	82 01       	movw	r16, r4
 7b6:	f3 2d       	mov	r31, r3
 7b8:	ff 77       	andi	r31, 0x7F	; 127
 7ba:	3f 2e       	mov	r3, r31
 7bc:	16 c0       	rjmp	.+44     	; 0x7ea <vfprintf+0x188>
 7be:	28 01       	movw	r4, r16
 7c0:	22 e0       	ldi	r18, 0x02	; 2
 7c2:	42 0e       	add	r4, r18
 7c4:	51 1c       	adc	r5, r1
 7c6:	f8 01       	movw	r30, r16
 7c8:	a0 80       	ld	r10, Z
 7ca:	b1 80       	ldd	r11, Z+1	; 0x01
 7cc:	36 fe       	sbrs	r3, 6
 7ce:	03 c0       	rjmp	.+6      	; 0x7d6 <vfprintf+0x174>
 7d0:	69 2d       	mov	r22, r9
 7d2:	70 e0       	ldi	r23, 0x00	; 0
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <vfprintf+0x178>
 7d6:	6f ef       	ldi	r22, 0xFF	; 255
 7d8:	7f ef       	ldi	r23, 0xFF	; 255
 7da:	c5 01       	movw	r24, r10
 7dc:	0e 94 12 05 	call	0xa24	; 0xa24 <strnlen_P>
 7e0:	4c 01       	movw	r8, r24
 7e2:	f3 2d       	mov	r31, r3
 7e4:	f0 68       	ori	r31, 0x80	; 128
 7e6:	3f 2e       	mov	r3, r31
 7e8:	82 01       	movw	r16, r4
 7ea:	33 fc       	sbrc	r3, 3
 7ec:	1b c0       	rjmp	.+54     	; 0x824 <vfprintf+0x1c2>
 7ee:	82 2d       	mov	r24, r2
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	88 16       	cp	r8, r24
 7f4:	99 06       	cpc	r9, r25
 7f6:	b0 f4       	brcc	.+44     	; 0x824 <vfprintf+0x1c2>
 7f8:	b6 01       	movw	r22, r12
 7fa:	80 e2       	ldi	r24, 0x20	; 32
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 802:	2a 94       	dec	r2
 804:	f4 cf       	rjmp	.-24     	; 0x7ee <vfprintf+0x18c>
 806:	f5 01       	movw	r30, r10
 808:	37 fc       	sbrc	r3, 7
 80a:	85 91       	lpm	r24, Z+
 80c:	37 fe       	sbrs	r3, 7
 80e:	81 91       	ld	r24, Z+
 810:	5f 01       	movw	r10, r30
 812:	b6 01       	movw	r22, r12
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 81a:	21 10       	cpse	r2, r1
 81c:	2a 94       	dec	r2
 81e:	21 e0       	ldi	r18, 0x01	; 1
 820:	82 1a       	sub	r8, r18
 822:	91 08       	sbc	r9, r1
 824:	81 14       	cp	r8, r1
 826:	91 04       	cpc	r9, r1
 828:	71 f7       	brne	.-36     	; 0x806 <vfprintf+0x1a4>
 82a:	e8 c0       	rjmp	.+464    	; 0x9fc <__stack+0xfd>
 82c:	84 36       	cpi	r24, 0x64	; 100
 82e:	11 f0       	breq	.+4      	; 0x834 <vfprintf+0x1d2>
 830:	89 36       	cpi	r24, 0x69	; 105
 832:	41 f5       	brne	.+80     	; 0x884 <vfprintf+0x222>
 834:	f8 01       	movw	r30, r16
 836:	37 fe       	sbrs	r3, 7
 838:	07 c0       	rjmp	.+14     	; 0x848 <vfprintf+0x1e6>
 83a:	60 81       	ld	r22, Z
 83c:	71 81       	ldd	r23, Z+1	; 0x01
 83e:	82 81       	ldd	r24, Z+2	; 0x02
 840:	93 81       	ldd	r25, Z+3	; 0x03
 842:	0c 5f       	subi	r16, 0xFC	; 252
 844:	1f 4f       	sbci	r17, 0xFF	; 255
 846:	08 c0       	rjmp	.+16     	; 0x858 <vfprintf+0x1f6>
 848:	60 81       	ld	r22, Z
 84a:	71 81       	ldd	r23, Z+1	; 0x01
 84c:	07 2e       	mov	r0, r23
 84e:	00 0c       	add	r0, r0
 850:	88 0b       	sbc	r24, r24
 852:	99 0b       	sbc	r25, r25
 854:	0e 5f       	subi	r16, 0xFE	; 254
 856:	1f 4f       	sbci	r17, 0xFF	; 255
 858:	f3 2d       	mov	r31, r3
 85a:	ff 76       	andi	r31, 0x6F	; 111
 85c:	3f 2e       	mov	r3, r31
 85e:	97 ff       	sbrs	r25, 7
 860:	09 c0       	rjmp	.+18     	; 0x874 <vfprintf+0x212>
 862:	90 95       	com	r25
 864:	80 95       	com	r24
 866:	70 95       	com	r23
 868:	61 95       	neg	r22
 86a:	7f 4f       	sbci	r23, 0xFF	; 255
 86c:	8f 4f       	sbci	r24, 0xFF	; 255
 86e:	9f 4f       	sbci	r25, 0xFF	; 255
 870:	f0 68       	ori	r31, 0x80	; 128
 872:	3f 2e       	mov	r3, r31
 874:	2a e0       	ldi	r18, 0x0A	; 10
 876:	30 e0       	ldi	r19, 0x00	; 0
 878:	a3 01       	movw	r20, r6
 87a:	0e 94 64 05 	call	0xac8	; 0xac8 <__ultoa_invert>
 87e:	88 2e       	mov	r8, r24
 880:	86 18       	sub	r8, r6
 882:	45 c0       	rjmp	.+138    	; 0x90e <__stack+0xf>
 884:	85 37       	cpi	r24, 0x75	; 117
 886:	31 f4       	brne	.+12     	; 0x894 <vfprintf+0x232>
 888:	23 2d       	mov	r18, r3
 88a:	2f 7e       	andi	r18, 0xEF	; 239
 88c:	b2 2e       	mov	r11, r18
 88e:	2a e0       	ldi	r18, 0x0A	; 10
 890:	30 e0       	ldi	r19, 0x00	; 0
 892:	25 c0       	rjmp	.+74     	; 0x8de <vfprintf+0x27c>
 894:	93 2d       	mov	r25, r3
 896:	99 7f       	andi	r25, 0xF9	; 249
 898:	b9 2e       	mov	r11, r25
 89a:	8f 36       	cpi	r24, 0x6F	; 111
 89c:	c1 f0       	breq	.+48     	; 0x8ce <vfprintf+0x26c>
 89e:	18 f4       	brcc	.+6      	; 0x8a6 <vfprintf+0x244>
 8a0:	88 35       	cpi	r24, 0x58	; 88
 8a2:	79 f0       	breq	.+30     	; 0x8c2 <vfprintf+0x260>
 8a4:	b5 c0       	rjmp	.+362    	; 0xa10 <__stack+0x111>
 8a6:	80 37       	cpi	r24, 0x70	; 112
 8a8:	19 f0       	breq	.+6      	; 0x8b0 <vfprintf+0x24e>
 8aa:	88 37       	cpi	r24, 0x78	; 120
 8ac:	21 f0       	breq	.+8      	; 0x8b6 <vfprintf+0x254>
 8ae:	b0 c0       	rjmp	.+352    	; 0xa10 <__stack+0x111>
 8b0:	e9 2f       	mov	r30, r25
 8b2:	e0 61       	ori	r30, 0x10	; 16
 8b4:	be 2e       	mov	r11, r30
 8b6:	b4 fe       	sbrs	r11, 4
 8b8:	0d c0       	rjmp	.+26     	; 0x8d4 <vfprintf+0x272>
 8ba:	fb 2d       	mov	r31, r11
 8bc:	f4 60       	ori	r31, 0x04	; 4
 8be:	bf 2e       	mov	r11, r31
 8c0:	09 c0       	rjmp	.+18     	; 0x8d4 <vfprintf+0x272>
 8c2:	34 fe       	sbrs	r3, 4
 8c4:	0a c0       	rjmp	.+20     	; 0x8da <vfprintf+0x278>
 8c6:	29 2f       	mov	r18, r25
 8c8:	26 60       	ori	r18, 0x06	; 6
 8ca:	b2 2e       	mov	r11, r18
 8cc:	06 c0       	rjmp	.+12     	; 0x8da <vfprintf+0x278>
 8ce:	28 e0       	ldi	r18, 0x08	; 8
 8d0:	30 e0       	ldi	r19, 0x00	; 0
 8d2:	05 c0       	rjmp	.+10     	; 0x8de <vfprintf+0x27c>
 8d4:	20 e1       	ldi	r18, 0x10	; 16
 8d6:	30 e0       	ldi	r19, 0x00	; 0
 8d8:	02 c0       	rjmp	.+4      	; 0x8de <vfprintf+0x27c>
 8da:	20 e1       	ldi	r18, 0x10	; 16
 8dc:	32 e0       	ldi	r19, 0x02	; 2
 8de:	f8 01       	movw	r30, r16
 8e0:	b7 fe       	sbrs	r11, 7
 8e2:	07 c0       	rjmp	.+14     	; 0x8f2 <vfprintf+0x290>
 8e4:	60 81       	ld	r22, Z
 8e6:	71 81       	ldd	r23, Z+1	; 0x01
 8e8:	82 81       	ldd	r24, Z+2	; 0x02
 8ea:	93 81       	ldd	r25, Z+3	; 0x03
 8ec:	0c 5f       	subi	r16, 0xFC	; 252
 8ee:	1f 4f       	sbci	r17, 0xFF	; 255
 8f0:	06 c0       	rjmp	.+12     	; 0x8fe <vfprintf+0x29c>
 8f2:	60 81       	ld	r22, Z
 8f4:	71 81       	ldd	r23, Z+1	; 0x01
 8f6:	80 e0       	ldi	r24, 0x00	; 0
 8f8:	90 e0       	ldi	r25, 0x00	; 0
 8fa:	0e 5f       	subi	r16, 0xFE	; 254
 8fc:	1f 4f       	sbci	r17, 0xFF	; 255
 8fe:	a3 01       	movw	r20, r6
 900:	0e 94 64 05 	call	0xac8	; 0xac8 <__ultoa_invert>
 904:	88 2e       	mov	r8, r24
 906:	86 18       	sub	r8, r6
 908:	fb 2d       	mov	r31, r11
 90a:	ff 77       	andi	r31, 0x7F	; 127
 90c:	3f 2e       	mov	r3, r31
 90e:	36 fe       	sbrs	r3, 6
 910:	0d c0       	rjmp	.+26     	; 0x92c <__stack+0x2d>
 912:	23 2d       	mov	r18, r3
 914:	2e 7f       	andi	r18, 0xFE	; 254
 916:	a2 2e       	mov	r10, r18
 918:	89 14       	cp	r8, r9
 91a:	58 f4       	brcc	.+22     	; 0x932 <__stack+0x33>
 91c:	34 fe       	sbrs	r3, 4
 91e:	0b c0       	rjmp	.+22     	; 0x936 <__stack+0x37>
 920:	32 fc       	sbrc	r3, 2
 922:	09 c0       	rjmp	.+18     	; 0x936 <__stack+0x37>
 924:	83 2d       	mov	r24, r3
 926:	8e 7e       	andi	r24, 0xEE	; 238
 928:	a8 2e       	mov	r10, r24
 92a:	05 c0       	rjmp	.+10     	; 0x936 <__stack+0x37>
 92c:	b8 2c       	mov	r11, r8
 92e:	a3 2c       	mov	r10, r3
 930:	03 c0       	rjmp	.+6      	; 0x938 <__stack+0x39>
 932:	b8 2c       	mov	r11, r8
 934:	01 c0       	rjmp	.+2      	; 0x938 <__stack+0x39>
 936:	b9 2c       	mov	r11, r9
 938:	a4 fe       	sbrs	r10, 4
 93a:	0f c0       	rjmp	.+30     	; 0x95a <__stack+0x5b>
 93c:	fe 01       	movw	r30, r28
 93e:	e8 0d       	add	r30, r8
 940:	f1 1d       	adc	r31, r1
 942:	80 81       	ld	r24, Z
 944:	80 33       	cpi	r24, 0x30	; 48
 946:	21 f4       	brne	.+8      	; 0x950 <__stack+0x51>
 948:	9a 2d       	mov	r25, r10
 94a:	99 7e       	andi	r25, 0xE9	; 233
 94c:	a9 2e       	mov	r10, r25
 94e:	09 c0       	rjmp	.+18     	; 0x962 <__stack+0x63>
 950:	a2 fe       	sbrs	r10, 2
 952:	06 c0       	rjmp	.+12     	; 0x960 <__stack+0x61>
 954:	b3 94       	inc	r11
 956:	b3 94       	inc	r11
 958:	04 c0       	rjmp	.+8      	; 0x962 <__stack+0x63>
 95a:	8a 2d       	mov	r24, r10
 95c:	86 78       	andi	r24, 0x86	; 134
 95e:	09 f0       	breq	.+2      	; 0x962 <__stack+0x63>
 960:	b3 94       	inc	r11
 962:	a3 fc       	sbrc	r10, 3
 964:	11 c0       	rjmp	.+34     	; 0x988 <__stack+0x89>
 966:	a0 fe       	sbrs	r10, 0
 968:	06 c0       	rjmp	.+12     	; 0x976 <__stack+0x77>
 96a:	b2 14       	cp	r11, r2
 96c:	88 f4       	brcc	.+34     	; 0x990 <__stack+0x91>
 96e:	28 0c       	add	r2, r8
 970:	92 2c       	mov	r9, r2
 972:	9b 18       	sub	r9, r11
 974:	0e c0       	rjmp	.+28     	; 0x992 <__stack+0x93>
 976:	b2 14       	cp	r11, r2
 978:	60 f4       	brcc	.+24     	; 0x992 <__stack+0x93>
 97a:	b6 01       	movw	r22, r12
 97c:	80 e2       	ldi	r24, 0x20	; 32
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 984:	b3 94       	inc	r11
 986:	f7 cf       	rjmp	.-18     	; 0x976 <__stack+0x77>
 988:	b2 14       	cp	r11, r2
 98a:	18 f4       	brcc	.+6      	; 0x992 <__stack+0x93>
 98c:	2b 18       	sub	r2, r11
 98e:	02 c0       	rjmp	.+4      	; 0x994 <__stack+0x95>
 990:	98 2c       	mov	r9, r8
 992:	21 2c       	mov	r2, r1
 994:	a4 fe       	sbrs	r10, 4
 996:	10 c0       	rjmp	.+32     	; 0x9b8 <__stack+0xb9>
 998:	b6 01       	movw	r22, r12
 99a:	80 e3       	ldi	r24, 0x30	; 48
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 9a2:	a2 fe       	sbrs	r10, 2
 9a4:	17 c0       	rjmp	.+46     	; 0x9d4 <__stack+0xd5>
 9a6:	a1 fc       	sbrc	r10, 1
 9a8:	03 c0       	rjmp	.+6      	; 0x9b0 <__stack+0xb1>
 9aa:	88 e7       	ldi	r24, 0x78	; 120
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	02 c0       	rjmp	.+4      	; 0x9b4 <__stack+0xb5>
 9b0:	88 e5       	ldi	r24, 0x58	; 88
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	b6 01       	movw	r22, r12
 9b6:	0c c0       	rjmp	.+24     	; 0x9d0 <__stack+0xd1>
 9b8:	8a 2d       	mov	r24, r10
 9ba:	86 78       	andi	r24, 0x86	; 134
 9bc:	59 f0       	breq	.+22     	; 0x9d4 <__stack+0xd5>
 9be:	a1 fe       	sbrs	r10, 1
 9c0:	02 c0       	rjmp	.+4      	; 0x9c6 <__stack+0xc7>
 9c2:	8b e2       	ldi	r24, 0x2B	; 43
 9c4:	01 c0       	rjmp	.+2      	; 0x9c8 <__stack+0xc9>
 9c6:	80 e2       	ldi	r24, 0x20	; 32
 9c8:	a7 fc       	sbrc	r10, 7
 9ca:	8d e2       	ldi	r24, 0x2D	; 45
 9cc:	b6 01       	movw	r22, r12
 9ce:	90 e0       	ldi	r25, 0x00	; 0
 9d0:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 9d4:	89 14       	cp	r8, r9
 9d6:	38 f4       	brcc	.+14     	; 0x9e6 <__stack+0xe7>
 9d8:	b6 01       	movw	r22, r12
 9da:	80 e3       	ldi	r24, 0x30	; 48
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 9e2:	9a 94       	dec	r9
 9e4:	f7 cf       	rjmp	.-18     	; 0x9d4 <__stack+0xd5>
 9e6:	8a 94       	dec	r8
 9e8:	f3 01       	movw	r30, r6
 9ea:	e8 0d       	add	r30, r8
 9ec:	f1 1d       	adc	r31, r1
 9ee:	80 81       	ld	r24, Z
 9f0:	b6 01       	movw	r22, r12
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 9f8:	81 10       	cpse	r8, r1
 9fa:	f5 cf       	rjmp	.-22     	; 0x9e6 <__stack+0xe7>
 9fc:	22 20       	and	r2, r2
 9fe:	09 f4       	brne	.+2      	; 0xa02 <__stack+0x103>
 a00:	42 ce       	rjmp	.-892    	; 0x686 <vfprintf+0x24>
 a02:	b6 01       	movw	r22, r12
 a04:	80 e2       	ldi	r24, 0x20	; 32
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 a0c:	2a 94       	dec	r2
 a0e:	f6 cf       	rjmp	.-20     	; 0x9fc <__stack+0xfd>
 a10:	f6 01       	movw	r30, r12
 a12:	86 81       	ldd	r24, Z+6	; 0x06
 a14:	97 81       	ldd	r25, Z+7	; 0x07
 a16:	02 c0       	rjmp	.+4      	; 0xa1c <__stack+0x11d>
 a18:	8f ef       	ldi	r24, 0xFF	; 255
 a1a:	9f ef       	ldi	r25, 0xFF	; 255
 a1c:	2b 96       	adiw	r28, 0x0b	; 11
 a1e:	e2 e1       	ldi	r30, 0x12	; 18
 a20:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__epilogue_restores__>

00000a24 <strnlen_P>:
 a24:	fc 01       	movw	r30, r24
 a26:	05 90       	lpm	r0, Z+
 a28:	61 50       	subi	r22, 0x01	; 1
 a2a:	70 40       	sbci	r23, 0x00	; 0
 a2c:	01 10       	cpse	r0, r1
 a2e:	d8 f7       	brcc	.-10     	; 0xa26 <strnlen_P+0x2>
 a30:	80 95       	com	r24
 a32:	90 95       	com	r25
 a34:	8e 0f       	add	r24, r30
 a36:	9f 1f       	adc	r25, r31
 a38:	08 95       	ret

00000a3a <strnlen>:
 a3a:	fc 01       	movw	r30, r24
 a3c:	61 50       	subi	r22, 0x01	; 1
 a3e:	70 40       	sbci	r23, 0x00	; 0
 a40:	01 90       	ld	r0, Z+
 a42:	01 10       	cpse	r0, r1
 a44:	d8 f7       	brcc	.-10     	; 0xa3c <strnlen+0x2>
 a46:	80 95       	com	r24
 a48:	90 95       	com	r25
 a4a:	8e 0f       	add	r24, r30
 a4c:	9f 1f       	adc	r25, r31
 a4e:	08 95       	ret

00000a50 <fputc>:
 a50:	0f 93       	push	r16
 a52:	1f 93       	push	r17
 a54:	cf 93       	push	r28
 a56:	df 93       	push	r29
 a58:	fb 01       	movw	r30, r22
 a5a:	23 81       	ldd	r18, Z+3	; 0x03
 a5c:	21 fd       	sbrc	r18, 1
 a5e:	03 c0       	rjmp	.+6      	; 0xa66 <fputc+0x16>
 a60:	8f ef       	ldi	r24, 0xFF	; 255
 a62:	9f ef       	ldi	r25, 0xFF	; 255
 a64:	2c c0       	rjmp	.+88     	; 0xabe <fputc+0x6e>
 a66:	22 ff       	sbrs	r18, 2
 a68:	16 c0       	rjmp	.+44     	; 0xa96 <fputc+0x46>
 a6a:	46 81       	ldd	r20, Z+6	; 0x06
 a6c:	57 81       	ldd	r21, Z+7	; 0x07
 a6e:	24 81       	ldd	r18, Z+4	; 0x04
 a70:	35 81       	ldd	r19, Z+5	; 0x05
 a72:	42 17       	cp	r20, r18
 a74:	53 07       	cpc	r21, r19
 a76:	44 f4       	brge	.+16     	; 0xa88 <fputc+0x38>
 a78:	a0 81       	ld	r26, Z
 a7a:	b1 81       	ldd	r27, Z+1	; 0x01
 a7c:	9d 01       	movw	r18, r26
 a7e:	2f 5f       	subi	r18, 0xFF	; 255
 a80:	3f 4f       	sbci	r19, 0xFF	; 255
 a82:	31 83       	std	Z+1, r19	; 0x01
 a84:	20 83       	st	Z, r18
 a86:	8c 93       	st	X, r24
 a88:	26 81       	ldd	r18, Z+6	; 0x06
 a8a:	37 81       	ldd	r19, Z+7	; 0x07
 a8c:	2f 5f       	subi	r18, 0xFF	; 255
 a8e:	3f 4f       	sbci	r19, 0xFF	; 255
 a90:	37 83       	std	Z+7, r19	; 0x07
 a92:	26 83       	std	Z+6, r18	; 0x06
 a94:	14 c0       	rjmp	.+40     	; 0xabe <fputc+0x6e>
 a96:	8b 01       	movw	r16, r22
 a98:	ec 01       	movw	r28, r24
 a9a:	fb 01       	movw	r30, r22
 a9c:	00 84       	ldd	r0, Z+8	; 0x08
 a9e:	f1 85       	ldd	r31, Z+9	; 0x09
 aa0:	e0 2d       	mov	r30, r0
 aa2:	09 95       	icall
 aa4:	89 2b       	or	r24, r25
 aa6:	e1 f6       	brne	.-72     	; 0xa60 <fputc+0x10>
 aa8:	d8 01       	movw	r26, r16
 aaa:	16 96       	adiw	r26, 0x06	; 6
 aac:	8d 91       	ld	r24, X+
 aae:	9c 91       	ld	r25, X
 ab0:	17 97       	sbiw	r26, 0x07	; 7
 ab2:	01 96       	adiw	r24, 0x01	; 1
 ab4:	17 96       	adiw	r26, 0x07	; 7
 ab6:	9c 93       	st	X, r25
 ab8:	8e 93       	st	-X, r24
 aba:	16 97       	sbiw	r26, 0x06	; 6
 abc:	ce 01       	movw	r24, r28
 abe:	df 91       	pop	r29
 ac0:	cf 91       	pop	r28
 ac2:	1f 91       	pop	r17
 ac4:	0f 91       	pop	r16
 ac6:	08 95       	ret

00000ac8 <__ultoa_invert>:
 ac8:	fa 01       	movw	r30, r20
 aca:	aa 27       	eor	r26, r26
 acc:	28 30       	cpi	r18, 0x08	; 8
 ace:	51 f1       	breq	.+84     	; 0xb24 <__ultoa_invert+0x5c>
 ad0:	20 31       	cpi	r18, 0x10	; 16
 ad2:	81 f1       	breq	.+96     	; 0xb34 <__ultoa_invert+0x6c>
 ad4:	e8 94       	clt
 ad6:	6f 93       	push	r22
 ad8:	6e 7f       	andi	r22, 0xFE	; 254
 ada:	6e 5f       	subi	r22, 0xFE	; 254
 adc:	7f 4f       	sbci	r23, 0xFF	; 255
 ade:	8f 4f       	sbci	r24, 0xFF	; 255
 ae0:	9f 4f       	sbci	r25, 0xFF	; 255
 ae2:	af 4f       	sbci	r26, 0xFF	; 255
 ae4:	b1 e0       	ldi	r27, 0x01	; 1
 ae6:	3e d0       	rcall	.+124    	; 0xb64 <__ultoa_invert+0x9c>
 ae8:	b4 e0       	ldi	r27, 0x04	; 4
 aea:	3c d0       	rcall	.+120    	; 0xb64 <__ultoa_invert+0x9c>
 aec:	67 0f       	add	r22, r23
 aee:	78 1f       	adc	r23, r24
 af0:	89 1f       	adc	r24, r25
 af2:	9a 1f       	adc	r25, r26
 af4:	a1 1d       	adc	r26, r1
 af6:	68 0f       	add	r22, r24
 af8:	79 1f       	adc	r23, r25
 afa:	8a 1f       	adc	r24, r26
 afc:	91 1d       	adc	r25, r1
 afe:	a1 1d       	adc	r26, r1
 b00:	6a 0f       	add	r22, r26
 b02:	71 1d       	adc	r23, r1
 b04:	81 1d       	adc	r24, r1
 b06:	91 1d       	adc	r25, r1
 b08:	a1 1d       	adc	r26, r1
 b0a:	20 d0       	rcall	.+64     	; 0xb4c <__ultoa_invert+0x84>
 b0c:	09 f4       	brne	.+2      	; 0xb10 <__ultoa_invert+0x48>
 b0e:	68 94       	set
 b10:	3f 91       	pop	r19
 b12:	2a e0       	ldi	r18, 0x0A	; 10
 b14:	26 9f       	mul	r18, r22
 b16:	11 24       	eor	r1, r1
 b18:	30 19       	sub	r19, r0
 b1a:	30 5d       	subi	r19, 0xD0	; 208
 b1c:	31 93       	st	Z+, r19
 b1e:	de f6       	brtc	.-74     	; 0xad6 <__ultoa_invert+0xe>
 b20:	cf 01       	movw	r24, r30
 b22:	08 95       	ret
 b24:	46 2f       	mov	r20, r22
 b26:	47 70       	andi	r20, 0x07	; 7
 b28:	40 5d       	subi	r20, 0xD0	; 208
 b2a:	41 93       	st	Z+, r20
 b2c:	b3 e0       	ldi	r27, 0x03	; 3
 b2e:	0f d0       	rcall	.+30     	; 0xb4e <__ultoa_invert+0x86>
 b30:	c9 f7       	brne	.-14     	; 0xb24 <__ultoa_invert+0x5c>
 b32:	f6 cf       	rjmp	.-20     	; 0xb20 <__ultoa_invert+0x58>
 b34:	46 2f       	mov	r20, r22
 b36:	4f 70       	andi	r20, 0x0F	; 15
 b38:	40 5d       	subi	r20, 0xD0	; 208
 b3a:	4a 33       	cpi	r20, 0x3A	; 58
 b3c:	18 f0       	brcs	.+6      	; 0xb44 <__ultoa_invert+0x7c>
 b3e:	49 5d       	subi	r20, 0xD9	; 217
 b40:	31 fd       	sbrc	r19, 1
 b42:	40 52       	subi	r20, 0x20	; 32
 b44:	41 93       	st	Z+, r20
 b46:	02 d0       	rcall	.+4      	; 0xb4c <__ultoa_invert+0x84>
 b48:	a9 f7       	brne	.-22     	; 0xb34 <__ultoa_invert+0x6c>
 b4a:	ea cf       	rjmp	.-44     	; 0xb20 <__ultoa_invert+0x58>
 b4c:	b4 e0       	ldi	r27, 0x04	; 4
 b4e:	a6 95       	lsr	r26
 b50:	97 95       	ror	r25
 b52:	87 95       	ror	r24
 b54:	77 95       	ror	r23
 b56:	67 95       	ror	r22
 b58:	ba 95       	dec	r27
 b5a:	c9 f7       	brne	.-14     	; 0xb4e <__ultoa_invert+0x86>
 b5c:	00 97       	sbiw	r24, 0x00	; 0
 b5e:	61 05       	cpc	r22, r1
 b60:	71 05       	cpc	r23, r1
 b62:	08 95       	ret
 b64:	9b 01       	movw	r18, r22
 b66:	ac 01       	movw	r20, r24
 b68:	0a 2e       	mov	r0, r26
 b6a:	06 94       	lsr	r0
 b6c:	57 95       	ror	r21
 b6e:	47 95       	ror	r20
 b70:	37 95       	ror	r19
 b72:	27 95       	ror	r18
 b74:	ba 95       	dec	r27
 b76:	c9 f7       	brne	.-14     	; 0xb6a <__ultoa_invert+0xa2>
 b78:	62 0f       	add	r22, r18
 b7a:	73 1f       	adc	r23, r19
 b7c:	84 1f       	adc	r24, r20
 b7e:	95 1f       	adc	r25, r21
 b80:	a0 1d       	adc	r26, r0
 b82:	08 95       	ret

00000b84 <__prologue_saves__>:
 b84:	2f 92       	push	r2
 b86:	3f 92       	push	r3
 b88:	4f 92       	push	r4
 b8a:	5f 92       	push	r5
 b8c:	6f 92       	push	r6
 b8e:	7f 92       	push	r7
 b90:	8f 92       	push	r8
 b92:	9f 92       	push	r9
 b94:	af 92       	push	r10
 b96:	bf 92       	push	r11
 b98:	cf 92       	push	r12
 b9a:	df 92       	push	r13
 b9c:	ef 92       	push	r14
 b9e:	ff 92       	push	r15
 ba0:	0f 93       	push	r16
 ba2:	1f 93       	push	r17
 ba4:	cf 93       	push	r28
 ba6:	df 93       	push	r29
 ba8:	cd b7       	in	r28, 0x3d	; 61
 baa:	de b7       	in	r29, 0x3e	; 62
 bac:	ca 1b       	sub	r28, r26
 bae:	db 0b       	sbc	r29, r27
 bb0:	0f b6       	in	r0, 0x3f	; 63
 bb2:	f8 94       	cli
 bb4:	de bf       	out	0x3e, r29	; 62
 bb6:	0f be       	out	0x3f, r0	; 63
 bb8:	cd bf       	out	0x3d, r28	; 61
 bba:	09 94       	ijmp

00000bbc <__epilogue_restores__>:
 bbc:	2a 88       	ldd	r2, Y+18	; 0x12
 bbe:	39 88       	ldd	r3, Y+17	; 0x11
 bc0:	48 88       	ldd	r4, Y+16	; 0x10
 bc2:	5f 84       	ldd	r5, Y+15	; 0x0f
 bc4:	6e 84       	ldd	r6, Y+14	; 0x0e
 bc6:	7d 84       	ldd	r7, Y+13	; 0x0d
 bc8:	8c 84       	ldd	r8, Y+12	; 0x0c
 bca:	9b 84       	ldd	r9, Y+11	; 0x0b
 bcc:	aa 84       	ldd	r10, Y+10	; 0x0a
 bce:	b9 84       	ldd	r11, Y+9	; 0x09
 bd0:	c8 84       	ldd	r12, Y+8	; 0x08
 bd2:	df 80       	ldd	r13, Y+7	; 0x07
 bd4:	ee 80       	ldd	r14, Y+6	; 0x06
 bd6:	fd 80       	ldd	r15, Y+5	; 0x05
 bd8:	0c 81       	ldd	r16, Y+4	; 0x04
 bda:	1b 81       	ldd	r17, Y+3	; 0x03
 bdc:	aa 81       	ldd	r26, Y+2	; 0x02
 bde:	b9 81       	ldd	r27, Y+1	; 0x01
 be0:	ce 0f       	add	r28, r30
 be2:	d1 1d       	adc	r29, r1
 be4:	0f b6       	in	r0, 0x3f	; 63
 be6:	f8 94       	cli
 be8:	de bf       	out	0x3e, r29	; 62
 bea:	0f be       	out	0x3f, r0	; 63
 bec:	cd bf       	out	0x3d, r28	; 61
 bee:	ed 01       	movw	r28, r26
 bf0:	08 95       	ret

00000bf2 <_exit>:
 bf2:	f8 94       	cli

00000bf4 <__stop_program>:
 bf4:	ff cf       	rjmp	.-2      	; 0xbf4 <__stop_program>
