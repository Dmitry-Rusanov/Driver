
Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000072  00800100  000014b4  00001548  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003d  00800172  00800172  000015ba  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001618  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00001658  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001477  00000000  00000000  00001750  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000095f  00000000  00000000  00002bc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009cd  00000000  00000000  00003526  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e4  00000000  00000000  00003ef4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000596  00000000  00000000  000041d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c33  00000000  00000000  0000476e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  000053a1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__vector_11>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 a8 02 	jmp	0x550	; 0x550 <__vector_18>
      4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	11 e0       	ldi	r17, 0x01	; 1
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	e4 eb       	ldi	r30, 0xB4	; 180
      88:	f4 e1       	ldi	r31, 0x14	; 20
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a2 37       	cpi	r26, 0x72	; 114
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	21 e0       	ldi	r18, 0x01	; 1
      98:	a2 e7       	ldi	r26, 0x72	; 114
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	af 3a       	cpi	r26, 0xAF	; 175
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 ed 02 	call	0x5da	; 0x5da <main>
      aa:	0c 94 58 0a 	jmp	0x14b0	; 0x14b0 <_exit>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <uart_init>:
}

void stepper_start_move(uint16_t steps, uint8_t dir) 
{
	step_dir = dir;
	steps_remaining = steps;
      b2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
      b6:	87 e6       	ldi	r24, 0x67	; 103
      b8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
      bc:	88 e9       	ldi	r24, 0x98	; 152
      be:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
      c2:	86 e0       	ldi	r24, 0x06	; 6
      c4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
      c8:	08 95       	ret

000000ca <uart_send_char>:
      ca:	e0 ec       	ldi	r30, 0xC0	; 192
      cc:	f0 e0       	ldi	r31, 0x00	; 0
      ce:	90 81       	ld	r25, Z
      d0:	95 ff       	sbrs	r25, 5
      d2:	fd cf       	rjmp	.-6      	; 0xce <uart_send_char+0x4>
      d4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
      d8:	08 95       	ret

000000da <uart_send_string>:
      da:	cf 93       	push	r28
      dc:	df 93       	push	r29
      de:	ec 01       	movw	r28, r24
      e0:	88 81       	ld	r24, Y
      e2:	88 23       	and	r24, r24
      e4:	31 f0       	breq	.+12     	; 0xf2 <uart_send_string+0x18>
      e6:	21 96       	adiw	r28, 0x01	; 1
      e8:	0e 94 65 00 	call	0xca	; 0xca <uart_send_char>
      ec:	89 91       	ld	r24, Y+
      ee:	81 11       	cpse	r24, r1
      f0:	fb cf       	rjmp	.-10     	; 0xe8 <uart_send_string+0xe>
      f2:	df 91       	pop	r29
      f4:	cf 91       	pop	r28
      f6:	08 95       	ret

000000f8 <adc_init>:
      f8:	80 e4       	ldi	r24, 0x40	; 64
      fa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
      fe:	86 e8       	ldi	r24, 0x86	; 134
     100:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     104:	08 95       	ret

00000106 <adc_read>:
     106:	87 70       	andi	r24, 0x07	; 7
     108:	80 64       	ori	r24, 0x40	; 64
     10a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     10e:	ea e7       	ldi	r30, 0x7A	; 122
     110:	f0 e0       	ldi	r31, 0x00	; 0
     112:	80 81       	ld	r24, Z
     114:	80 64       	ori	r24, 0x40	; 64
     116:	80 83       	st	Z, r24
     118:	80 81       	ld	r24, Z
     11a:	86 fd       	sbrc	r24, 6
     11c:	fd cf       	rjmp	.-6      	; 0x118 <adc_read+0x12>
     11e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     122:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     126:	08 95       	ret

00000128 <read_key>:
     128:	80 e0       	ldi	r24, 0x00	; 0
     12a:	0e 94 83 00 	call	0x106	; 0x106 <adc_read>
     12e:	82 33       	cpi	r24, 0x32	; 50
     130:	91 05       	cpc	r25, r1
     132:	80 f0       	brcs	.+32     	; 0x154 <read_key+0x2c>
     134:	86 39       	cpi	r24, 0x96	; 150
     136:	91 05       	cpc	r25, r1
     138:	78 f0       	brcs	.+30     	; 0x158 <read_key+0x30>
     13a:	8c 32       	cpi	r24, 0x2C	; 44
     13c:	21 e0       	ldi	r18, 0x01	; 1
     13e:	92 07       	cpc	r25, r18
     140:	68 f0       	brcs	.+26     	; 0x15c <read_key+0x34>
     142:	84 3f       	cpi	r24, 0xF4	; 244
     144:	21 e0       	ldi	r18, 0x01	; 1
     146:	92 07       	cpc	r25, r18
     148:	58 f0       	brcs	.+22     	; 0x160 <read_key+0x38>
     14a:	8c 3b       	cpi	r24, 0xBC	; 188
     14c:	92 40       	sbci	r25, 0x02	; 2
     14e:	50 f0       	brcs	.+20     	; 0x164 <read_key+0x3c>
     150:	80 e0       	ldi	r24, 0x00	; 0
     152:	08 95       	ret
     154:	81 e0       	ldi	r24, 0x01	; 1
     156:	08 95       	ret
     158:	82 e0       	ldi	r24, 0x02	; 2
     15a:	08 95       	ret
     15c:	83 e0       	ldi	r24, 0x03	; 3
     15e:	08 95       	ret
     160:	84 e0       	ldi	r24, 0x04	; 4
     162:	08 95       	ret
     164:	85 e0       	ldi	r24, 0x05	; 5
     166:	08 95       	ret

00000168 <debounced_read_key>:
     168:	0e 94 94 00 	call	0x128	; 0x128 <read_key>
     16c:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <__data_end>
     170:	89 17       	cp	r24, r25
     172:	71 f0       	breq	.+28     	; 0x190 <debounced_read_key+0x28>
     174:	2f ef       	ldi	r18, 0xFF	; 255
     176:	80 e7       	ldi	r24, 0x70	; 112
     178:	92 e0       	ldi	r25, 0x02	; 2
     17a:	21 50       	subi	r18, 0x01	; 1
     17c:	80 40       	sbci	r24, 0x00	; 0
     17e:	90 40       	sbci	r25, 0x00	; 0
     180:	e1 f7       	brne	.-8      	; 0x17a <debounced_read_key+0x12>
     182:	00 c0       	rjmp	.+0      	; 0x184 <debounced_read_key+0x1c>
     184:	00 00       	nop
     186:	0e 94 94 00 	call	0x128	; 0x128 <read_key>
     18a:	98 2f       	mov	r25, r24
     18c:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <__data_end>
     190:	89 2f       	mov	r24, r25
     192:	08 95       	ret

00000194 <lcd_strobe>:
     194:	29 9a       	sbi	0x05, 1	; 5
     196:	85 e0       	ldi	r24, 0x05	; 5
     198:	8a 95       	dec	r24
     19a:	f1 f7       	brne	.-4      	; 0x198 <lcd_strobe+0x4>
     19c:	00 00       	nop
     19e:	29 98       	cbi	0x05, 1	; 5
     1a0:	8f e8       	ldi	r24, 0x8F	; 143
     1a2:	91 e0       	ldi	r25, 0x01	; 1
     1a4:	01 97       	sbiw	r24, 0x01	; 1
     1a6:	f1 f7       	brne	.-4      	; 0x1a4 <lcd_strobe+0x10>
     1a8:	00 c0       	rjmp	.+0      	; 0x1aa <lcd_strobe+0x16>
     1aa:	00 00       	nop
     1ac:	08 95       	ret

000001ae <lcd_send_nibble>:
     1ae:	2b b1       	in	r18, 0x0b	; 11
     1b0:	2f 70       	andi	r18, 0x0F	; 15
     1b2:	30 e1       	ldi	r19, 0x10	; 16
     1b4:	83 9f       	mul	r24, r19
     1b6:	c0 01       	movw	r24, r0
     1b8:	11 24       	eor	r1, r1
     1ba:	82 2b       	or	r24, r18
     1bc:	8b b9       	out	0x0b, r24	; 11
     1be:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_strobe>
     1c2:	08 95       	ret

000001c4 <lcd_command>:
     1c4:	cf 93       	push	r28
     1c6:	c8 2f       	mov	r28, r24
     1c8:	28 98       	cbi	0x05, 0	; 5
     1ca:	82 95       	swap	r24
     1cc:	8f 70       	andi	r24, 0x0F	; 15
     1ce:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_send_nibble>
     1d2:	8c 2f       	mov	r24, r28
     1d4:	8f 70       	andi	r24, 0x0F	; 15
     1d6:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_send_nibble>
     1da:	c1 50       	subi	r28, 0x01	; 1
     1dc:	c2 30       	cpi	r28, 0x02	; 2
     1de:	30 f4       	brcc	.+12     	; 0x1ec <lcd_command+0x28>
     1e0:	8f e3       	ldi	r24, 0x3F	; 63
     1e2:	9f e1       	ldi	r25, 0x1F	; 31
     1e4:	01 97       	sbiw	r24, 0x01	; 1
     1e6:	f1 f7       	brne	.-4      	; 0x1e4 <lcd_command+0x20>
     1e8:	00 c0       	rjmp	.+0      	; 0x1ea <lcd_command+0x26>
     1ea:	00 00       	nop
     1ec:	cf 91       	pop	r28
     1ee:	08 95       	ret

000001f0 <lcd_data>:
     1f0:	cf 93       	push	r28
     1f2:	c8 2f       	mov	r28, r24
     1f4:	28 9a       	sbi	0x05, 0	; 5
     1f6:	82 95       	swap	r24
     1f8:	8f 70       	andi	r24, 0x0F	; 15
     1fa:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_send_nibble>
     1fe:	8c 2f       	mov	r24, r28
     200:	8f 70       	andi	r24, 0x0F	; 15
     202:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_send_nibble>
     206:	8f e8       	ldi	r24, 0x8F	; 143
     208:	91 e0       	ldi	r25, 0x01	; 1
     20a:	01 97       	sbiw	r24, 0x01	; 1
     20c:	f1 f7       	brne	.-4      	; 0x20a <lcd_data+0x1a>
     20e:	00 c0       	rjmp	.+0      	; 0x210 <lcd_data+0x20>
     210:	00 00       	nop
     212:	cf 91       	pop	r28
     214:	08 95       	ret

00000216 <lcd_backlight>:
     216:	88 23       	and	r24, r24
     218:	11 f0       	breq	.+4      	; 0x21e <lcd_backlight+0x8>
     21a:	2a 9a       	sbi	0x05, 2	; 5
     21c:	08 95       	ret
     21e:	2a 98       	cbi	0x05, 2	; 5
     220:	08 95       	ret

00000222 <lcd_init>:
     222:	84 b1       	in	r24, 0x04	; 4
     224:	87 60       	ori	r24, 0x07	; 7
     226:	84 b9       	out	0x04, r24	; 4
     228:	8a b1       	in	r24, 0x0a	; 10
     22a:	80 6f       	ori	r24, 0xF0	; 240
     22c:	8a b9       	out	0x0a, r24	; 10
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	0e 94 0b 01 	call	0x216	; 0x216 <lcd_backlight>
     234:	2f ef       	ldi	r18, 0xFF	; 255
     236:	80 e7       	ldi	r24, 0x70	; 112
     238:	92 e0       	ldi	r25, 0x02	; 2
     23a:	21 50       	subi	r18, 0x01	; 1
     23c:	80 40       	sbci	r24, 0x00	; 0
     23e:	90 40       	sbci	r25, 0x00	; 0
     240:	e1 f7       	brne	.-8      	; 0x23a <lcd_init+0x18>
     242:	00 c0       	rjmp	.+0      	; 0x244 <lcd_init+0x22>
     244:	00 00       	nop
     246:	28 98       	cbi	0x05, 0	; 5
     248:	83 e0       	ldi	r24, 0x03	; 3
     24a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_send_nibble>
     24e:	8f e1       	ldi	r24, 0x1F	; 31
     250:	9e e4       	ldi	r25, 0x4E	; 78
     252:	01 97       	sbiw	r24, 0x01	; 1
     254:	f1 f7       	brne	.-4      	; 0x252 <lcd_init+0x30>
     256:	00 c0       	rjmp	.+0      	; 0x258 <lcd_init+0x36>
     258:	00 00       	nop
     25a:	83 e0       	ldi	r24, 0x03	; 3
     25c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_send_nibble>
     260:	8f e8       	ldi	r24, 0x8F	; 143
     262:	91 e0       	ldi	r25, 0x01	; 1
     264:	01 97       	sbiw	r24, 0x01	; 1
     266:	f1 f7       	brne	.-4      	; 0x264 <lcd_init+0x42>
     268:	00 c0       	rjmp	.+0      	; 0x26a <lcd_init+0x48>
     26a:	00 00       	nop
     26c:	83 e0       	ldi	r24, 0x03	; 3
     26e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_send_nibble>
     272:	8f e8       	ldi	r24, 0x8F	; 143
     274:	91 e0       	ldi	r25, 0x01	; 1
     276:	01 97       	sbiw	r24, 0x01	; 1
     278:	f1 f7       	brne	.-4      	; 0x276 <lcd_init+0x54>
     27a:	00 c0       	rjmp	.+0      	; 0x27c <lcd_init+0x5a>
     27c:	00 00       	nop
     27e:	82 e0       	ldi	r24, 0x02	; 2
     280:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_send_nibble>
     284:	8f e8       	ldi	r24, 0x8F	; 143
     286:	91 e0       	ldi	r25, 0x01	; 1
     288:	01 97       	sbiw	r24, 0x01	; 1
     28a:	f1 f7       	brne	.-4      	; 0x288 <lcd_init+0x66>
     28c:	00 c0       	rjmp	.+0      	; 0x28e <lcd_init+0x6c>
     28e:	00 00       	nop
     290:	88 e2       	ldi	r24, 0x28	; 40
     292:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_command>
     296:	8c e0       	ldi	r24, 0x0C	; 12
     298:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_command>
     29c:	86 e0       	ldi	r24, 0x06	; 6
     29e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_command>
     2a2:	81 e0       	ldi	r24, 0x01	; 1
     2a4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_command>
     2a8:	8f e3       	ldi	r24, 0x3F	; 63
     2aa:	9f e1       	ldi	r25, 0x1F	; 31
     2ac:	01 97       	sbiw	r24, 0x01	; 1
     2ae:	f1 f7       	brne	.-4      	; 0x2ac <lcd_init+0x8a>
     2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <lcd_init+0x90>
     2b2:	00 00       	nop
     2b4:	08 95       	ret

000002b6 <lcd_print>:
     2b6:	cf 93       	push	r28
     2b8:	df 93       	push	r29
     2ba:	ec 01       	movw	r28, r24
     2bc:	88 81       	ld	r24, Y
     2be:	88 23       	and	r24, r24
     2c0:	31 f0       	breq	.+12     	; 0x2ce <lcd_print+0x18>
     2c2:	21 96       	adiw	r28, 0x01	; 1
     2c4:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <lcd_data>
     2c8:	89 91       	ld	r24, Y+
     2ca:	81 11       	cpse	r24, r1
     2cc:	fb cf       	rjmp	.-10     	; 0x2c4 <lcd_print+0xe>
     2ce:	df 91       	pop	r29
     2d0:	cf 91       	pop	r28
     2d2:	08 95       	ret

000002d4 <update_lcd_display>:
     2d4:	81 e0       	ldi	r24, 0x01	; 1
     2d6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_command>
     2da:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <editing_mode>
     2de:	81 30       	cpi	r24, 0x01	; 1
     2e0:	29 f4       	brne	.+10     	; 0x2ec <update_lcd_display+0x18>
     2e2:	88 e0       	ldi	r24, 0x08	; 8
     2e4:	91 e0       	ldi	r25, 0x01	; 1
     2e6:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_print>
     2ea:	0d c0       	rjmp	.+26     	; 0x306 <update_lcd_display+0x32>
     2ec:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <editing_mode>
     2f0:	82 30       	cpi	r24, 0x02	; 2
     2f2:	29 f4       	brne	.+10     	; 0x2fe <update_lcd_display+0x2a>
     2f4:	84 e1       	ldi	r24, 0x14	; 20
     2f6:	91 e0       	ldi	r25, 0x01	; 1
     2f8:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_print>
     2fc:	04 c0       	rjmp	.+8      	; 0x306 <update_lcd_display+0x32>
     2fe:	80 e2       	ldi	r24, 0x20	; 32
     300:	91 e0       	ldi	r25, 0x01	; 1
     302:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_print>
     306:	80 ec       	ldi	r24, 0xC0	; 192
     308:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_command>
     30c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     310:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     314:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
     318:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
     31c:	3f 93       	push	r19
     31e:	2f 93       	push	r18
     320:	9f 93       	push	r25
     322:	8f 93       	push	r24
     324:	86 e2       	ldi	r24, 0x26	; 38
     326:	91 e0       	ldi	r25, 0x01	; 1
     328:	9f 93       	push	r25
     32a:	8f 93       	push	r24
     32c:	89 e9       	ldi	r24, 0x99	; 153
     32e:	91 e0       	ldi	r25, 0x01	; 1
     330:	9f 93       	push	r25
     332:	8f 93       	push	r24
     334:	0e 94 3a 04 	call	0x874	; 0x874 <sprintf>
     338:	89 e9       	ldi	r24, 0x99	; 153
     33a:	91 e0       	ldi	r25, 0x01	; 1
     33c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_print>
     340:	8d b7       	in	r24, 0x3d	; 61
     342:	9e b7       	in	r25, 0x3e	; 62
     344:	08 96       	adiw	r24, 0x08	; 8
     346:	0f b6       	in	r0, 0x3f	; 63
     348:	f8 94       	cli
     34a:	9e bf       	out	0x3e, r25	; 62
     34c:	0f be       	out	0x3f, r0	; 63
     34e:	8d bf       	out	0x3d, r24	; 61
     350:	08 95       	ret

00000352 <stepper_init>:
     352:	84 b1       	in	r24, 0x04	; 4
     354:	88 63       	ori	r24, 0x38	; 56
     356:	84 b9       	out	0x04, r24	; 4
     358:	2d 98       	cbi	0x05, 5	; 5
     35a:	08 95       	ret

0000035c <stepper_enable>:
     35c:	88 23       	and	r24, r24
     35e:	11 f0       	breq	.+4      	; 0x364 <stepper_enable+0x8>
     360:	2d 9a       	sbi	0x05, 5	; 5
     362:	08 95       	ret
     364:	2d 98       	cbi	0x05, 5	; 5
     366:	08 95       	ret

00000368 <set_speed>:
}

void set_speed(uint16_t steps_per_sec) 
{
	if (steps_per_sec == 0) steps_per_sec = 1;
     368:	00 97       	sbiw	r24, 0x00	; 0
     36a:	11 f4       	brne	.+4      	; 0x370 <set_speed+0x8>
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	90 e0       	ldi	r25, 0x00	; 0
	step_speed = steps_per_sec;
     370:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     374:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	OCR1A = (F_CPU / 8 / step_speed) - 1;
     378:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     37c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     380:	40 e0       	ldi	r20, 0x00	; 0
     382:	50 e0       	ldi	r21, 0x00	; 0
     384:	60 e8       	ldi	r22, 0x80	; 128
     386:	74 e8       	ldi	r23, 0x84	; 132
     388:	8e e1       	ldi	r24, 0x1E	; 30
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__udivmodsi4>
     390:	21 50       	subi	r18, 0x01	; 1
     392:	31 09       	sbc	r19, r1
     394:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     398:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     39c:	08 95       	ret

0000039e <parse_uart_command>:
	}
	buf[i] = '\0';  // Null-terminate
}

void parse_uart_command(const char* cmd)
{
     39e:	0f 93       	push	r16
     3a0:	1f 93       	push	r17
     3a2:	cf 93       	push	r28
     3a4:	df 93       	push	r29
     3a6:	00 d0       	rcall	.+0      	; 0x3a8 <parse_uart_command+0xa>
     3a8:	cd b7       	in	r28, 0x3d	; 61
     3aa:	de b7       	in	r29, 0x3e	; 62
     3ac:	8c 01       	movw	r16, r24
	if (cmd[0] == 'S')  // Set step count
     3ae:	fc 01       	movw	r30, r24
     3b0:	80 81       	ld	r24, Z
     3b2:	83 35       	cpi	r24, 0x53	; 83
     3b4:	81 f5       	brne	.+96     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
	{
		//uart_send_string("\n\rCMD: S\n\r");
		uint16_t val = 0;
     3b6:	1a 82       	std	Y+2, r1	; 0x02
     3b8:	19 82       	std	Y+1, r1	; 0x01
		if (sscanf(&cmd[1], "%u", &val) == 1)
     3ba:	ce 01       	movw	r24, r28
     3bc:	01 96       	adiw	r24, 0x01	; 1
     3be:	9f 93       	push	r25
     3c0:	8f 93       	push	r24
     3c2:	8e e2       	ldi	r24, 0x2E	; 46
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	9f 93       	push	r25
     3c8:	8f 93       	push	r24
     3ca:	0f 5f       	subi	r16, 0xFF	; 255
     3cc:	1f 4f       	sbci	r17, 0xFF	; 255
     3ce:	1f 93       	push	r17
     3d0:	0f 93       	push	r16
     3d2:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <sscanf>
     3d6:	0f 90       	pop	r0
     3d8:	0f 90       	pop	r0
     3da:	0f 90       	pop	r0
     3dc:	0f 90       	pop	r0
     3de:	0f 90       	pop	r0
     3e0:	0f 90       	pop	r0
     3e2:	01 97       	sbiw	r24, 0x01	; 1
     3e4:	09 f0       	breq	.+2      	; 0x3e8 <parse_uart_command+0x4a>
     3e6:	5a c0       	rjmp	.+180    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
		{
			uart_send_string(printf("Val: %s",val));
     3e8:	8a 81       	ldd	r24, Y+2	; 0x02
     3ea:	8f 93       	push	r24
     3ec:	89 81       	ldd	r24, Y+1	; 0x01
     3ee:	8f 93       	push	r24
     3f0:	81 e3       	ldi	r24, 0x31	; 49
     3f2:	91 e0       	ldi	r25, 0x01	; 1
     3f4:	9f 93       	push	r25
     3f6:	8f 93       	push	r24
     3f8:	0e 94 24 04 	call	0x848	; 0x848 <printf>
     3fc:	0e 94 6d 00 	call	0xda	; 0xda <uart_send_string>
			step_count = val;
     400:	89 81       	ldd	r24, Y+1	; 0x01
     402:	9a 81       	ldd	r25, Y+2	; 0x02
     404:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <step_count+0x1>
     408:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <step_count>
     40c:	0f 90       	pop	r0
     40e:	0f 90       	pop	r0
     410:	0f 90       	pop	r0
     412:	0f 90       	pop	r0
     414:	43 c0       	rjmp	.+134    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
		}
	}
	else if (cmd[0] == 'V')  // Set delay
     416:	86 35       	cpi	r24, 0x56	; 86
     418:	e9 f4       	brne	.+58     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
	{
		uint16_t val = 0;
     41a:	1a 82       	std	Y+2, r1	; 0x02
     41c:	19 82       	std	Y+1, r1	; 0x01
		if (sscanf(&cmd[1], "%u", &val) == 1)
     41e:	ce 01       	movw	r24, r28
     420:	01 96       	adiw	r24, 0x01	; 1
     422:	9f 93       	push	r25
     424:	8f 93       	push	r24
     426:	8e e2       	ldi	r24, 0x2E	; 46
     428:	91 e0       	ldi	r25, 0x01	; 1
     42a:	9f 93       	push	r25
     42c:	8f 93       	push	r24
     42e:	0f 5f       	subi	r16, 0xFF	; 255
     430:	1f 4f       	sbci	r17, 0xFF	; 255
     432:	1f 93       	push	r17
     434:	0f 93       	push	r16
     436:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <sscanf>
     43a:	0f 90       	pop	r0
     43c:	0f 90       	pop	r0
     43e:	0f 90       	pop	r0
     440:	0f 90       	pop	r0
     442:	0f 90       	pop	r0
     444:	0f 90       	pop	r0
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	49 f5       	brne	.+82     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
		{
			//step_speed = val;
			set_speed(val);
     44a:	89 81       	ldd	r24, Y+1	; 0x01
     44c:	9a 81       	ldd	r25, Y+2	; 0x02
     44e:	0e 94 b4 01 	call	0x368	; 0x368 <set_speed>
     452:	24 c0       	rjmp	.+72     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
		}
	}
	else if (strcmp(cmd, "R") == 0)  // Move right
     454:	69 e3       	ldi	r22, 0x39	; 57
     456:	71 e0       	ldi	r23, 0x01	; 1
     458:	c8 01       	movw	r24, r16
     45a:	0e 94 1b 04 	call	0x836	; 0x836 <strcmp>
     45e:	89 2b       	or	r24, r25
     460:	61 f4       	brne	.+24     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
	{
		stepper_start_move(step_count, 1);
     462:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
     466:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
	}
}

void stepper_start_move(uint16_t steps, uint8_t dir) 
{
	step_dir = dir;
     46a:	21 e0       	ldi	r18, 0x01	; 1
     46c:	20 93 74 01 	sts	0x0174, r18	; 0x800174 <step_dir>
	steps_remaining = steps;
     470:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <steps_remaining+0x1>
     474:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <steps_remaining>
     478:	11 c0       	rjmp	.+34     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
	}
	else if (strcmp(cmd, "R") == 0)  // Move right
	{
		stepper_start_move(step_count, 1);
	}
	else if (strcmp(cmd, "L") == 0)  // Move left
     47a:	6b e3       	ldi	r22, 0x3B	; 59
     47c:	71 e0       	ldi	r23, 0x01	; 1
     47e:	c8 01       	movw	r24, r16
     480:	0e 94 1b 04 	call	0x836	; 0x836 <strcmp>
     484:	89 2b       	or	r24, r25
     486:	51 f4       	brne	.+20     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
	{
		stepper_start_move(step_count, 0);
     488:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
     48c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
	}
}

void stepper_start_move(uint16_t steps, uint8_t dir) 
{
	step_dir = dir;
     490:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <step_dir>
	steps_remaining = steps;
     494:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <steps_remaining+0x1>
     498:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <steps_remaining>
	else if (strcmp(cmd, "L") == 0)  // Move left
	{
		stepper_start_move(step_count, 0);
	}

	update_lcd_display();
     49c:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <update_lcd_display>
}
     4a0:	0f 90       	pop	r0
     4a2:	0f 90       	pop	r0
     4a4:	df 91       	pop	r29
     4a6:	cf 91       	pop	r28
     4a8:	1f 91       	pop	r17
     4aa:	0f 91       	pop	r16
     4ac:	08 95       	ret

000004ae <timer1_init>:
	step_speed = steps_per_sec;
	OCR1A = (F_CPU / 8 / step_speed) - 1;
}

void timer1_init() 
{
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
	TCCR1B |= (1 << WGM12);
     4b2:	c1 e8       	ldi	r28, 0x81	; 129
     4b4:	d0 e0       	ldi	r29, 0x00	; 0
     4b6:	88 81       	ld	r24, Y
     4b8:	88 60       	ori	r24, 0x08	; 8
     4ba:	88 83       	st	Y, r24
	TIMSK1 |= (1 << OCIE1A);
     4bc:	ef e6       	ldi	r30, 0x6F	; 111
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	80 81       	ld	r24, Z
     4c2:	82 60       	ori	r24, 0x02	; 2
     4c4:	80 83       	st	Z, r24
	set_speed(step_speed);
     4c6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     4ca:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     4ce:	0e 94 b4 01 	call	0x368	; 0x368 <set_speed>
	TCCR1B |= (1 << CS11);
     4d2:	88 81       	ld	r24, Y
     4d4:	82 60       	ori	r24, 0x02	; 2
     4d6:	88 83       	st	Y, r24
}
     4d8:	df 91       	pop	r29
     4da:	cf 91       	pop	r28
     4dc:	08 95       	ret

000004de <__vector_11>:

ISR(TIMER1_COMPA_vect) 
{
     4de:	1f 92       	push	r1
     4e0:	0f 92       	push	r0
     4e2:	0f b6       	in	r0, 0x3f	; 63
     4e4:	0f 92       	push	r0
     4e6:	11 24       	eor	r1, r1
     4e8:	8f 93       	push	r24
     4ea:	9f 93       	push	r25
     4ec:	cf 93       	push	r28
     4ee:	df 93       	push	r29
     4f0:	1f 92       	push	r1
     4f2:	cd b7       	in	r28, 0x3d	; 61
     4f4:	de b7       	in	r29, 0x3e	; 62
	if (steps_remaining > 0) 
     4f6:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <steps_remaining>
     4fa:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <steps_remaining+0x1>
     4fe:	89 2b       	or	r24, r25
     500:	e9 f0       	breq	.+58     	; 0x53c <__vector_11+0x5e>
	{
		if (step_dir)
     502:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <step_dir>
     506:	88 23       	and	r24, r24
     508:	11 f0       	breq	.+4      	; 0x50e <__vector_11+0x30>
		PORTB |= (1 << DIR_PIN);
     50a:	2c 9a       	sbi	0x05, 4	; 5
     50c:	01 c0       	rjmp	.+2      	; 0x510 <__vector_11+0x32>
		else
		PORTB &= ~(1 << DIR_PIN);
     50e:	2c 98       	cbi	0x05, 4	; 5

		PORTB |= (1 << STEP_PIN);
     510:	2b 9a       	sbi	0x05, 3	; 5
		for (volatile uint8_t i = 0; i < 20; i++) 
     512:	19 82       	std	Y+1, r1	; 0x01
     514:	89 81       	ldd	r24, Y+1	; 0x01
     516:	84 31       	cpi	r24, 0x14	; 20
     518:	38 f4       	brcc	.+14     	; 0x528 <__vector_11+0x4a>
		{
			__asm__ __volatile__("nop");
     51a:	00 00       	nop
		PORTB |= (1 << DIR_PIN);
		else
		PORTB &= ~(1 << DIR_PIN);

		PORTB |= (1 << STEP_PIN);
		for (volatile uint8_t i = 0; i < 20; i++) 
     51c:	89 81       	ldd	r24, Y+1	; 0x01
     51e:	8f 5f       	subi	r24, 0xFF	; 255
     520:	89 83       	std	Y+1, r24	; 0x01
     522:	89 81       	ldd	r24, Y+1	; 0x01
     524:	84 31       	cpi	r24, 0x14	; 20
     526:	c8 f3       	brcs	.-14     	; 0x51a <__vector_11+0x3c>
		{
			__asm__ __volatile__("nop");
		}
		PORTB &= ~(1 << STEP_PIN);
     528:	2b 98       	cbi	0x05, 3	; 5
		steps_remaining--;
     52a:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <steps_remaining>
     52e:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <steps_remaining+0x1>
     532:	01 97       	sbiw	r24, 0x01	; 1
     534:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <steps_remaining+0x1>
     538:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <steps_remaining>
	}
}
     53c:	0f 90       	pop	r0
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	9f 91       	pop	r25
     544:	8f 91       	pop	r24
     546:	0f 90       	pop	r0
     548:	0f be       	out	0x3f, r0	; 63
     54a:	0f 90       	pop	r0
     54c:	1f 90       	pop	r1
     54e:	18 95       	reti

00000550 <__vector_18>:

ISR(USART_RX_vect)
{
     550:	1f 92       	push	r1
     552:	0f 92       	push	r0
     554:	0f b6       	in	r0, 0x3f	; 63
     556:	0f 92       	push	r0
     558:	11 24       	eor	r1, r1
     55a:	2f 93       	push	r18
     55c:	3f 93       	push	r19
     55e:	4f 93       	push	r20
     560:	5f 93       	push	r21
     562:	6f 93       	push	r22
     564:	7f 93       	push	r23
     566:	8f 93       	push	r24
     568:	9f 93       	push	r25
     56a:	af 93       	push	r26
     56c:	bf 93       	push	r27
     56e:	ef 93       	push	r30
     570:	ff 93       	push	r31
	char c = UDR0;
     572:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>

	if (c == '\n' || c == '\r'|| c == 'e')
     576:	8a 30       	cpi	r24, 0x0A	; 10
     578:	21 f0       	breq	.+8      	; 0x582 <__vector_18+0x32>
     57a:	8d 30       	cpi	r24, 0x0D	; 13
     57c:	11 f0       	breq	.+4      	; 0x582 <__vector_18+0x32>
     57e:	85 36       	cpi	r24, 0x65	; 101
     580:	69 f4       	brne	.+26     	; 0x59c <__vector_18+0x4c>
	{
		//uart_send_string("end string");
		uart_buffer[uart_index] = '\0';
     582:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <uart_index>
     586:	f0 e0       	ldi	r31, 0x00	; 0
     588:	e7 58       	subi	r30, 0x87	; 135
     58a:	fe 4f       	sbci	r31, 0xFE	; 254
     58c:	10 82       	st	Z, r1
		//uart_send_string(uart_buffer);
		parse_uart_command((const char*)uart_buffer);
     58e:	89 e7       	ldi	r24, 0x79	; 121
     590:	91 e0       	ldi	r25, 0x01	; 1
     592:	0e 94 cf 01 	call	0x39e	; 0x39e <parse_uart_command>
		uart_index = 0;
     596:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <uart_index>
     59a:	0e c0       	rjmp	.+28     	; 0x5b8 <__vector_18+0x68>
	}
	else if (uart_index < UART_BUFFER_SIZE - 1)
     59c:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <uart_index>
     5a0:	9f 31       	cpi	r25, 0x1F	; 31
     5a2:	50 f4       	brcc	.+20     	; 0x5b8 <__vector_18+0x68>
	{
		uart_buffer[uart_index++] = c;
     5a4:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <uart_index>
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	9e 0f       	add	r25, r30
     5ac:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <uart_index>
     5b0:	f0 e0       	ldi	r31, 0x00	; 0
     5b2:	e7 58       	subi	r30, 0x87	; 135
     5b4:	fe 4f       	sbci	r31, 0xFE	; 254
     5b6:	80 83       	st	Z, r24
		
		//uart_send_string(uart_buffer);
	}
}
     5b8:	ff 91       	pop	r31
     5ba:	ef 91       	pop	r30
     5bc:	bf 91       	pop	r27
     5be:	af 91       	pop	r26
     5c0:	9f 91       	pop	r25
     5c2:	8f 91       	pop	r24
     5c4:	7f 91       	pop	r23
     5c6:	6f 91       	pop	r22
     5c8:	5f 91       	pop	r21
     5ca:	4f 91       	pop	r20
     5cc:	3f 91       	pop	r19
     5ce:	2f 91       	pop	r18
     5d0:	0f 90       	pop	r0
     5d2:	0f be       	out	0x3f, r0	; 63
     5d4:	0f 90       	pop	r0
     5d6:	1f 90       	pop	r1
     5d8:	18 95       	reti

000005da <main>:


int main(void)
{
	lcd_init();
     5da:	0e 94 11 01 	call	0x222	; 0x222 <lcd_init>
	adc_init();
     5de:	0e 94 7c 00 	call	0xf8	; 0xf8 <adc_init>
	stepper_init();
     5e2:	0e 94 a9 01 	call	0x352	; 0x352 <stepper_init>
	stepper_enable(1);
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	0e 94 ae 01 	call	0x35c	; 0x35c <stepper_enable>
	timer1_init();
     5ec:	0e 94 57 02 	call	0x4ae	; 0x4ae <timer1_init>
	uart_init();
     5f0:	0e 94 59 00 	call	0xb2	; 0xb2 <uart_init>
	sei();
     5f4:	78 94       	sei
	uart_send_string("Stepper ready\n");
     5f6:	8d e3       	ldi	r24, 0x3D	; 61
     5f8:	91 e0       	ldi	r25, 0x01	; 1
     5fa:	0e 94 6d 00 	call	0xda	; 0xda <uart_send_string>
	lcd_print("Press any button");
     5fe:	8c e4       	ldi	r24, 0x4C	; 76
     600:	91 e0       	ldi	r25, 0x01	; 1
     602:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     606:	2f ef       	ldi	r18, 0xFF	; 255
     608:	83 ed       	ldi	r24, 0xD3	; 211
     60a:	90 e3       	ldi	r25, 0x30	; 48
     60c:	21 50       	subi	r18, 0x01	; 1
     60e:	80 40       	sbci	r24, 0x00	; 0
     610:	90 40       	sbci	r25, 0x00	; 0
     612:	e1 f7       	brne	.-8      	; 0x60c <main+0x32>
     614:	00 c0       	rjmp	.+0      	; 0x616 <main+0x3c>
     616:	00 00       	nop
	_delay_ms(1000);
	update_lcd_display();
     618:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <update_lcd_display>

	//uint8_t prev_key = 0;
	uint8_t last_select = 0;
     61c:	c0 e0       	ldi	r28, 0x00	; 0
		if (key == 5 && last_select == 0)
		{
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
     61e:	d0 e0       	ldi	r29, 0x00	; 0
	
		uint8_t key = debounced_read_key();

		if (key == 5 && last_select == 0)
		{
			editing_mode = (editing_mode + 1) % 3;
     620:	03 e0       	ldi	r16, 0x03	; 3
     622:	10 e0       	ldi	r17, 0x00	; 0
	//uint8_t prev_key = 0;
	uint8_t last_select = 0;

	while (1)
	{
		if (bSend_cmd)
     624:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <bSend_cmd>
     628:	88 23       	and	r24, r24
     62a:	61 f0       	breq	.+24     	; 0x644 <main+0x6a>
		{
			stepper_start_move(step_count, step_dir);
     62c:	20 91 74 01 	lds	r18, 0x0174	; 0x800174 <step_dir>
     630:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
     634:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
	}
}

void stepper_start_move(uint16_t steps, uint8_t dir) 
{
	step_dir = dir;
     638:	20 93 74 01 	sts	0x0174, r18	; 0x800174 <step_dir>
	steps_remaining = steps;
     63c:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <steps_remaining+0x1>
     640:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <steps_remaining>
		if (bSend_cmd)
		{
			stepper_start_move(step_count, step_dir);
		}
	
		uint8_t key = debounced_read_key();
     644:	0e 94 b4 00 	call	0x168	; 0x168 <debounced_read_key>

		if (key == 5 && last_select == 0)
     648:	85 30       	cpi	r24, 0x05	; 5
     64a:	71 f4       	brne	.+28     	; 0x668 <main+0x8e>
     64c:	c1 11       	cpse	r28, r1
     64e:	a5 c0       	rjmp	.+330    	; 0x79a <main+0x1c0>
		{
			editing_mode = (editing_mode + 1) % 3;
     650:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <editing_mode>
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	01 96       	adiw	r24, 0x01	; 1
     658:	b8 01       	movw	r22, r16
     65a:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__divmodhi4>
     65e:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <editing_mode>
			update_lcd_display();
     662:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <update_lcd_display>
     666:	99 c0       	rjmp	.+306    	; 0x79a <main+0x1c0>
		}
		last_select = (key == 5);


		if (editing_mode == 0)
     668:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <editing_mode>
     66c:	91 11       	cpse	r25, r1
     66e:	2b c0       	rjmp	.+86     	; 0x6c6 <main+0xec>
		{
			if (key == 1)
     670:	81 30       	cpi	r24, 0x01	; 1
     672:	99 f4       	brne	.+38     	; 0x69a <main+0xc0>
			{
				lcd_command(LCD_CLEAR);
     674:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_command>
				lcd_print("Move Right");
     678:	8d e5       	ldi	r24, 0x5D	; 93
     67a:	91 e0       	ldi	r25, 0x01	; 1
     67c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_print>
				stepper_start_move(step_count, 1);
     680:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
     684:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
	}
}

void stepper_start_move(uint16_t steps, uint8_t dir) 
{
	step_dir = dir;
     688:	21 e0       	ldi	r18, 0x01	; 1
     68a:	20 93 74 01 	sts	0x0174, r18	; 0x800174 <step_dir>
	steps_remaining = steps;
     68e:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <steps_remaining+0x1>
     692:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <steps_remaining>
		if (key == 5 && last_select == 0)
		{
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
     696:	cd 2f       	mov	r28, r29
     698:	76 c0       	rjmp	.+236    	; 0x786 <main+0x1ac>
			{
				lcd_command(LCD_CLEAR);
				lcd_print("Move Right");
				stepper_start_move(step_count, 1);
			}
			else if (key == 4)
     69a:	84 30       	cpi	r24, 0x04	; 4
     69c:	09 f0       	breq	.+2      	; 0x6a0 <main+0xc6>
     69e:	70 c0       	rjmp	.+224    	; 0x780 <main+0x1a6>
			{
				lcd_command(LCD_CLEAR);
     6a0:	81 e0       	ldi	r24, 0x01	; 1
     6a2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_command>
				lcd_print("Move Left");
     6a6:	88 e6       	ldi	r24, 0x68	; 104
     6a8:	91 e0       	ldi	r25, 0x01	; 1
     6aa:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_print>
				stepper_start_move(step_count, 0);
     6ae:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
     6b2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
	}
}

void stepper_start_move(uint16_t steps, uint8_t dir) 
{
	step_dir = dir;
     6b6:	d0 93 74 01 	sts	0x0174, r29	; 0x800174 <step_dir>
	steps_remaining = steps;
     6ba:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <steps_remaining+0x1>
     6be:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <steps_remaining>
		if (key == 5 && last_select == 0)
		{
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
     6c2:	cd 2f       	mov	r28, r29
     6c4:	60 c0       	rjmp	.+192    	; 0x786 <main+0x1ac>
				stepper_start_move(step_count, 0);
			}
		}
		else
		{
			if (key == 2)
     6c6:	82 30       	cpi	r24, 0x02	; 2
     6c8:	31 f5       	brne	.+76     	; 0x716 <main+0x13c>
			{
				if (editing_mode == 1)
     6ca:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <editing_mode>
     6ce:	81 30       	cpi	r24, 0x01	; 1
     6d0:	59 f4       	brne	.+22     	; 0x6e8 <main+0x10e>
				{
					step_count += 100;
     6d2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
     6d6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
     6da:	8c 59       	subi	r24, 0x9C	; 156
     6dc:	9f 4f       	sbci	r25, 0xFF	; 255
     6de:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <step_count+0x1>
     6e2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <step_count>
     6e6:	13 c0       	rjmp	.+38     	; 0x70e <main+0x134>
				}
				else if (editing_mode == 2)
     6e8:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <editing_mode>
     6ec:	82 30       	cpi	r24, 0x02	; 2
     6ee:	79 f4       	brne	.+30     	; 0x70e <main+0x134>
				{
					step_speed += 50;
     6f0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     6f4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     6f8:	c2 96       	adiw	r24, 0x32	; 50
     6fa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     6fe:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
					set_speed(step_speed);
     702:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     706:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     70a:	0e 94 b4 01 	call	0x368	; 0x368 <set_speed>
				}
				update_lcd_display();
     70e:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <update_lcd_display>
		if (key == 5 && last_select == 0)
		{
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
     712:	cd 2f       	mov	r28, r29
     714:	38 c0       	rjmp	.+112    	; 0x786 <main+0x1ac>
					step_speed += 50;
					set_speed(step_speed);
				}
				update_lcd_display();
			}
			if (key == 3)
     716:	83 30       	cpi	r24, 0x03	; 3
     718:	a9 f5       	brne	.+106    	; 0x784 <main+0x1aa>
			{
				if (editing_mode == 1 && step_count >= 100)
     71a:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <editing_mode>
     71e:	81 30       	cpi	r24, 0x01	; 1
     720:	91 f4       	brne	.+36     	; 0x746 <main+0x16c>
     722:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
     726:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
     72a:	84 36       	cpi	r24, 0x64	; 100
     72c:	91 05       	cpc	r25, r1
     72e:	58 f0       	brcs	.+22     	; 0x746 <main+0x16c>
				{
					step_count -= 100;
     730:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <step_count>
     734:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <step_count+0x1>
     738:	84 56       	subi	r24, 0x64	; 100
     73a:	91 09       	sbc	r25, r1
     73c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <step_count+0x1>
     740:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <step_count>
     744:	19 c0       	rjmp	.+50     	; 0x778 <main+0x19e>
				} 
				else if (editing_mode == 2 && step_speed > 50)
     746:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <editing_mode>
     74a:	82 30       	cpi	r24, 0x02	; 2
     74c:	a9 f4       	brne	.+42     	; 0x778 <main+0x19e>
     74e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     752:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     756:	c3 97       	sbiw	r24, 0x33	; 51
     758:	78 f0       	brcs	.+30     	; 0x778 <main+0x19e>
				{
					step_speed -= 50;
     75a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     75e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     762:	c2 97       	sbiw	r24, 0x32	; 50
     764:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     768:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
					set_speed(step_speed);
     76c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     770:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     774:	0e 94 b4 01 	call	0x368	; 0x368 <set_speed>
				}
				update_lcd_display();
     778:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <update_lcd_display>
		if (key == 5 && last_select == 0)
		{
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
     77c:	cd 2f       	mov	r28, r29
     77e:	03 c0       	rjmp	.+6      	; 0x786 <main+0x1ac>
     780:	cd 2f       	mov	r28, r29
     782:	01 c0       	rjmp	.+2      	; 0x786 <main+0x1ac>
     784:	cd 2f       	mov	r28, r29
     786:	2f ef       	ldi	r18, 0xFF	; 255
     788:	81 ee       	ldi	r24, 0xE1	; 225
     78a:	94 e0       	ldi	r25, 0x04	; 4
     78c:	21 50       	subi	r18, 0x01	; 1
     78e:	80 40       	sbci	r24, 0x00	; 0
     790:	90 40       	sbci	r25, 0x00	; 0
     792:	e1 f7       	brne	.-8      	; 0x78c <main+0x1b2>
     794:	00 c0       	rjmp	.+0      	; 0x796 <main+0x1bc>
     796:	00 00       	nop
     798:	45 cf       	rjmp	.-374    	; 0x624 <main+0x4a>


		if (editing_mode == 0)
     79a:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <editing_mode>
		if (key == 5 && last_select == 0)
		{
			editing_mode = (editing_mode + 1) % 3;
			update_lcd_display();
		}
		last_select = (key == 5);
     79e:	c1 e0       	ldi	r28, 0x01	; 1
     7a0:	f2 cf       	rjmp	.-28     	; 0x786 <main+0x1ac>

000007a2 <__divmodhi4>:
     7a2:	97 fb       	bst	r25, 7
     7a4:	07 2e       	mov	r0, r23
     7a6:	16 f4       	brtc	.+4      	; 0x7ac <__divmodhi4+0xa>
     7a8:	00 94       	com	r0
     7aa:	07 d0       	rcall	.+14     	; 0x7ba <__divmodhi4_neg1>
     7ac:	77 fd       	sbrc	r23, 7
     7ae:	09 d0       	rcall	.+18     	; 0x7c2 <__divmodhi4_neg2>
     7b0:	0e 94 07 04 	call	0x80e	; 0x80e <__udivmodhi4>
     7b4:	07 fc       	sbrc	r0, 7
     7b6:	05 d0       	rcall	.+10     	; 0x7c2 <__divmodhi4_neg2>
     7b8:	3e f4       	brtc	.+14     	; 0x7c8 <__divmodhi4_exit>

000007ba <__divmodhi4_neg1>:
     7ba:	90 95       	com	r25
     7bc:	81 95       	neg	r24
     7be:	9f 4f       	sbci	r25, 0xFF	; 255
     7c0:	08 95       	ret

000007c2 <__divmodhi4_neg2>:
     7c2:	70 95       	com	r23
     7c4:	61 95       	neg	r22
     7c6:	7f 4f       	sbci	r23, 0xFF	; 255

000007c8 <__divmodhi4_exit>:
     7c8:	08 95       	ret

000007ca <__udivmodsi4>:
     7ca:	a1 e2       	ldi	r26, 0x21	; 33
     7cc:	1a 2e       	mov	r1, r26
     7ce:	aa 1b       	sub	r26, r26
     7d0:	bb 1b       	sub	r27, r27
     7d2:	fd 01       	movw	r30, r26
     7d4:	0d c0       	rjmp	.+26     	; 0x7f0 <__udivmodsi4_ep>

000007d6 <__udivmodsi4_loop>:
     7d6:	aa 1f       	adc	r26, r26
     7d8:	bb 1f       	adc	r27, r27
     7da:	ee 1f       	adc	r30, r30
     7dc:	ff 1f       	adc	r31, r31
     7de:	a2 17       	cp	r26, r18
     7e0:	b3 07       	cpc	r27, r19
     7e2:	e4 07       	cpc	r30, r20
     7e4:	f5 07       	cpc	r31, r21
     7e6:	20 f0       	brcs	.+8      	; 0x7f0 <__udivmodsi4_ep>
     7e8:	a2 1b       	sub	r26, r18
     7ea:	b3 0b       	sbc	r27, r19
     7ec:	e4 0b       	sbc	r30, r20
     7ee:	f5 0b       	sbc	r31, r21

000007f0 <__udivmodsi4_ep>:
     7f0:	66 1f       	adc	r22, r22
     7f2:	77 1f       	adc	r23, r23
     7f4:	88 1f       	adc	r24, r24
     7f6:	99 1f       	adc	r25, r25
     7f8:	1a 94       	dec	r1
     7fa:	69 f7       	brne	.-38     	; 0x7d6 <__udivmodsi4_loop>
     7fc:	60 95       	com	r22
     7fe:	70 95       	com	r23
     800:	80 95       	com	r24
     802:	90 95       	com	r25
     804:	9b 01       	movw	r18, r22
     806:	ac 01       	movw	r20, r24
     808:	bd 01       	movw	r22, r26
     80a:	cf 01       	movw	r24, r30
     80c:	08 95       	ret

0000080e <__udivmodhi4>:
     80e:	aa 1b       	sub	r26, r26
     810:	bb 1b       	sub	r27, r27
     812:	51 e1       	ldi	r21, 0x11	; 17
     814:	07 c0       	rjmp	.+14     	; 0x824 <__udivmodhi4_ep>

00000816 <__udivmodhi4_loop>:
     816:	aa 1f       	adc	r26, r26
     818:	bb 1f       	adc	r27, r27
     81a:	a6 17       	cp	r26, r22
     81c:	b7 07       	cpc	r27, r23
     81e:	10 f0       	brcs	.+4      	; 0x824 <__udivmodhi4_ep>
     820:	a6 1b       	sub	r26, r22
     822:	b7 0b       	sbc	r27, r23

00000824 <__udivmodhi4_ep>:
     824:	88 1f       	adc	r24, r24
     826:	99 1f       	adc	r25, r25
     828:	5a 95       	dec	r21
     82a:	a9 f7       	brne	.-22     	; 0x816 <__udivmodhi4_loop>
     82c:	80 95       	com	r24
     82e:	90 95       	com	r25
     830:	bc 01       	movw	r22, r24
     832:	cd 01       	movw	r24, r26
     834:	08 95       	ret

00000836 <strcmp>:
     836:	fb 01       	movw	r30, r22
     838:	dc 01       	movw	r26, r24
     83a:	8d 91       	ld	r24, X+
     83c:	01 90       	ld	r0, Z+
     83e:	80 19       	sub	r24, r0
     840:	01 10       	cpse	r0, r1
     842:	d9 f3       	breq	.-10     	; 0x83a <strcmp+0x4>
     844:	99 0b       	sbc	r25, r25
     846:	08 95       	ret

00000848 <printf>:
     848:	a0 e0       	ldi	r26, 0x00	; 0
     84a:	b0 e0       	ldi	r27, 0x00	; 0
     84c:	ea e2       	ldi	r30, 0x2A	; 42
     84e:	f4 e0       	ldi	r31, 0x04	; 4
     850:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__prologue_saves__+0x20>
     854:	ae 01       	movw	r20, r28
     856:	4b 5f       	subi	r20, 0xFB	; 251
     858:	5f 4f       	sbci	r21, 0xFF	; 255
     85a:	fa 01       	movw	r30, r20
     85c:	61 91       	ld	r22, Z+
     85e:	71 91       	ld	r23, Z+
     860:	af 01       	movw	r20, r30
     862:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <__iob+0x2>
     866:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <__iob+0x3>
     86a:	0e 94 75 04 	call	0x8ea	; 0x8ea <vfprintf>
     86e:	e2 e0       	ldi	r30, 0x02	; 2
     870:	0c 94 4d 0a 	jmp	0x149a	; 0x149a <__epilogue_restores__+0x20>

00000874 <sprintf>:
     874:	ae e0       	ldi	r26, 0x0E	; 14
     876:	b0 e0       	ldi	r27, 0x00	; 0
     878:	e0 e4       	ldi	r30, 0x40	; 64
     87a:	f4 e0       	ldi	r31, 0x04	; 4
     87c:	0c 94 2f 0a 	jmp	0x145e	; 0x145e <__prologue_saves__+0x1c>
     880:	0d 89       	ldd	r16, Y+21	; 0x15
     882:	1e 89       	ldd	r17, Y+22	; 0x16
     884:	86 e0       	ldi	r24, 0x06	; 6
     886:	8c 83       	std	Y+4, r24	; 0x04
     888:	1a 83       	std	Y+2, r17	; 0x02
     88a:	09 83       	std	Y+1, r16	; 0x01
     88c:	8f ef       	ldi	r24, 0xFF	; 255
     88e:	9f e7       	ldi	r25, 0x7F	; 127
     890:	9e 83       	std	Y+6, r25	; 0x06
     892:	8d 83       	std	Y+5, r24	; 0x05
     894:	ae 01       	movw	r20, r28
     896:	47 5e       	subi	r20, 0xE7	; 231
     898:	5f 4f       	sbci	r21, 0xFF	; 255
     89a:	6f 89       	ldd	r22, Y+23	; 0x17
     89c:	78 8d       	ldd	r23, Y+24	; 0x18
     89e:	ce 01       	movw	r24, r28
     8a0:	01 96       	adiw	r24, 0x01	; 1
     8a2:	0e 94 75 04 	call	0x8ea	; 0x8ea <vfprintf>
     8a6:	ef 81       	ldd	r30, Y+7	; 0x07
     8a8:	f8 85       	ldd	r31, Y+8	; 0x08
     8aa:	e0 0f       	add	r30, r16
     8ac:	f1 1f       	adc	r31, r17
     8ae:	10 82       	st	Z, r1
     8b0:	2e 96       	adiw	r28, 0x0e	; 14
     8b2:	e4 e0       	ldi	r30, 0x04	; 4
     8b4:	0c 94 4b 0a 	jmp	0x1496	; 0x1496 <__epilogue_restores__+0x1c>

000008b8 <sscanf>:
     8b8:	ae e0       	ldi	r26, 0x0E	; 14
     8ba:	b0 e0       	ldi	r27, 0x00	; 0
     8bc:	e2 e6       	ldi	r30, 0x62	; 98
     8be:	f4 e0       	ldi	r31, 0x04	; 4
     8c0:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__prologue_saves__+0x20>
     8c4:	85 e0       	ldi	r24, 0x05	; 5
     8c6:	8c 83       	std	Y+4, r24	; 0x04
     8c8:	8b 89       	ldd	r24, Y+19	; 0x13
     8ca:	9c 89       	ldd	r25, Y+20	; 0x14
     8cc:	9a 83       	std	Y+2, r25	; 0x02
     8ce:	89 83       	std	Y+1, r24	; 0x01
     8d0:	ae 01       	movw	r20, r28
     8d2:	49 5e       	subi	r20, 0xE9	; 233
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	6d 89       	ldd	r22, Y+21	; 0x15
     8d8:	7e 89       	ldd	r23, Y+22	; 0x16
     8da:	ce 01       	movw	r24, r28
     8dc:	01 96       	adiw	r24, 0x01	; 1
     8de:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <vfscanf>
     8e2:	2e 96       	adiw	r28, 0x0e	; 14
     8e4:	e2 e0       	ldi	r30, 0x02	; 2
     8e6:	0c 94 4d 0a 	jmp	0x149a	; 0x149a <__epilogue_restores__+0x20>

000008ea <vfprintf>:
     8ea:	ab e0       	ldi	r26, 0x0B	; 11
     8ec:	b0 e0       	ldi	r27, 0x00	; 0
     8ee:	eb e7       	ldi	r30, 0x7B	; 123
     8f0:	f4 e0       	ldi	r31, 0x04	; 4
     8f2:	0c 94 21 0a 	jmp	0x1442	; 0x1442 <__prologue_saves__>
     8f6:	6c 01       	movw	r12, r24
     8f8:	7b 01       	movw	r14, r22
     8fa:	8a 01       	movw	r16, r20
     8fc:	fc 01       	movw	r30, r24
     8fe:	17 82       	std	Z+7, r1	; 0x07
     900:	16 82       	std	Z+6, r1	; 0x06
     902:	83 81       	ldd	r24, Z+3	; 0x03
     904:	81 ff       	sbrs	r24, 1
     906:	cc c1       	rjmp	.+920    	; 0xca0 <__stack+0x3a1>
     908:	ce 01       	movw	r24, r28
     90a:	01 96       	adiw	r24, 0x01	; 1
     90c:	3c 01       	movw	r6, r24
     90e:	f6 01       	movw	r30, r12
     910:	93 81       	ldd	r25, Z+3	; 0x03
     912:	f7 01       	movw	r30, r14
     914:	93 fd       	sbrc	r25, 3
     916:	85 91       	lpm	r24, Z+
     918:	93 ff       	sbrs	r25, 3
     91a:	81 91       	ld	r24, Z+
     91c:	7f 01       	movw	r14, r30
     91e:	88 23       	and	r24, r24
     920:	09 f4       	brne	.+2      	; 0x924 <__stack+0x25>
     922:	ba c1       	rjmp	.+884    	; 0xc98 <__stack+0x399>
     924:	85 32       	cpi	r24, 0x25	; 37
     926:	39 f4       	brne	.+14     	; 0x936 <__stack+0x37>
     928:	93 fd       	sbrc	r25, 3
     92a:	85 91       	lpm	r24, Z+
     92c:	93 ff       	sbrs	r25, 3
     92e:	81 91       	ld	r24, Z+
     930:	7f 01       	movw	r14, r30
     932:	85 32       	cpi	r24, 0x25	; 37
     934:	29 f4       	brne	.+10     	; 0x940 <__stack+0x41>
     936:	b6 01       	movw	r22, r12
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <fputc>
     93e:	e7 cf       	rjmp	.-50     	; 0x90e <__stack+0xf>
     940:	91 2c       	mov	r9, r1
     942:	21 2c       	mov	r2, r1
     944:	31 2c       	mov	r3, r1
     946:	ff e1       	ldi	r31, 0x1F	; 31
     948:	f3 15       	cp	r31, r3
     94a:	d8 f0       	brcs	.+54     	; 0x982 <__stack+0x83>
     94c:	8b 32       	cpi	r24, 0x2B	; 43
     94e:	79 f0       	breq	.+30     	; 0x96e <__stack+0x6f>
     950:	38 f4       	brcc	.+14     	; 0x960 <__stack+0x61>
     952:	80 32       	cpi	r24, 0x20	; 32
     954:	79 f0       	breq	.+30     	; 0x974 <__stack+0x75>
     956:	83 32       	cpi	r24, 0x23	; 35
     958:	a1 f4       	brne	.+40     	; 0x982 <__stack+0x83>
     95a:	23 2d       	mov	r18, r3
     95c:	20 61       	ori	r18, 0x10	; 16
     95e:	1d c0       	rjmp	.+58     	; 0x99a <__stack+0x9b>
     960:	8d 32       	cpi	r24, 0x2D	; 45
     962:	61 f0       	breq	.+24     	; 0x97c <__stack+0x7d>
     964:	80 33       	cpi	r24, 0x30	; 48
     966:	69 f4       	brne	.+26     	; 0x982 <__stack+0x83>
     968:	23 2d       	mov	r18, r3
     96a:	21 60       	ori	r18, 0x01	; 1
     96c:	16 c0       	rjmp	.+44     	; 0x99a <__stack+0x9b>
     96e:	83 2d       	mov	r24, r3
     970:	82 60       	ori	r24, 0x02	; 2
     972:	38 2e       	mov	r3, r24
     974:	e3 2d       	mov	r30, r3
     976:	e4 60       	ori	r30, 0x04	; 4
     978:	3e 2e       	mov	r3, r30
     97a:	2a c0       	rjmp	.+84     	; 0x9d0 <__stack+0xd1>
     97c:	f3 2d       	mov	r31, r3
     97e:	f8 60       	ori	r31, 0x08	; 8
     980:	1d c0       	rjmp	.+58     	; 0x9bc <__stack+0xbd>
     982:	37 fc       	sbrc	r3, 7
     984:	2d c0       	rjmp	.+90     	; 0x9e0 <__stack+0xe1>
     986:	20 ed       	ldi	r18, 0xD0	; 208
     988:	28 0f       	add	r18, r24
     98a:	2a 30       	cpi	r18, 0x0A	; 10
     98c:	40 f0       	brcs	.+16     	; 0x99e <__stack+0x9f>
     98e:	8e 32       	cpi	r24, 0x2E	; 46
     990:	b9 f4       	brne	.+46     	; 0x9c0 <__stack+0xc1>
     992:	36 fc       	sbrc	r3, 6
     994:	81 c1       	rjmp	.+770    	; 0xc98 <__stack+0x399>
     996:	23 2d       	mov	r18, r3
     998:	20 64       	ori	r18, 0x40	; 64
     99a:	32 2e       	mov	r3, r18
     99c:	19 c0       	rjmp	.+50     	; 0x9d0 <__stack+0xd1>
     99e:	36 fe       	sbrs	r3, 6
     9a0:	06 c0       	rjmp	.+12     	; 0x9ae <__stack+0xaf>
     9a2:	8a e0       	ldi	r24, 0x0A	; 10
     9a4:	98 9e       	mul	r9, r24
     9a6:	20 0d       	add	r18, r0
     9a8:	11 24       	eor	r1, r1
     9aa:	92 2e       	mov	r9, r18
     9ac:	11 c0       	rjmp	.+34     	; 0x9d0 <__stack+0xd1>
     9ae:	ea e0       	ldi	r30, 0x0A	; 10
     9b0:	2e 9e       	mul	r2, r30
     9b2:	20 0d       	add	r18, r0
     9b4:	11 24       	eor	r1, r1
     9b6:	22 2e       	mov	r2, r18
     9b8:	f3 2d       	mov	r31, r3
     9ba:	f0 62       	ori	r31, 0x20	; 32
     9bc:	3f 2e       	mov	r3, r31
     9be:	08 c0       	rjmp	.+16     	; 0x9d0 <__stack+0xd1>
     9c0:	8c 36       	cpi	r24, 0x6C	; 108
     9c2:	21 f4       	brne	.+8      	; 0x9cc <__stack+0xcd>
     9c4:	83 2d       	mov	r24, r3
     9c6:	80 68       	ori	r24, 0x80	; 128
     9c8:	38 2e       	mov	r3, r24
     9ca:	02 c0       	rjmp	.+4      	; 0x9d0 <__stack+0xd1>
     9cc:	88 36       	cpi	r24, 0x68	; 104
     9ce:	41 f4       	brne	.+16     	; 0x9e0 <__stack+0xe1>
     9d0:	f7 01       	movw	r30, r14
     9d2:	93 fd       	sbrc	r25, 3
     9d4:	85 91       	lpm	r24, Z+
     9d6:	93 ff       	sbrs	r25, 3
     9d8:	81 91       	ld	r24, Z+
     9da:	7f 01       	movw	r14, r30
     9dc:	81 11       	cpse	r24, r1
     9de:	b3 cf       	rjmp	.-154    	; 0x946 <__stack+0x47>
     9e0:	98 2f       	mov	r25, r24
     9e2:	9f 7d       	andi	r25, 0xDF	; 223
     9e4:	95 54       	subi	r25, 0x45	; 69
     9e6:	93 30       	cpi	r25, 0x03	; 3
     9e8:	28 f4       	brcc	.+10     	; 0x9f4 <__stack+0xf5>
     9ea:	0c 5f       	subi	r16, 0xFC	; 252
     9ec:	1f 4f       	sbci	r17, 0xFF	; 255
     9ee:	9f e3       	ldi	r25, 0x3F	; 63
     9f0:	99 83       	std	Y+1, r25	; 0x01
     9f2:	0d c0       	rjmp	.+26     	; 0xa0e <__stack+0x10f>
     9f4:	83 36       	cpi	r24, 0x63	; 99
     9f6:	31 f0       	breq	.+12     	; 0xa04 <__stack+0x105>
     9f8:	83 37       	cpi	r24, 0x73	; 115
     9fa:	71 f0       	breq	.+28     	; 0xa18 <__stack+0x119>
     9fc:	83 35       	cpi	r24, 0x53	; 83
     9fe:	09 f0       	breq	.+2      	; 0xa02 <__stack+0x103>
     a00:	59 c0       	rjmp	.+178    	; 0xab4 <__stack+0x1b5>
     a02:	21 c0       	rjmp	.+66     	; 0xa46 <__stack+0x147>
     a04:	f8 01       	movw	r30, r16
     a06:	80 81       	ld	r24, Z
     a08:	89 83       	std	Y+1, r24	; 0x01
     a0a:	0e 5f       	subi	r16, 0xFE	; 254
     a0c:	1f 4f       	sbci	r17, 0xFF	; 255
     a0e:	88 24       	eor	r8, r8
     a10:	83 94       	inc	r8
     a12:	91 2c       	mov	r9, r1
     a14:	53 01       	movw	r10, r6
     a16:	13 c0       	rjmp	.+38     	; 0xa3e <__stack+0x13f>
     a18:	28 01       	movw	r4, r16
     a1a:	f2 e0       	ldi	r31, 0x02	; 2
     a1c:	4f 0e       	add	r4, r31
     a1e:	51 1c       	adc	r5, r1
     a20:	f8 01       	movw	r30, r16
     a22:	a0 80       	ld	r10, Z
     a24:	b1 80       	ldd	r11, Z+1	; 0x01
     a26:	36 fe       	sbrs	r3, 6
     a28:	03 c0       	rjmp	.+6      	; 0xa30 <__stack+0x131>
     a2a:	69 2d       	mov	r22, r9
     a2c:	70 e0       	ldi	r23, 0x00	; 0
     a2e:	02 c0       	rjmp	.+4      	; 0xa34 <__stack+0x135>
     a30:	6f ef       	ldi	r22, 0xFF	; 255
     a32:	7f ef       	ldi	r23, 0xFF	; 255
     a34:	c5 01       	movw	r24, r10
     a36:	0e 94 22 09 	call	0x1244	; 0x1244 <strnlen>
     a3a:	4c 01       	movw	r8, r24
     a3c:	82 01       	movw	r16, r4
     a3e:	f3 2d       	mov	r31, r3
     a40:	ff 77       	andi	r31, 0x7F	; 127
     a42:	3f 2e       	mov	r3, r31
     a44:	16 c0       	rjmp	.+44     	; 0xa72 <__stack+0x173>
     a46:	28 01       	movw	r4, r16
     a48:	22 e0       	ldi	r18, 0x02	; 2
     a4a:	42 0e       	add	r4, r18
     a4c:	51 1c       	adc	r5, r1
     a4e:	f8 01       	movw	r30, r16
     a50:	a0 80       	ld	r10, Z
     a52:	b1 80       	ldd	r11, Z+1	; 0x01
     a54:	36 fe       	sbrs	r3, 6
     a56:	03 c0       	rjmp	.+6      	; 0xa5e <__stack+0x15f>
     a58:	69 2d       	mov	r22, r9
     a5a:	70 e0       	ldi	r23, 0x00	; 0
     a5c:	02 c0       	rjmp	.+4      	; 0xa62 <__stack+0x163>
     a5e:	6f ef       	ldi	r22, 0xFF	; 255
     a60:	7f ef       	ldi	r23, 0xFF	; 255
     a62:	c5 01       	movw	r24, r10
     a64:	0e 94 17 09 	call	0x122e	; 0x122e <strnlen_P>
     a68:	4c 01       	movw	r8, r24
     a6a:	f3 2d       	mov	r31, r3
     a6c:	f0 68       	ori	r31, 0x80	; 128
     a6e:	3f 2e       	mov	r3, r31
     a70:	82 01       	movw	r16, r4
     a72:	33 fc       	sbrc	r3, 3
     a74:	1b c0       	rjmp	.+54     	; 0xaac <__stack+0x1ad>
     a76:	82 2d       	mov	r24, r2
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	88 16       	cp	r8, r24
     a7c:	99 06       	cpc	r9, r25
     a7e:	b0 f4       	brcc	.+44     	; 0xaac <__stack+0x1ad>
     a80:	b6 01       	movw	r22, r12
     a82:	80 e2       	ldi	r24, 0x20	; 32
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <fputc>
     a8a:	2a 94       	dec	r2
     a8c:	f4 cf       	rjmp	.-24     	; 0xa76 <__stack+0x177>
     a8e:	f5 01       	movw	r30, r10
     a90:	37 fc       	sbrc	r3, 7
     a92:	85 91       	lpm	r24, Z+
     a94:	37 fe       	sbrs	r3, 7
     a96:	81 91       	ld	r24, Z+
     a98:	5f 01       	movw	r10, r30
     a9a:	b6 01       	movw	r22, r12
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <fputc>
     aa2:	21 10       	cpse	r2, r1
     aa4:	2a 94       	dec	r2
     aa6:	21 e0       	ldi	r18, 0x01	; 1
     aa8:	82 1a       	sub	r8, r18
     aaa:	91 08       	sbc	r9, r1
     aac:	81 14       	cp	r8, r1
     aae:	91 04       	cpc	r9, r1
     ab0:	71 f7       	brne	.-36     	; 0xa8e <__stack+0x18f>
     ab2:	e8 c0       	rjmp	.+464    	; 0xc84 <__stack+0x385>
     ab4:	84 36       	cpi	r24, 0x64	; 100
     ab6:	11 f0       	breq	.+4      	; 0xabc <__stack+0x1bd>
     ab8:	89 36       	cpi	r24, 0x69	; 105
     aba:	41 f5       	brne	.+80     	; 0xb0c <__stack+0x20d>
     abc:	f8 01       	movw	r30, r16
     abe:	37 fe       	sbrs	r3, 7
     ac0:	07 c0       	rjmp	.+14     	; 0xad0 <__stack+0x1d1>
     ac2:	60 81       	ld	r22, Z
     ac4:	71 81       	ldd	r23, Z+1	; 0x01
     ac6:	82 81       	ldd	r24, Z+2	; 0x02
     ac8:	93 81       	ldd	r25, Z+3	; 0x03
     aca:	0c 5f       	subi	r16, 0xFC	; 252
     acc:	1f 4f       	sbci	r17, 0xFF	; 255
     ace:	08 c0       	rjmp	.+16     	; 0xae0 <__stack+0x1e1>
     ad0:	60 81       	ld	r22, Z
     ad2:	71 81       	ldd	r23, Z+1	; 0x01
     ad4:	07 2e       	mov	r0, r23
     ad6:	00 0c       	add	r0, r0
     ad8:	88 0b       	sbc	r24, r24
     ada:	99 0b       	sbc	r25, r25
     adc:	0e 5f       	subi	r16, 0xFE	; 254
     ade:	1f 4f       	sbci	r17, 0xFF	; 255
     ae0:	f3 2d       	mov	r31, r3
     ae2:	ff 76       	andi	r31, 0x6F	; 111
     ae4:	3f 2e       	mov	r3, r31
     ae6:	97 ff       	sbrs	r25, 7
     ae8:	09 c0       	rjmp	.+18     	; 0xafc <__stack+0x1fd>
     aea:	90 95       	com	r25
     aec:	80 95       	com	r24
     aee:	70 95       	com	r23
     af0:	61 95       	neg	r22
     af2:	7f 4f       	sbci	r23, 0xFF	; 255
     af4:	8f 4f       	sbci	r24, 0xFF	; 255
     af6:	9f 4f       	sbci	r25, 0xFF	; 255
     af8:	f0 68       	ori	r31, 0x80	; 128
     afa:	3f 2e       	mov	r3, r31
     afc:	2a e0       	ldi	r18, 0x0A	; 10
     afe:	30 e0       	ldi	r19, 0x00	; 0
     b00:	a3 01       	movw	r20, r6
     b02:	0e 94 c0 09 	call	0x1380	; 0x1380 <__ultoa_invert>
     b06:	88 2e       	mov	r8, r24
     b08:	86 18       	sub	r8, r6
     b0a:	45 c0       	rjmp	.+138    	; 0xb96 <__stack+0x297>
     b0c:	85 37       	cpi	r24, 0x75	; 117
     b0e:	31 f4       	brne	.+12     	; 0xb1c <__stack+0x21d>
     b10:	23 2d       	mov	r18, r3
     b12:	2f 7e       	andi	r18, 0xEF	; 239
     b14:	b2 2e       	mov	r11, r18
     b16:	2a e0       	ldi	r18, 0x0A	; 10
     b18:	30 e0       	ldi	r19, 0x00	; 0
     b1a:	25 c0       	rjmp	.+74     	; 0xb66 <__stack+0x267>
     b1c:	93 2d       	mov	r25, r3
     b1e:	99 7f       	andi	r25, 0xF9	; 249
     b20:	b9 2e       	mov	r11, r25
     b22:	8f 36       	cpi	r24, 0x6F	; 111
     b24:	c1 f0       	breq	.+48     	; 0xb56 <__stack+0x257>
     b26:	18 f4       	brcc	.+6      	; 0xb2e <__stack+0x22f>
     b28:	88 35       	cpi	r24, 0x58	; 88
     b2a:	79 f0       	breq	.+30     	; 0xb4a <__stack+0x24b>
     b2c:	b5 c0       	rjmp	.+362    	; 0xc98 <__stack+0x399>
     b2e:	80 37       	cpi	r24, 0x70	; 112
     b30:	19 f0       	breq	.+6      	; 0xb38 <__stack+0x239>
     b32:	88 37       	cpi	r24, 0x78	; 120
     b34:	21 f0       	breq	.+8      	; 0xb3e <__stack+0x23f>
     b36:	b0 c0       	rjmp	.+352    	; 0xc98 <__stack+0x399>
     b38:	e9 2f       	mov	r30, r25
     b3a:	e0 61       	ori	r30, 0x10	; 16
     b3c:	be 2e       	mov	r11, r30
     b3e:	b4 fe       	sbrs	r11, 4
     b40:	0d c0       	rjmp	.+26     	; 0xb5c <__stack+0x25d>
     b42:	fb 2d       	mov	r31, r11
     b44:	f4 60       	ori	r31, 0x04	; 4
     b46:	bf 2e       	mov	r11, r31
     b48:	09 c0       	rjmp	.+18     	; 0xb5c <__stack+0x25d>
     b4a:	34 fe       	sbrs	r3, 4
     b4c:	0a c0       	rjmp	.+20     	; 0xb62 <__stack+0x263>
     b4e:	29 2f       	mov	r18, r25
     b50:	26 60       	ori	r18, 0x06	; 6
     b52:	b2 2e       	mov	r11, r18
     b54:	06 c0       	rjmp	.+12     	; 0xb62 <__stack+0x263>
     b56:	28 e0       	ldi	r18, 0x08	; 8
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	05 c0       	rjmp	.+10     	; 0xb66 <__stack+0x267>
     b5c:	20 e1       	ldi	r18, 0x10	; 16
     b5e:	30 e0       	ldi	r19, 0x00	; 0
     b60:	02 c0       	rjmp	.+4      	; 0xb66 <__stack+0x267>
     b62:	20 e1       	ldi	r18, 0x10	; 16
     b64:	32 e0       	ldi	r19, 0x02	; 2
     b66:	f8 01       	movw	r30, r16
     b68:	b7 fe       	sbrs	r11, 7
     b6a:	07 c0       	rjmp	.+14     	; 0xb7a <__stack+0x27b>
     b6c:	60 81       	ld	r22, Z
     b6e:	71 81       	ldd	r23, Z+1	; 0x01
     b70:	82 81       	ldd	r24, Z+2	; 0x02
     b72:	93 81       	ldd	r25, Z+3	; 0x03
     b74:	0c 5f       	subi	r16, 0xFC	; 252
     b76:	1f 4f       	sbci	r17, 0xFF	; 255
     b78:	06 c0       	rjmp	.+12     	; 0xb86 <__stack+0x287>
     b7a:	60 81       	ld	r22, Z
     b7c:	71 81       	ldd	r23, Z+1	; 0x01
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	0e 5f       	subi	r16, 0xFE	; 254
     b84:	1f 4f       	sbci	r17, 0xFF	; 255
     b86:	a3 01       	movw	r20, r6
     b88:	0e 94 c0 09 	call	0x1380	; 0x1380 <__ultoa_invert>
     b8c:	88 2e       	mov	r8, r24
     b8e:	86 18       	sub	r8, r6
     b90:	fb 2d       	mov	r31, r11
     b92:	ff 77       	andi	r31, 0x7F	; 127
     b94:	3f 2e       	mov	r3, r31
     b96:	36 fe       	sbrs	r3, 6
     b98:	0d c0       	rjmp	.+26     	; 0xbb4 <__stack+0x2b5>
     b9a:	23 2d       	mov	r18, r3
     b9c:	2e 7f       	andi	r18, 0xFE	; 254
     b9e:	a2 2e       	mov	r10, r18
     ba0:	89 14       	cp	r8, r9
     ba2:	58 f4       	brcc	.+22     	; 0xbba <__stack+0x2bb>
     ba4:	34 fe       	sbrs	r3, 4
     ba6:	0b c0       	rjmp	.+22     	; 0xbbe <__stack+0x2bf>
     ba8:	32 fc       	sbrc	r3, 2
     baa:	09 c0       	rjmp	.+18     	; 0xbbe <__stack+0x2bf>
     bac:	83 2d       	mov	r24, r3
     bae:	8e 7e       	andi	r24, 0xEE	; 238
     bb0:	a8 2e       	mov	r10, r24
     bb2:	05 c0       	rjmp	.+10     	; 0xbbe <__stack+0x2bf>
     bb4:	b8 2c       	mov	r11, r8
     bb6:	a3 2c       	mov	r10, r3
     bb8:	03 c0       	rjmp	.+6      	; 0xbc0 <__stack+0x2c1>
     bba:	b8 2c       	mov	r11, r8
     bbc:	01 c0       	rjmp	.+2      	; 0xbc0 <__stack+0x2c1>
     bbe:	b9 2c       	mov	r11, r9
     bc0:	a4 fe       	sbrs	r10, 4
     bc2:	0f c0       	rjmp	.+30     	; 0xbe2 <__stack+0x2e3>
     bc4:	fe 01       	movw	r30, r28
     bc6:	e8 0d       	add	r30, r8
     bc8:	f1 1d       	adc	r31, r1
     bca:	80 81       	ld	r24, Z
     bcc:	80 33       	cpi	r24, 0x30	; 48
     bce:	21 f4       	brne	.+8      	; 0xbd8 <__stack+0x2d9>
     bd0:	9a 2d       	mov	r25, r10
     bd2:	99 7e       	andi	r25, 0xE9	; 233
     bd4:	a9 2e       	mov	r10, r25
     bd6:	09 c0       	rjmp	.+18     	; 0xbea <__stack+0x2eb>
     bd8:	a2 fe       	sbrs	r10, 2
     bda:	06 c0       	rjmp	.+12     	; 0xbe8 <__stack+0x2e9>
     bdc:	b3 94       	inc	r11
     bde:	b3 94       	inc	r11
     be0:	04 c0       	rjmp	.+8      	; 0xbea <__stack+0x2eb>
     be2:	8a 2d       	mov	r24, r10
     be4:	86 78       	andi	r24, 0x86	; 134
     be6:	09 f0       	breq	.+2      	; 0xbea <__stack+0x2eb>
     be8:	b3 94       	inc	r11
     bea:	a3 fc       	sbrc	r10, 3
     bec:	11 c0       	rjmp	.+34     	; 0xc10 <__stack+0x311>
     bee:	a0 fe       	sbrs	r10, 0
     bf0:	06 c0       	rjmp	.+12     	; 0xbfe <__stack+0x2ff>
     bf2:	b2 14       	cp	r11, r2
     bf4:	88 f4       	brcc	.+34     	; 0xc18 <__stack+0x319>
     bf6:	28 0c       	add	r2, r8
     bf8:	92 2c       	mov	r9, r2
     bfa:	9b 18       	sub	r9, r11
     bfc:	0e c0       	rjmp	.+28     	; 0xc1a <__stack+0x31b>
     bfe:	b2 14       	cp	r11, r2
     c00:	60 f4       	brcc	.+24     	; 0xc1a <__stack+0x31b>
     c02:	b6 01       	movw	r22, r12
     c04:	80 e2       	ldi	r24, 0x20	; 32
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <fputc>
     c0c:	b3 94       	inc	r11
     c0e:	f7 cf       	rjmp	.-18     	; 0xbfe <__stack+0x2ff>
     c10:	b2 14       	cp	r11, r2
     c12:	18 f4       	brcc	.+6      	; 0xc1a <__stack+0x31b>
     c14:	2b 18       	sub	r2, r11
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <__stack+0x31d>
     c18:	98 2c       	mov	r9, r8
     c1a:	21 2c       	mov	r2, r1
     c1c:	a4 fe       	sbrs	r10, 4
     c1e:	10 c0       	rjmp	.+32     	; 0xc40 <__stack+0x341>
     c20:	b6 01       	movw	r22, r12
     c22:	80 e3       	ldi	r24, 0x30	; 48
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <fputc>
     c2a:	a2 fe       	sbrs	r10, 2
     c2c:	17 c0       	rjmp	.+46     	; 0xc5c <__stack+0x35d>
     c2e:	a1 fc       	sbrc	r10, 1
     c30:	03 c0       	rjmp	.+6      	; 0xc38 <__stack+0x339>
     c32:	88 e7       	ldi	r24, 0x78	; 120
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	02 c0       	rjmp	.+4      	; 0xc3c <__stack+0x33d>
     c38:	88 e5       	ldi	r24, 0x58	; 88
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	b6 01       	movw	r22, r12
     c3e:	0c c0       	rjmp	.+24     	; 0xc58 <__stack+0x359>
     c40:	8a 2d       	mov	r24, r10
     c42:	86 78       	andi	r24, 0x86	; 134
     c44:	59 f0       	breq	.+22     	; 0xc5c <__stack+0x35d>
     c46:	a1 fe       	sbrs	r10, 1
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <__stack+0x34f>
     c4a:	8b e2       	ldi	r24, 0x2B	; 43
     c4c:	01 c0       	rjmp	.+2      	; 0xc50 <__stack+0x351>
     c4e:	80 e2       	ldi	r24, 0x20	; 32
     c50:	a7 fc       	sbrc	r10, 7
     c52:	8d e2       	ldi	r24, 0x2D	; 45
     c54:	b6 01       	movw	r22, r12
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <fputc>
     c5c:	89 14       	cp	r8, r9
     c5e:	38 f4       	brcc	.+14     	; 0xc6e <__stack+0x36f>
     c60:	b6 01       	movw	r22, r12
     c62:	80 e3       	ldi	r24, 0x30	; 48
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <fputc>
     c6a:	9a 94       	dec	r9
     c6c:	f7 cf       	rjmp	.-18     	; 0xc5c <__stack+0x35d>
     c6e:	8a 94       	dec	r8
     c70:	f3 01       	movw	r30, r6
     c72:	e8 0d       	add	r30, r8
     c74:	f1 1d       	adc	r31, r1
     c76:	80 81       	ld	r24, Z
     c78:	b6 01       	movw	r22, r12
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <fputc>
     c80:	81 10       	cpse	r8, r1
     c82:	f5 cf       	rjmp	.-22     	; 0xc6e <__stack+0x36f>
     c84:	22 20       	and	r2, r2
     c86:	09 f4       	brne	.+2      	; 0xc8a <__stack+0x38b>
     c88:	42 ce       	rjmp	.-892    	; 0x90e <__stack+0xf>
     c8a:	b6 01       	movw	r22, r12
     c8c:	80 e2       	ldi	r24, 0x20	; 32
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <fputc>
     c94:	2a 94       	dec	r2
     c96:	f6 cf       	rjmp	.-20     	; 0xc84 <__stack+0x385>
     c98:	f6 01       	movw	r30, r12
     c9a:	86 81       	ldd	r24, Z+6	; 0x06
     c9c:	97 81       	ldd	r25, Z+7	; 0x07
     c9e:	02 c0       	rjmp	.+4      	; 0xca4 <__stack+0x3a5>
     ca0:	8f ef       	ldi	r24, 0xFF	; 255
     ca2:	9f ef       	ldi	r25, 0xFF	; 255
     ca4:	2b 96       	adiw	r28, 0x0b	; 11
     ca6:	e2 e1       	ldi	r30, 0x12	; 18
     ca8:	0c 94 3d 0a 	jmp	0x147a	; 0x147a <__epilogue_restores__>

00000cac <putval>:
     cac:	20 fd       	sbrc	r18, 0
     cae:	09 c0       	rjmp	.+18     	; 0xcc2 <putval+0x16>
     cb0:	fc 01       	movw	r30, r24
     cb2:	23 fd       	sbrc	r18, 3
     cb4:	05 c0       	rjmp	.+10     	; 0xcc0 <putval+0x14>
     cb6:	22 ff       	sbrs	r18, 2
     cb8:	02 c0       	rjmp	.+4      	; 0xcbe <putval+0x12>
     cba:	73 83       	std	Z+3, r23	; 0x03
     cbc:	62 83       	std	Z+2, r22	; 0x02
     cbe:	51 83       	std	Z+1, r21	; 0x01
     cc0:	40 83       	st	Z, r20
     cc2:	08 95       	ret

00000cc4 <mulacc>:
     cc4:	44 fd       	sbrc	r20, 4
     cc6:	17 c0       	rjmp	.+46     	; 0xcf6 <mulacc+0x32>
     cc8:	46 fd       	sbrc	r20, 6
     cca:	17 c0       	rjmp	.+46     	; 0xcfa <mulacc+0x36>
     ccc:	ab 01       	movw	r20, r22
     cce:	bc 01       	movw	r22, r24
     cd0:	da 01       	movw	r26, r20
     cd2:	fb 01       	movw	r30, r22
     cd4:	aa 0f       	add	r26, r26
     cd6:	bb 1f       	adc	r27, r27
     cd8:	ee 1f       	adc	r30, r30
     cda:	ff 1f       	adc	r31, r31
     cdc:	10 94       	com	r1
     cde:	d1 f7       	brne	.-12     	; 0xcd4 <mulacc+0x10>
     ce0:	4a 0f       	add	r20, r26
     ce2:	5b 1f       	adc	r21, r27
     ce4:	6e 1f       	adc	r22, r30
     ce6:	7f 1f       	adc	r23, r31
     ce8:	cb 01       	movw	r24, r22
     cea:	ba 01       	movw	r22, r20
     cec:	66 0f       	add	r22, r22
     cee:	77 1f       	adc	r23, r23
     cf0:	88 1f       	adc	r24, r24
     cf2:	99 1f       	adc	r25, r25
     cf4:	09 c0       	rjmp	.+18     	; 0xd08 <mulacc+0x44>
     cf6:	33 e0       	ldi	r19, 0x03	; 3
     cf8:	01 c0       	rjmp	.+2      	; 0xcfc <mulacc+0x38>
     cfa:	34 e0       	ldi	r19, 0x04	; 4
     cfc:	66 0f       	add	r22, r22
     cfe:	77 1f       	adc	r23, r23
     d00:	88 1f       	adc	r24, r24
     d02:	99 1f       	adc	r25, r25
     d04:	31 50       	subi	r19, 0x01	; 1
     d06:	d1 f7       	brne	.-12     	; 0xcfc <mulacc+0x38>
     d08:	62 0f       	add	r22, r18
     d0a:	71 1d       	adc	r23, r1
     d0c:	81 1d       	adc	r24, r1
     d0e:	91 1d       	adc	r25, r1
     d10:	08 95       	ret

00000d12 <skip_spaces>:
     d12:	0f 93       	push	r16
     d14:	1f 93       	push	r17
     d16:	cf 93       	push	r28
     d18:	df 93       	push	r29
     d1a:	8c 01       	movw	r16, r24
     d1c:	c8 01       	movw	r24, r16
     d1e:	0e 94 2d 09 	call	0x125a	; 0x125a <fgetc>
     d22:	ec 01       	movw	r28, r24
     d24:	97 fd       	sbrc	r25, 7
     d26:	08 c0       	rjmp	.+16     	; 0xd38 <skip_spaces+0x26>
     d28:	0e 94 03 09 	call	0x1206	; 0x1206 <isspace>
     d2c:	89 2b       	or	r24, r25
     d2e:	b1 f7       	brne	.-20     	; 0xd1c <skip_spaces+0xa>
     d30:	b8 01       	movw	r22, r16
     d32:	ce 01       	movw	r24, r28
     d34:	0e 94 a7 09 	call	0x134e	; 0x134e <ungetc>
     d38:	ce 01       	movw	r24, r28
     d3a:	df 91       	pop	r29
     d3c:	cf 91       	pop	r28
     d3e:	1f 91       	pop	r17
     d40:	0f 91       	pop	r16
     d42:	08 95       	ret

00000d44 <conv_int>:
     d44:	8f 92       	push	r8
     d46:	9f 92       	push	r9
     d48:	af 92       	push	r10
     d4a:	bf 92       	push	r11
     d4c:	ef 92       	push	r14
     d4e:	ff 92       	push	r15
     d50:	0f 93       	push	r16
     d52:	1f 93       	push	r17
     d54:	cf 93       	push	r28
     d56:	df 93       	push	r29
     d58:	8c 01       	movw	r16, r24
     d5a:	d6 2f       	mov	r29, r22
     d5c:	7a 01       	movw	r14, r20
     d5e:	b2 2e       	mov	r11, r18
     d60:	0e 94 2d 09 	call	0x125a	; 0x125a <fgetc>
     d64:	9c 01       	movw	r18, r24
     d66:	33 27       	eor	r19, r19
     d68:	2b 32       	cpi	r18, 0x2B	; 43
     d6a:	31 05       	cpc	r19, r1
     d6c:	31 f0       	breq	.+12     	; 0xd7a <conv_int+0x36>
     d6e:	2d 32       	cpi	r18, 0x2D	; 45
     d70:	31 05       	cpc	r19, r1
     d72:	61 f4       	brne	.+24     	; 0xd8c <conv_int+0x48>
     d74:	8b 2d       	mov	r24, r11
     d76:	80 68       	ori	r24, 0x80	; 128
     d78:	b8 2e       	mov	r11, r24
     d7a:	d1 50       	subi	r29, 0x01	; 1
     d7c:	11 f4       	brne	.+4      	; 0xd82 <conv_int+0x3e>
     d7e:	80 e0       	ldi	r24, 0x00	; 0
     d80:	68 c0       	rjmp	.+208    	; 0xe52 <conv_int+0x10e>
     d82:	c8 01       	movw	r24, r16
     d84:	0e 94 2d 09 	call	0x125a	; 0x125a <fgetc>
     d88:	97 fd       	sbrc	r25, 7
     d8a:	f9 cf       	rjmp	.-14     	; 0xd7e <conv_int+0x3a>
     d8c:	cb 2d       	mov	r28, r11
     d8e:	cd 7f       	andi	r28, 0xFD	; 253
     d90:	2b 2d       	mov	r18, r11
     d92:	20 73       	andi	r18, 0x30	; 48
     d94:	09 f5       	brne	.+66     	; 0xdd8 <conv_int+0x94>
     d96:	80 33       	cpi	r24, 0x30	; 48
     d98:	f9 f4       	brne	.+62     	; 0xdd8 <conv_int+0x94>
     d9a:	aa 24       	eor	r10, r10
     d9c:	aa 94       	dec	r10
     d9e:	ad 0e       	add	r10, r29
     da0:	09 f4       	brne	.+2      	; 0xda4 <conv_int+0x60>
     da2:	43 c0       	rjmp	.+134    	; 0xe2a <conv_int+0xe6>
     da4:	c8 01       	movw	r24, r16
     da6:	0e 94 2d 09 	call	0x125a	; 0x125a <fgetc>
     daa:	97 fd       	sbrc	r25, 7
     dac:	3e c0       	rjmp	.+124    	; 0xe2a <conv_int+0xe6>
     dae:	9c 01       	movw	r18, r24
     db0:	2f 7d       	andi	r18, 0xDF	; 223
     db2:	33 27       	eor	r19, r19
     db4:	28 35       	cpi	r18, 0x58	; 88
     db6:	31 05       	cpc	r19, r1
     db8:	49 f4       	brne	.+18     	; 0xdcc <conv_int+0x88>
     dba:	c2 64       	ori	r28, 0x42	; 66
     dbc:	d2 50       	subi	r29, 0x02	; 2
     dbe:	a9 f1       	breq	.+106    	; 0xe2a <conv_int+0xe6>
     dc0:	c8 01       	movw	r24, r16
     dc2:	0e 94 2d 09 	call	0x125a	; 0x125a <fgetc>
     dc6:	97 ff       	sbrs	r25, 7
     dc8:	07 c0       	rjmp	.+14     	; 0xdd8 <conv_int+0x94>
     dca:	2f c0       	rjmp	.+94     	; 0xe2a <conv_int+0xe6>
     dcc:	b6 fe       	sbrs	r11, 6
     dce:	02 c0       	rjmp	.+4      	; 0xdd4 <conv_int+0x90>
     dd0:	c2 60       	ori	r28, 0x02	; 2
     dd2:	01 c0       	rjmp	.+2      	; 0xdd6 <conv_int+0x92>
     dd4:	c2 61       	ori	r28, 0x12	; 18
     dd6:	da 2d       	mov	r29, r10
     dd8:	81 2c       	mov	r8, r1
     dda:	91 2c       	mov	r9, r1
     ddc:	54 01       	movw	r10, r8
     dde:	20 ed       	ldi	r18, 0xD0	; 208
     de0:	28 0f       	add	r18, r24
     de2:	28 30       	cpi	r18, 0x08	; 8
     de4:	80 f0       	brcs	.+32     	; 0xe06 <conv_int+0xc2>
     de6:	c4 ff       	sbrs	r28, 4
     de8:	04 c0       	rjmp	.+8      	; 0xdf2 <conv_int+0xae>
     dea:	b8 01       	movw	r22, r16
     dec:	0e 94 a7 09 	call	0x134e	; 0x134e <ungetc>
     df0:	19 c0       	rjmp	.+50     	; 0xe24 <conv_int+0xe0>
     df2:	2a 30       	cpi	r18, 0x0A	; 10
     df4:	40 f0       	brcs	.+16     	; 0xe06 <conv_int+0xc2>
     df6:	c6 ff       	sbrs	r28, 6
     df8:	f8 cf       	rjmp	.-16     	; 0xdea <conv_int+0xa6>
     dfa:	2f 7d       	andi	r18, 0xDF	; 223
     dfc:	3f ee       	ldi	r19, 0xEF	; 239
     dfe:	32 0f       	add	r19, r18
     e00:	36 30       	cpi	r19, 0x06	; 6
     e02:	98 f7       	brcc	.-26     	; 0xdea <conv_int+0xa6>
     e04:	27 50       	subi	r18, 0x07	; 7
     e06:	4c 2f       	mov	r20, r28
     e08:	c5 01       	movw	r24, r10
     e0a:	b4 01       	movw	r22, r8
     e0c:	0e 94 62 06 	call	0xcc4	; 0xcc4 <mulacc>
     e10:	4b 01       	movw	r8, r22
     e12:	5c 01       	movw	r10, r24
     e14:	c2 60       	ori	r28, 0x02	; 2
     e16:	d1 50       	subi	r29, 0x01	; 1
     e18:	59 f0       	breq	.+22     	; 0xe30 <conv_int+0xec>
     e1a:	c8 01       	movw	r24, r16
     e1c:	0e 94 2d 09 	call	0x125a	; 0x125a <fgetc>
     e20:	97 ff       	sbrs	r25, 7
     e22:	dd cf       	rjmp	.-70     	; 0xdde <conv_int+0x9a>
     e24:	c1 fd       	sbrc	r28, 1
     e26:	04 c0       	rjmp	.+8      	; 0xe30 <conv_int+0xec>
     e28:	aa cf       	rjmp	.-172    	; 0xd7e <conv_int+0x3a>
     e2a:	81 2c       	mov	r8, r1
     e2c:	91 2c       	mov	r9, r1
     e2e:	54 01       	movw	r10, r8
     e30:	c7 ff       	sbrs	r28, 7
     e32:	08 c0       	rjmp	.+16     	; 0xe44 <conv_int+0x100>
     e34:	b0 94       	com	r11
     e36:	a0 94       	com	r10
     e38:	90 94       	com	r9
     e3a:	80 94       	com	r8
     e3c:	81 1c       	adc	r8, r1
     e3e:	91 1c       	adc	r9, r1
     e40:	a1 1c       	adc	r10, r1
     e42:	b1 1c       	adc	r11, r1
     e44:	2c 2f       	mov	r18, r28
     e46:	b5 01       	movw	r22, r10
     e48:	a4 01       	movw	r20, r8
     e4a:	c7 01       	movw	r24, r14
     e4c:	0e 94 56 06 	call	0xcac	; 0xcac <putval>
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	df 91       	pop	r29
     e54:	cf 91       	pop	r28
     e56:	1f 91       	pop	r17
     e58:	0f 91       	pop	r16
     e5a:	ff 90       	pop	r15
     e5c:	ef 90       	pop	r14
     e5e:	bf 90       	pop	r11
     e60:	af 90       	pop	r10
     e62:	9f 90       	pop	r9
     e64:	8f 90       	pop	r8
     e66:	08 95       	ret

00000e68 <conv_brk>:
     e68:	a0 e2       	ldi	r26, 0x20	; 32
     e6a:	b0 e0       	ldi	r27, 0x00	; 0
     e6c:	ea e3       	ldi	r30, 0x3A	; 58
     e6e:	f7 e0       	ldi	r31, 0x07	; 7
     e70:	0c 94 24 0a 	jmp	0x1448	; 0x1448 <__prologue_saves__+0x6>
     e74:	5c 01       	movw	r10, r24
     e76:	96 2e       	mov	r9, r22
     e78:	7a 01       	movw	r14, r20
     e7a:	f9 01       	movw	r30, r18
     e7c:	8e 01       	movw	r16, r28
     e7e:	0f 5f       	subi	r16, 0xFF	; 255
     e80:	1f 4f       	sbci	r17, 0xFF	; 255
     e82:	68 01       	movw	r12, r16
     e84:	80 e2       	ldi	r24, 0x20	; 32
     e86:	d8 01       	movw	r26, r16
     e88:	1d 92       	st	X+, r1
     e8a:	8a 95       	dec	r24
     e8c:	e9 f7       	brne	.-6      	; 0xe88 <conv_brk+0x20>
     e8e:	d5 01       	movw	r26, r10
     e90:	13 96       	adiw	r26, 0x03	; 3
     e92:	8c 90       	ld	r8, X
     e94:	80 e0       	ldi	r24, 0x00	; 0
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	61 2c       	mov	r6, r1
     e9a:	71 2c       	mov	r7, r1
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	61 e0       	ldi	r22, 0x01	; 1
     ea0:	70 e0       	ldi	r23, 0x00	; 0
     ea2:	83 fc       	sbrc	r8, 3
     ea4:	25 91       	lpm	r18, Z+
     ea6:	83 fe       	sbrs	r8, 3
     ea8:	21 91       	ld	r18, Z+
     eaa:	8f 01       	movw	r16, r30
     eac:	52 2e       	mov	r5, r18
     eae:	21 11       	cpse	r18, r1
     eb0:	03 c0       	rjmp	.+6      	; 0xeb8 <conv_brk+0x50>
     eb2:	80 e0       	ldi	r24, 0x00	; 0
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	92 c0       	rjmp	.+292    	; 0xfdc <conv_brk+0x174>
     eb8:	2e 35       	cpi	r18, 0x5E	; 94
     eba:	11 f4       	brne	.+4      	; 0xec0 <conv_brk+0x58>
     ebc:	00 97       	sbiw	r24, 0x00	; 0
     ebe:	51 f1       	breq	.+84     	; 0xf14 <conv_brk+0xac>
     ec0:	43 2f       	mov	r20, r19
     ec2:	50 e0       	ldi	r21, 0x00	; 0
     ec4:	48 17       	cp	r20, r24
     ec6:	59 07       	cpc	r21, r25
     ec8:	3c f4       	brge	.+14     	; 0xed8 <conv_brk+0x70>
     eca:	2d 35       	cpi	r18, 0x5D	; 93
     ecc:	59 f1       	breq	.+86     	; 0xf24 <conv_brk+0xbc>
     ece:	2d 32       	cpi	r18, 0x2D	; 45
     ed0:	19 f4       	brne	.+6      	; 0xed8 <conv_brk+0x70>
     ed2:	77 20       	and	r7, r7
     ed4:	09 f1       	breq	.+66     	; 0xf18 <conv_brk+0xb0>
     ed6:	03 c0       	rjmp	.+6      	; 0xede <conv_brk+0x76>
     ed8:	77 20       	and	r7, r7
     eda:	09 f4       	brne	.+2      	; 0xede <conv_brk+0x76>
     edc:	6a c0       	rjmp	.+212    	; 0xfb2 <conv_brk+0x14a>
     ede:	45 2d       	mov	r20, r5
     ee0:	46 95       	lsr	r20
     ee2:	46 95       	lsr	r20
     ee4:	46 95       	lsr	r20
     ee6:	d6 01       	movw	r26, r12
     ee8:	a4 0f       	add	r26, r20
     eea:	b1 1d       	adc	r27, r1
     eec:	45 2d       	mov	r20, r5
     eee:	47 70       	andi	r20, 0x07	; 7
     ef0:	8b 01       	movw	r16, r22
     ef2:	02 c0       	rjmp	.+4      	; 0xef8 <conv_brk+0x90>
     ef4:	00 0f       	add	r16, r16
     ef6:	11 1f       	adc	r17, r17
     ef8:	4a 95       	dec	r20
     efa:	e2 f7       	brpl	.-8      	; 0xef4 <conv_brk+0x8c>
     efc:	a8 01       	movw	r20, r16
     efe:	5c 91       	ld	r21, X
     f00:	45 2b       	or	r20, r21
     f02:	4c 93       	st	X, r20
     f04:	65 14       	cp	r6, r5
     f06:	59 f0       	breq	.+22     	; 0xf1e <conv_brk+0xb6>
     f08:	56 14       	cp	r5, r6
     f0a:	10 f4       	brcc	.+4      	; 0xf10 <conv_brk+0xa8>
     f0c:	53 94       	inc	r5
     f0e:	e7 cf       	rjmp	.-50     	; 0xede <conv_brk+0x76>
     f10:	5a 94       	dec	r5
     f12:	e5 cf       	rjmp	.-54     	; 0xede <conv_brk+0x76>
     f14:	31 e0       	ldi	r19, 0x01	; 1
     f16:	04 c0       	rjmp	.+8      	; 0xf20 <conv_brk+0xb8>
     f18:	77 24       	eor	r7, r7
     f1a:	73 94       	inc	r7
     f1c:	01 c0       	rjmp	.+2      	; 0xf20 <conv_brk+0xb8>
     f1e:	71 2c       	mov	r7, r1
     f20:	01 96       	adiw	r24, 0x01	; 1
     f22:	bf cf       	rjmp	.-130    	; 0xea2 <conv_brk+0x3a>
     f24:	77 20       	and	r7, r7
     f26:	19 f0       	breq	.+6      	; 0xf2e <conv_brk+0xc6>
     f28:	8e 81       	ldd	r24, Y+6	; 0x06
     f2a:	80 62       	ori	r24, 0x20	; 32
     f2c:	8e 83       	std	Y+6, r24	; 0x06
     f2e:	31 11       	cpse	r19, r1
     f30:	03 c0       	rjmp	.+6      	; 0xf38 <conv_brk+0xd0>
     f32:	88 24       	eor	r8, r8
     f34:	83 94       	inc	r8
     f36:	17 c0       	rjmp	.+46     	; 0xf66 <conv_brk+0xfe>
     f38:	f6 01       	movw	r30, r12
     f3a:	9e 01       	movw	r18, r28
     f3c:	2f 5d       	subi	r18, 0xDF	; 223
     f3e:	3f 4f       	sbci	r19, 0xFF	; 255
     f40:	80 81       	ld	r24, Z
     f42:	80 95       	com	r24
     f44:	81 93       	st	Z+, r24
     f46:	2e 17       	cp	r18, r30
     f48:	3f 07       	cpc	r19, r31
     f4a:	d1 f7       	brne	.-12     	; 0xf40 <conv_brk+0xd8>
     f4c:	f2 cf       	rjmp	.-28     	; 0xf32 <conv_brk+0xca>
     f4e:	e1 14       	cp	r14, r1
     f50:	f1 04       	cpc	r15, r1
     f52:	29 f0       	breq	.+10     	; 0xf5e <conv_brk+0xf6>
     f54:	d7 01       	movw	r26, r14
     f56:	8c 93       	st	X, r24
     f58:	f7 01       	movw	r30, r14
     f5a:	31 96       	adiw	r30, 0x01	; 1
     f5c:	7f 01       	movw	r14, r30
     f5e:	9a 94       	dec	r9
     f60:	81 2c       	mov	r8, r1
     f62:	99 20       	and	r9, r9
     f64:	f9 f0       	breq	.+62     	; 0xfa4 <conv_brk+0x13c>
     f66:	c5 01       	movw	r24, r10
     f68:	0e 94 2d 09 	call	0x125a	; 0x125a <fgetc>
     f6c:	97 fd       	sbrc	r25, 7
     f6e:	18 c0       	rjmp	.+48     	; 0xfa0 <conv_brk+0x138>
     f70:	fc 01       	movw	r30, r24
     f72:	ff 27       	eor	r31, r31
     f74:	23 e0       	ldi	r18, 0x03	; 3
     f76:	f5 95       	asr	r31
     f78:	e7 95       	ror	r30
     f7a:	2a 95       	dec	r18
     f7c:	e1 f7       	brne	.-8      	; 0xf76 <conv_brk+0x10e>
     f7e:	ec 0d       	add	r30, r12
     f80:	fd 1d       	adc	r31, r13
     f82:	20 81       	ld	r18, Z
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	ac 01       	movw	r20, r24
     f88:	47 70       	andi	r20, 0x07	; 7
     f8a:	55 27       	eor	r21, r21
     f8c:	02 c0       	rjmp	.+4      	; 0xf92 <conv_brk+0x12a>
     f8e:	35 95       	asr	r19
     f90:	27 95       	ror	r18
     f92:	4a 95       	dec	r20
     f94:	e2 f7       	brpl	.-8      	; 0xf8e <conv_brk+0x126>
     f96:	20 fd       	sbrc	r18, 0
     f98:	da cf       	rjmp	.-76     	; 0xf4e <conv_brk+0xe6>
     f9a:	b5 01       	movw	r22, r10
     f9c:	0e 94 a7 09 	call	0x134e	; 0x134e <ungetc>
     fa0:	81 10       	cpse	r8, r1
     fa2:	87 cf       	rjmp	.-242    	; 0xeb2 <conv_brk+0x4a>
     fa4:	e1 14       	cp	r14, r1
     fa6:	f1 04       	cpc	r15, r1
     fa8:	11 f0       	breq	.+4      	; 0xfae <conv_brk+0x146>
     faa:	d7 01       	movw	r26, r14
     fac:	1c 92       	st	X, r1
     fae:	c8 01       	movw	r24, r16
     fb0:	15 c0       	rjmp	.+42     	; 0xfdc <conv_brk+0x174>
     fb2:	42 2f       	mov	r20, r18
     fb4:	46 95       	lsr	r20
     fb6:	46 95       	lsr	r20
     fb8:	46 95       	lsr	r20
     fba:	d6 01       	movw	r26, r12
     fbc:	a4 0f       	add	r26, r20
     fbe:	b1 1d       	adc	r27, r1
     fc0:	42 2f       	mov	r20, r18
     fc2:	47 70       	andi	r20, 0x07	; 7
     fc4:	8b 01       	movw	r16, r22
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <conv_brk+0x164>
     fc8:	00 0f       	add	r16, r16
     fca:	11 1f       	adc	r17, r17
     fcc:	4a 95       	dec	r20
     fce:	e2 f7       	brpl	.-8      	; 0xfc8 <conv_brk+0x160>
     fd0:	a8 01       	movw	r20, r16
     fd2:	5c 91       	ld	r21, X
     fd4:	45 2b       	or	r20, r21
     fd6:	4c 93       	st	X, r20
     fd8:	62 2e       	mov	r6, r18
     fda:	a2 cf       	rjmp	.-188    	; 0xf20 <conv_brk+0xb8>
     fdc:	a0 96       	adiw	r28, 0x20	; 32
     fde:	ef e0       	ldi	r30, 0x0F	; 15
     fe0:	0c 94 40 0a 	jmp	0x1480	; 0x1480 <__epilogue_restores__+0x6>

00000fe4 <vfscanf>:
     fe4:	a0 e0       	ldi	r26, 0x00	; 0
     fe6:	b0 e0       	ldi	r27, 0x00	; 0
     fe8:	e8 ef       	ldi	r30, 0xF8	; 248
     fea:	f7 e0       	ldi	r31, 0x07	; 7
     fec:	0c 94 24 0a 	jmp	0x1448	; 0x1448 <__prologue_saves__+0x6>
     ff0:	6c 01       	movw	r12, r24
     ff2:	eb 01       	movw	r28, r22
     ff4:	5a 01       	movw	r10, r20
     ff6:	fc 01       	movw	r30, r24
     ff8:	17 82       	std	Z+7, r1	; 0x07
     ffa:	16 82       	std	Z+6, r1	; 0x06
     ffc:	51 2c       	mov	r5, r1
     ffe:	f6 01       	movw	r30, r12
    1000:	e3 80       	ldd	r14, Z+3	; 0x03
    1002:	fe 01       	movw	r30, r28
    1004:	e3 fc       	sbrc	r14, 3
    1006:	85 91       	lpm	r24, Z+
    1008:	e3 fe       	sbrs	r14, 3
    100a:	81 91       	ld	r24, Z+
    100c:	18 2f       	mov	r17, r24
    100e:	ef 01       	movw	r28, r30
    1010:	88 23       	and	r24, r24
    1012:	09 f4       	brne	.+2      	; 0x1016 <vfscanf+0x32>
    1014:	ee c0       	rjmp	.+476    	; 0x11f2 <vfscanf+0x20e>
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	0e 94 03 09 	call	0x1206	; 0x1206 <isspace>
    101c:	89 2b       	or	r24, r25
    101e:	21 f0       	breq	.+8      	; 0x1028 <vfscanf+0x44>
    1020:	c6 01       	movw	r24, r12
    1022:	0e 94 89 06 	call	0xd12	; 0xd12 <skip_spaces>
    1026:	eb cf       	rjmp	.-42     	; 0xffe <vfscanf+0x1a>
    1028:	15 32       	cpi	r17, 0x25	; 37
    102a:	41 f4       	brne	.+16     	; 0x103c <vfscanf+0x58>
    102c:	fe 01       	movw	r30, r28
    102e:	e3 fc       	sbrc	r14, 3
    1030:	15 91       	lpm	r17, Z+
    1032:	e3 fe       	sbrs	r14, 3
    1034:	11 91       	ld	r17, Z+
    1036:	ef 01       	movw	r28, r30
    1038:	15 32       	cpi	r17, 0x25	; 37
    103a:	81 f4       	brne	.+32     	; 0x105c <vfscanf+0x78>
    103c:	c6 01       	movw	r24, r12
    103e:	0e 94 2d 09 	call	0x125a	; 0x125a <fgetc>
    1042:	97 fd       	sbrc	r25, 7
    1044:	d4 c0       	rjmp	.+424    	; 0x11ee <vfscanf+0x20a>
    1046:	41 2f       	mov	r20, r17
    1048:	50 e0       	ldi	r21, 0x00	; 0
    104a:	9c 01       	movw	r18, r24
    104c:	33 27       	eor	r19, r19
    104e:	24 17       	cp	r18, r20
    1050:	35 07       	cpc	r19, r21
    1052:	a9 f2       	breq	.-86     	; 0xffe <vfscanf+0x1a>
    1054:	b6 01       	movw	r22, r12
    1056:	0e 94 a7 09 	call	0x134e	; 0x134e <ungetc>
    105a:	cb c0       	rjmp	.+406    	; 0x11f2 <vfscanf+0x20e>
    105c:	1a 32       	cpi	r17, 0x2A	; 42
    105e:	39 f4       	brne	.+14     	; 0x106e <vfscanf+0x8a>
    1060:	e3 fc       	sbrc	r14, 3
    1062:	15 91       	lpm	r17, Z+
    1064:	e3 fe       	sbrs	r14, 3
    1066:	11 91       	ld	r17, Z+
    1068:	ef 01       	movw	r28, r30
    106a:	01 e0       	ldi	r16, 0x01	; 1
    106c:	01 c0       	rjmp	.+2      	; 0x1070 <vfscanf+0x8c>
    106e:	00 e0       	ldi	r16, 0x00	; 0
    1070:	f1 2c       	mov	r15, r1
    1072:	20 ed       	ldi	r18, 0xD0	; 208
    1074:	21 0f       	add	r18, r17
    1076:	2a 30       	cpi	r18, 0x0A	; 10
    1078:	80 f4       	brcc	.+32     	; 0x109a <vfscanf+0xb6>
    107a:	02 60       	ori	r16, 0x02	; 2
    107c:	6f 2d       	mov	r22, r15
    107e:	70 e0       	ldi	r23, 0x00	; 0
    1080:	80 e0       	ldi	r24, 0x00	; 0
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	40 e2       	ldi	r20, 0x20	; 32
    1086:	0e 94 62 06 	call	0xcc4	; 0xcc4 <mulacc>
    108a:	f6 2e       	mov	r15, r22
    108c:	fe 01       	movw	r30, r28
    108e:	e3 fc       	sbrc	r14, 3
    1090:	15 91       	lpm	r17, Z+
    1092:	e3 fe       	sbrs	r14, 3
    1094:	11 91       	ld	r17, Z+
    1096:	ef 01       	movw	r28, r30
    1098:	ec cf       	rjmp	.-40     	; 0x1072 <vfscanf+0x8e>
    109a:	01 ff       	sbrs	r16, 1
    109c:	03 c0       	rjmp	.+6      	; 0x10a4 <vfscanf+0xc0>
    109e:	f1 10       	cpse	r15, r1
    10a0:	03 c0       	rjmp	.+6      	; 0x10a8 <vfscanf+0xc4>
    10a2:	a7 c0       	rjmp	.+334    	; 0x11f2 <vfscanf+0x20e>
    10a4:	ff 24       	eor	r15, r15
    10a6:	fa 94       	dec	r15
    10a8:	18 36       	cpi	r17, 0x68	; 104
    10aa:	19 f0       	breq	.+6      	; 0x10b2 <vfscanf+0xce>
    10ac:	1c 36       	cpi	r17, 0x6C	; 108
    10ae:	51 f0       	breq	.+20     	; 0x10c4 <vfscanf+0xe0>
    10b0:	10 c0       	rjmp	.+32     	; 0x10d2 <vfscanf+0xee>
    10b2:	fe 01       	movw	r30, r28
    10b4:	e3 fc       	sbrc	r14, 3
    10b6:	15 91       	lpm	r17, Z+
    10b8:	e3 fe       	sbrs	r14, 3
    10ba:	11 91       	ld	r17, Z+
    10bc:	ef 01       	movw	r28, r30
    10be:	18 36       	cpi	r17, 0x68	; 104
    10c0:	41 f4       	brne	.+16     	; 0x10d2 <vfscanf+0xee>
    10c2:	08 60       	ori	r16, 0x08	; 8
    10c4:	04 60       	ori	r16, 0x04	; 4
    10c6:	fe 01       	movw	r30, r28
    10c8:	e3 fc       	sbrc	r14, 3
    10ca:	15 91       	lpm	r17, Z+
    10cc:	e3 fe       	sbrs	r14, 3
    10ce:	11 91       	ld	r17, Z+
    10d0:	ef 01       	movw	r28, r30
    10d2:	11 23       	and	r17, r17
    10d4:	09 f4       	brne	.+2      	; 0x10d8 <vfscanf+0xf4>
    10d6:	8d c0       	rjmp	.+282    	; 0x11f2 <vfscanf+0x20e>
    10d8:	61 2f       	mov	r22, r17
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	88 e6       	ldi	r24, 0x68	; 104
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	0e 94 0c 09 	call	0x1218	; 0x1218 <strchr_P>
    10e4:	89 2b       	or	r24, r25
    10e6:	09 f4       	brne	.+2      	; 0x10ea <vfscanf+0x106>
    10e8:	84 c0       	rjmp	.+264    	; 0x11f2 <vfscanf+0x20e>
    10ea:	00 fd       	sbrc	r16, 0
    10ec:	07 c0       	rjmp	.+14     	; 0x10fc <vfscanf+0x118>
    10ee:	f5 01       	movw	r30, r10
    10f0:	80 80       	ld	r8, Z
    10f2:	91 80       	ldd	r9, Z+1	; 0x01
    10f4:	c5 01       	movw	r24, r10
    10f6:	02 96       	adiw	r24, 0x02	; 2
    10f8:	5c 01       	movw	r10, r24
    10fa:	02 c0       	rjmp	.+4      	; 0x1100 <vfscanf+0x11c>
    10fc:	81 2c       	mov	r8, r1
    10fe:	91 2c       	mov	r9, r1
    1100:	1e 36       	cpi	r17, 0x6E	; 110
    1102:	51 f4       	brne	.+20     	; 0x1118 <vfscanf+0x134>
    1104:	f6 01       	movw	r30, r12
    1106:	46 81       	ldd	r20, Z+6	; 0x06
    1108:	57 81       	ldd	r21, Z+7	; 0x07
    110a:	60 e0       	ldi	r22, 0x00	; 0
    110c:	70 e0       	ldi	r23, 0x00	; 0
    110e:	20 2f       	mov	r18, r16
    1110:	c4 01       	movw	r24, r8
    1112:	0e 94 56 06 	call	0xcac	; 0xcac <putval>
    1116:	73 cf       	rjmp	.-282    	; 0xffe <vfscanf+0x1a>
    1118:	13 36       	cpi	r17, 0x63	; 99
    111a:	a9 f4       	brne	.+42     	; 0x1146 <vfscanf+0x162>
    111c:	01 fd       	sbrc	r16, 1
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <vfscanf+0x140>
    1120:	ff 24       	eor	r15, r15
    1122:	f3 94       	inc	r15
    1124:	c6 01       	movw	r24, r12
    1126:	0e 94 2d 09 	call	0x125a	; 0x125a <fgetc>
    112a:	97 fd       	sbrc	r25, 7
    112c:	60 c0       	rjmp	.+192    	; 0x11ee <vfscanf+0x20a>
    112e:	81 14       	cp	r8, r1
    1130:	91 04       	cpc	r9, r1
    1132:	29 f0       	breq	.+10     	; 0x113e <vfscanf+0x15a>
    1134:	f4 01       	movw	r30, r8
    1136:	80 83       	st	Z, r24
    1138:	c4 01       	movw	r24, r8
    113a:	01 96       	adiw	r24, 0x01	; 1
    113c:	4c 01       	movw	r8, r24
    113e:	fa 94       	dec	r15
    1140:	f1 10       	cpse	r15, r1
    1142:	f0 cf       	rjmp	.-32     	; 0x1124 <vfscanf+0x140>
    1144:	50 c0       	rjmp	.+160    	; 0x11e6 <vfscanf+0x202>
    1146:	1b 35       	cpi	r17, 0x5B	; 91
    1148:	59 f4       	brne	.+22     	; 0x1160 <vfscanf+0x17c>
    114a:	9e 01       	movw	r18, r28
    114c:	a4 01       	movw	r20, r8
    114e:	6f 2d       	mov	r22, r15
    1150:	c6 01       	movw	r24, r12
    1152:	0e 94 34 07 	call	0xe68	; 0xe68 <conv_brk>
    1156:	ec 01       	movw	r28, r24
    1158:	89 2b       	or	r24, r25
    115a:	09 f0       	breq	.+2      	; 0x115e <vfscanf+0x17a>
    115c:	44 c0       	rjmp	.+136    	; 0x11e6 <vfscanf+0x202>
    115e:	3e c0       	rjmp	.+124    	; 0x11dc <vfscanf+0x1f8>
    1160:	c6 01       	movw	r24, r12
    1162:	0e 94 89 06 	call	0xd12	; 0xd12 <skip_spaces>
    1166:	97 fd       	sbrc	r25, 7
    1168:	42 c0       	rjmp	.+132    	; 0x11ee <vfscanf+0x20a>
    116a:	1f 36       	cpi	r17, 0x6F	; 111
    116c:	61 f1       	breq	.+88     	; 0x11c6 <vfscanf+0x1e2>
    116e:	28 f4       	brcc	.+10     	; 0x117a <vfscanf+0x196>
    1170:	14 36       	cpi	r17, 0x64	; 100
    1172:	39 f1       	breq	.+78     	; 0x11c2 <vfscanf+0x1de>
    1174:	19 36       	cpi	r17, 0x69	; 105
    1176:	51 f1       	breq	.+84     	; 0x11cc <vfscanf+0x1e8>
    1178:	28 c0       	rjmp	.+80     	; 0x11ca <vfscanf+0x1e6>
    117a:	13 37       	cpi	r17, 0x73	; 115
    117c:	71 f0       	breq	.+28     	; 0x119a <vfscanf+0x1b6>
    117e:	15 37       	cpi	r17, 0x75	; 117
    1180:	01 f1       	breq	.+64     	; 0x11c2 <vfscanf+0x1de>
    1182:	23 c0       	rjmp	.+70     	; 0x11ca <vfscanf+0x1e6>
    1184:	81 14       	cp	r8, r1
    1186:	91 04       	cpc	r9, r1
    1188:	29 f0       	breq	.+10     	; 0x1194 <vfscanf+0x1b0>
    118a:	f4 01       	movw	r30, r8
    118c:	60 82       	st	Z, r6
    118e:	c4 01       	movw	r24, r8
    1190:	01 96       	adiw	r24, 0x01	; 1
    1192:	4c 01       	movw	r8, r24
    1194:	fa 94       	dec	r15
    1196:	ff 20       	and	r15, r15
    1198:	71 f0       	breq	.+28     	; 0x11b6 <vfscanf+0x1d2>
    119a:	c6 01       	movw	r24, r12
    119c:	0e 94 2d 09 	call	0x125a	; 0x125a <fgetc>
    11a0:	3c 01       	movw	r6, r24
    11a2:	97 fd       	sbrc	r25, 7
    11a4:	08 c0       	rjmp	.+16     	; 0x11b6 <vfscanf+0x1d2>
    11a6:	0e 94 03 09 	call	0x1206	; 0x1206 <isspace>
    11aa:	89 2b       	or	r24, r25
    11ac:	59 f3       	breq	.-42     	; 0x1184 <vfscanf+0x1a0>
    11ae:	b6 01       	movw	r22, r12
    11b0:	c3 01       	movw	r24, r6
    11b2:	0e 94 a7 09 	call	0x134e	; 0x134e <ungetc>
    11b6:	81 14       	cp	r8, r1
    11b8:	91 04       	cpc	r9, r1
    11ba:	a9 f0       	breq	.+42     	; 0x11e6 <vfscanf+0x202>
    11bc:	f4 01       	movw	r30, r8
    11be:	10 82       	st	Z, r1
    11c0:	12 c0       	rjmp	.+36     	; 0x11e6 <vfscanf+0x202>
    11c2:	00 62       	ori	r16, 0x20	; 32
    11c4:	03 c0       	rjmp	.+6      	; 0x11cc <vfscanf+0x1e8>
    11c6:	00 61       	ori	r16, 0x10	; 16
    11c8:	01 c0       	rjmp	.+2      	; 0x11cc <vfscanf+0x1e8>
    11ca:	00 64       	ori	r16, 0x40	; 64
    11cc:	20 2f       	mov	r18, r16
    11ce:	a4 01       	movw	r20, r8
    11d0:	6f 2d       	mov	r22, r15
    11d2:	c6 01       	movw	r24, r12
    11d4:	0e 94 a2 06 	call	0xd44	; 0xd44 <conv_int>
    11d8:	81 11       	cpse	r24, r1
    11da:	05 c0       	rjmp	.+10     	; 0x11e6 <vfscanf+0x202>
    11dc:	f6 01       	movw	r30, r12
    11de:	83 81       	ldd	r24, Z+3	; 0x03
    11e0:	80 73       	andi	r24, 0x30	; 48
    11e2:	29 f4       	brne	.+10     	; 0x11ee <vfscanf+0x20a>
    11e4:	06 c0       	rjmp	.+12     	; 0x11f2 <vfscanf+0x20e>
    11e6:	00 fd       	sbrc	r16, 0
    11e8:	0a cf       	rjmp	.-492    	; 0xffe <vfscanf+0x1a>
    11ea:	53 94       	inc	r5
    11ec:	08 cf       	rjmp	.-496    	; 0xffe <vfscanf+0x1a>
    11ee:	55 20       	and	r5, r5
    11f0:	19 f0       	breq	.+6      	; 0x11f8 <vfscanf+0x214>
    11f2:	85 2d       	mov	r24, r5
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <vfscanf+0x218>
    11f8:	8f ef       	ldi	r24, 0xFF	; 255
    11fa:	9f ef       	ldi	r25, 0xFF	; 255
    11fc:	cd b7       	in	r28, 0x3d	; 61
    11fe:	de b7       	in	r29, 0x3e	; 62
    1200:	ef e0       	ldi	r30, 0x0F	; 15
    1202:	0c 94 40 0a 	jmp	0x1480	; 0x1480 <__epilogue_restores__+0x6>

00001206 <isspace>:
    1206:	91 11       	cpse	r25, r1
    1208:	0c 94 1e 0a 	jmp	0x143c	; 0x143c <__ctype_isfalse>
    120c:	80 32       	cpi	r24, 0x20	; 32
    120e:	19 f0       	breq	.+6      	; 0x1216 <isspace+0x10>
    1210:	89 50       	subi	r24, 0x09	; 9
    1212:	85 50       	subi	r24, 0x05	; 5
    1214:	c8 f7       	brcc	.-14     	; 0x1208 <isspace+0x2>
    1216:	08 95       	ret

00001218 <strchr_P>:
    1218:	fc 01       	movw	r30, r24
    121a:	05 90       	lpm	r0, Z+
    121c:	06 16       	cp	r0, r22
    121e:	21 f0       	breq	.+8      	; 0x1228 <strchr_P+0x10>
    1220:	00 20       	and	r0, r0
    1222:	d9 f7       	brne	.-10     	; 0x121a <strchr_P+0x2>
    1224:	c0 01       	movw	r24, r0
    1226:	08 95       	ret
    1228:	31 97       	sbiw	r30, 0x01	; 1
    122a:	cf 01       	movw	r24, r30
    122c:	08 95       	ret

0000122e <strnlen_P>:
    122e:	fc 01       	movw	r30, r24
    1230:	05 90       	lpm	r0, Z+
    1232:	61 50       	subi	r22, 0x01	; 1
    1234:	70 40       	sbci	r23, 0x00	; 0
    1236:	01 10       	cpse	r0, r1
    1238:	d8 f7       	brcc	.-10     	; 0x1230 <strnlen_P+0x2>
    123a:	80 95       	com	r24
    123c:	90 95       	com	r25
    123e:	8e 0f       	add	r24, r30
    1240:	9f 1f       	adc	r25, r31
    1242:	08 95       	ret

00001244 <strnlen>:
    1244:	fc 01       	movw	r30, r24
    1246:	61 50       	subi	r22, 0x01	; 1
    1248:	70 40       	sbci	r23, 0x00	; 0
    124a:	01 90       	ld	r0, Z+
    124c:	01 10       	cpse	r0, r1
    124e:	d8 f7       	brcc	.-10     	; 0x1246 <strnlen+0x2>
    1250:	80 95       	com	r24
    1252:	90 95       	com	r25
    1254:	8e 0f       	add	r24, r30
    1256:	9f 1f       	adc	r25, r31
    1258:	08 95       	ret

0000125a <fgetc>:
    125a:	cf 93       	push	r28
    125c:	df 93       	push	r29
    125e:	ec 01       	movw	r28, r24
    1260:	2b 81       	ldd	r18, Y+3	; 0x03
    1262:	20 ff       	sbrs	r18, 0
    1264:	33 c0       	rjmp	.+102    	; 0x12cc <fgetc+0x72>
    1266:	26 ff       	sbrs	r18, 6
    1268:	0a c0       	rjmp	.+20     	; 0x127e <fgetc+0x24>
    126a:	2f 7b       	andi	r18, 0xBF	; 191
    126c:	2b 83       	std	Y+3, r18	; 0x03
    126e:	8e 81       	ldd	r24, Y+6	; 0x06
    1270:	9f 81       	ldd	r25, Y+7	; 0x07
    1272:	01 96       	adiw	r24, 0x01	; 1
    1274:	9f 83       	std	Y+7, r25	; 0x07
    1276:	8e 83       	std	Y+6, r24	; 0x06
    1278:	8a 81       	ldd	r24, Y+2	; 0x02
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	29 c0       	rjmp	.+82     	; 0x12d0 <fgetc+0x76>
    127e:	22 ff       	sbrs	r18, 2
    1280:	0f c0       	rjmp	.+30     	; 0x12a0 <fgetc+0x46>
    1282:	e8 81       	ld	r30, Y
    1284:	f9 81       	ldd	r31, Y+1	; 0x01
    1286:	80 81       	ld	r24, Z
    1288:	08 2e       	mov	r0, r24
    128a:	00 0c       	add	r0, r0
    128c:	99 0b       	sbc	r25, r25
    128e:	00 97       	sbiw	r24, 0x00	; 0
    1290:	19 f4       	brne	.+6      	; 0x1298 <fgetc+0x3e>
    1292:	20 62       	ori	r18, 0x20	; 32
    1294:	2b 83       	std	Y+3, r18	; 0x03
    1296:	1a c0       	rjmp	.+52     	; 0x12cc <fgetc+0x72>
    1298:	31 96       	adiw	r30, 0x01	; 1
    129a:	f9 83       	std	Y+1, r31	; 0x01
    129c:	e8 83       	st	Y, r30
    129e:	0e c0       	rjmp	.+28     	; 0x12bc <fgetc+0x62>
    12a0:	ea 85       	ldd	r30, Y+10	; 0x0a
    12a2:	fb 85       	ldd	r31, Y+11	; 0x0b
    12a4:	09 95       	icall
    12a6:	97 ff       	sbrs	r25, 7
    12a8:	09 c0       	rjmp	.+18     	; 0x12bc <fgetc+0x62>
    12aa:	2b 81       	ldd	r18, Y+3	; 0x03
    12ac:	01 96       	adiw	r24, 0x01	; 1
    12ae:	11 f0       	breq	.+4      	; 0x12b4 <fgetc+0x5a>
    12b0:	80 e2       	ldi	r24, 0x20	; 32
    12b2:	01 c0       	rjmp	.+2      	; 0x12b6 <fgetc+0x5c>
    12b4:	80 e1       	ldi	r24, 0x10	; 16
    12b6:	82 2b       	or	r24, r18
    12b8:	8b 83       	std	Y+3, r24	; 0x03
    12ba:	08 c0       	rjmp	.+16     	; 0x12cc <fgetc+0x72>
    12bc:	2e 81       	ldd	r18, Y+6	; 0x06
    12be:	3f 81       	ldd	r19, Y+7	; 0x07
    12c0:	2f 5f       	subi	r18, 0xFF	; 255
    12c2:	3f 4f       	sbci	r19, 0xFF	; 255
    12c4:	3f 83       	std	Y+7, r19	; 0x07
    12c6:	2e 83       	std	Y+6, r18	; 0x06
    12c8:	99 27       	eor	r25, r25
    12ca:	02 c0       	rjmp	.+4      	; 0x12d0 <fgetc+0x76>
    12cc:	8f ef       	ldi	r24, 0xFF	; 255
    12ce:	9f ef       	ldi	r25, 0xFF	; 255
    12d0:	df 91       	pop	r29
    12d2:	cf 91       	pop	r28
    12d4:	08 95       	ret

000012d6 <fputc>:
    12d6:	0f 93       	push	r16
    12d8:	1f 93       	push	r17
    12da:	cf 93       	push	r28
    12dc:	df 93       	push	r29
    12de:	fb 01       	movw	r30, r22
    12e0:	23 81       	ldd	r18, Z+3	; 0x03
    12e2:	21 fd       	sbrc	r18, 1
    12e4:	03 c0       	rjmp	.+6      	; 0x12ec <fputc+0x16>
    12e6:	8f ef       	ldi	r24, 0xFF	; 255
    12e8:	9f ef       	ldi	r25, 0xFF	; 255
    12ea:	2c c0       	rjmp	.+88     	; 0x1344 <fputc+0x6e>
    12ec:	22 ff       	sbrs	r18, 2
    12ee:	16 c0       	rjmp	.+44     	; 0x131c <fputc+0x46>
    12f0:	46 81       	ldd	r20, Z+6	; 0x06
    12f2:	57 81       	ldd	r21, Z+7	; 0x07
    12f4:	24 81       	ldd	r18, Z+4	; 0x04
    12f6:	35 81       	ldd	r19, Z+5	; 0x05
    12f8:	42 17       	cp	r20, r18
    12fa:	53 07       	cpc	r21, r19
    12fc:	44 f4       	brge	.+16     	; 0x130e <fputc+0x38>
    12fe:	a0 81       	ld	r26, Z
    1300:	b1 81       	ldd	r27, Z+1	; 0x01
    1302:	9d 01       	movw	r18, r26
    1304:	2f 5f       	subi	r18, 0xFF	; 255
    1306:	3f 4f       	sbci	r19, 0xFF	; 255
    1308:	31 83       	std	Z+1, r19	; 0x01
    130a:	20 83       	st	Z, r18
    130c:	8c 93       	st	X, r24
    130e:	26 81       	ldd	r18, Z+6	; 0x06
    1310:	37 81       	ldd	r19, Z+7	; 0x07
    1312:	2f 5f       	subi	r18, 0xFF	; 255
    1314:	3f 4f       	sbci	r19, 0xFF	; 255
    1316:	37 83       	std	Z+7, r19	; 0x07
    1318:	26 83       	std	Z+6, r18	; 0x06
    131a:	14 c0       	rjmp	.+40     	; 0x1344 <fputc+0x6e>
    131c:	8b 01       	movw	r16, r22
    131e:	ec 01       	movw	r28, r24
    1320:	fb 01       	movw	r30, r22
    1322:	00 84       	ldd	r0, Z+8	; 0x08
    1324:	f1 85       	ldd	r31, Z+9	; 0x09
    1326:	e0 2d       	mov	r30, r0
    1328:	09 95       	icall
    132a:	89 2b       	or	r24, r25
    132c:	e1 f6       	brne	.-72     	; 0x12e6 <fputc+0x10>
    132e:	d8 01       	movw	r26, r16
    1330:	16 96       	adiw	r26, 0x06	; 6
    1332:	8d 91       	ld	r24, X+
    1334:	9c 91       	ld	r25, X
    1336:	17 97       	sbiw	r26, 0x07	; 7
    1338:	01 96       	adiw	r24, 0x01	; 1
    133a:	17 96       	adiw	r26, 0x07	; 7
    133c:	9c 93       	st	X, r25
    133e:	8e 93       	st	-X, r24
    1340:	16 97       	sbiw	r26, 0x06	; 6
    1342:	ce 01       	movw	r24, r28
    1344:	df 91       	pop	r29
    1346:	cf 91       	pop	r28
    1348:	1f 91       	pop	r17
    134a:	0f 91       	pop	r16
    134c:	08 95       	ret

0000134e <ungetc>:
    134e:	fb 01       	movw	r30, r22
    1350:	23 81       	ldd	r18, Z+3	; 0x03
    1352:	20 ff       	sbrs	r18, 0
    1354:	12 c0       	rjmp	.+36     	; 0x137a <ungetc+0x2c>
    1356:	26 fd       	sbrc	r18, 6
    1358:	10 c0       	rjmp	.+32     	; 0x137a <ungetc+0x2c>
    135a:	8f 3f       	cpi	r24, 0xFF	; 255
    135c:	3f ef       	ldi	r19, 0xFF	; 255
    135e:	93 07       	cpc	r25, r19
    1360:	61 f0       	breq	.+24     	; 0x137a <ungetc+0x2c>
    1362:	82 83       	std	Z+2, r24	; 0x02
    1364:	2f 7d       	andi	r18, 0xDF	; 223
    1366:	20 64       	ori	r18, 0x40	; 64
    1368:	23 83       	std	Z+3, r18	; 0x03
    136a:	26 81       	ldd	r18, Z+6	; 0x06
    136c:	37 81       	ldd	r19, Z+7	; 0x07
    136e:	21 50       	subi	r18, 0x01	; 1
    1370:	31 09       	sbc	r19, r1
    1372:	37 83       	std	Z+7, r19	; 0x07
    1374:	26 83       	std	Z+6, r18	; 0x06
    1376:	99 27       	eor	r25, r25
    1378:	08 95       	ret
    137a:	8f ef       	ldi	r24, 0xFF	; 255
    137c:	9f ef       	ldi	r25, 0xFF	; 255
    137e:	08 95       	ret

00001380 <__ultoa_invert>:
    1380:	fa 01       	movw	r30, r20
    1382:	aa 27       	eor	r26, r26
    1384:	28 30       	cpi	r18, 0x08	; 8
    1386:	51 f1       	breq	.+84     	; 0x13dc <__ultoa_invert+0x5c>
    1388:	20 31       	cpi	r18, 0x10	; 16
    138a:	81 f1       	breq	.+96     	; 0x13ec <__ultoa_invert+0x6c>
    138c:	e8 94       	clt
    138e:	6f 93       	push	r22
    1390:	6e 7f       	andi	r22, 0xFE	; 254
    1392:	6e 5f       	subi	r22, 0xFE	; 254
    1394:	7f 4f       	sbci	r23, 0xFF	; 255
    1396:	8f 4f       	sbci	r24, 0xFF	; 255
    1398:	9f 4f       	sbci	r25, 0xFF	; 255
    139a:	af 4f       	sbci	r26, 0xFF	; 255
    139c:	b1 e0       	ldi	r27, 0x01	; 1
    139e:	3e d0       	rcall	.+124    	; 0x141c <__ultoa_invert+0x9c>
    13a0:	b4 e0       	ldi	r27, 0x04	; 4
    13a2:	3c d0       	rcall	.+120    	; 0x141c <__ultoa_invert+0x9c>
    13a4:	67 0f       	add	r22, r23
    13a6:	78 1f       	adc	r23, r24
    13a8:	89 1f       	adc	r24, r25
    13aa:	9a 1f       	adc	r25, r26
    13ac:	a1 1d       	adc	r26, r1
    13ae:	68 0f       	add	r22, r24
    13b0:	79 1f       	adc	r23, r25
    13b2:	8a 1f       	adc	r24, r26
    13b4:	91 1d       	adc	r25, r1
    13b6:	a1 1d       	adc	r26, r1
    13b8:	6a 0f       	add	r22, r26
    13ba:	71 1d       	adc	r23, r1
    13bc:	81 1d       	adc	r24, r1
    13be:	91 1d       	adc	r25, r1
    13c0:	a1 1d       	adc	r26, r1
    13c2:	20 d0       	rcall	.+64     	; 0x1404 <__ultoa_invert+0x84>
    13c4:	09 f4       	brne	.+2      	; 0x13c8 <__ultoa_invert+0x48>
    13c6:	68 94       	set
    13c8:	3f 91       	pop	r19
    13ca:	2a e0       	ldi	r18, 0x0A	; 10
    13cc:	26 9f       	mul	r18, r22
    13ce:	11 24       	eor	r1, r1
    13d0:	30 19       	sub	r19, r0
    13d2:	30 5d       	subi	r19, 0xD0	; 208
    13d4:	31 93       	st	Z+, r19
    13d6:	de f6       	brtc	.-74     	; 0x138e <__ultoa_invert+0xe>
    13d8:	cf 01       	movw	r24, r30
    13da:	08 95       	ret
    13dc:	46 2f       	mov	r20, r22
    13de:	47 70       	andi	r20, 0x07	; 7
    13e0:	40 5d       	subi	r20, 0xD0	; 208
    13e2:	41 93       	st	Z+, r20
    13e4:	b3 e0       	ldi	r27, 0x03	; 3
    13e6:	0f d0       	rcall	.+30     	; 0x1406 <__ultoa_invert+0x86>
    13e8:	c9 f7       	brne	.-14     	; 0x13dc <__ultoa_invert+0x5c>
    13ea:	f6 cf       	rjmp	.-20     	; 0x13d8 <__ultoa_invert+0x58>
    13ec:	46 2f       	mov	r20, r22
    13ee:	4f 70       	andi	r20, 0x0F	; 15
    13f0:	40 5d       	subi	r20, 0xD0	; 208
    13f2:	4a 33       	cpi	r20, 0x3A	; 58
    13f4:	18 f0       	brcs	.+6      	; 0x13fc <__ultoa_invert+0x7c>
    13f6:	49 5d       	subi	r20, 0xD9	; 217
    13f8:	31 fd       	sbrc	r19, 1
    13fa:	40 52       	subi	r20, 0x20	; 32
    13fc:	41 93       	st	Z+, r20
    13fe:	02 d0       	rcall	.+4      	; 0x1404 <__ultoa_invert+0x84>
    1400:	a9 f7       	brne	.-22     	; 0x13ec <__ultoa_invert+0x6c>
    1402:	ea cf       	rjmp	.-44     	; 0x13d8 <__ultoa_invert+0x58>
    1404:	b4 e0       	ldi	r27, 0x04	; 4
    1406:	a6 95       	lsr	r26
    1408:	97 95       	ror	r25
    140a:	87 95       	ror	r24
    140c:	77 95       	ror	r23
    140e:	67 95       	ror	r22
    1410:	ba 95       	dec	r27
    1412:	c9 f7       	brne	.-14     	; 0x1406 <__ultoa_invert+0x86>
    1414:	00 97       	sbiw	r24, 0x00	; 0
    1416:	61 05       	cpc	r22, r1
    1418:	71 05       	cpc	r23, r1
    141a:	08 95       	ret
    141c:	9b 01       	movw	r18, r22
    141e:	ac 01       	movw	r20, r24
    1420:	0a 2e       	mov	r0, r26
    1422:	06 94       	lsr	r0
    1424:	57 95       	ror	r21
    1426:	47 95       	ror	r20
    1428:	37 95       	ror	r19
    142a:	27 95       	ror	r18
    142c:	ba 95       	dec	r27
    142e:	c9 f7       	brne	.-14     	; 0x1422 <__ultoa_invert+0xa2>
    1430:	62 0f       	add	r22, r18
    1432:	73 1f       	adc	r23, r19
    1434:	84 1f       	adc	r24, r20
    1436:	95 1f       	adc	r25, r21
    1438:	a0 1d       	adc	r26, r0
    143a:	08 95       	ret

0000143c <__ctype_isfalse>:
    143c:	99 27       	eor	r25, r25
    143e:	88 27       	eor	r24, r24

00001440 <__ctype_istrue>:
    1440:	08 95       	ret

00001442 <__prologue_saves__>:
    1442:	2f 92       	push	r2
    1444:	3f 92       	push	r3
    1446:	4f 92       	push	r4
    1448:	5f 92       	push	r5
    144a:	6f 92       	push	r6
    144c:	7f 92       	push	r7
    144e:	8f 92       	push	r8
    1450:	9f 92       	push	r9
    1452:	af 92       	push	r10
    1454:	bf 92       	push	r11
    1456:	cf 92       	push	r12
    1458:	df 92       	push	r13
    145a:	ef 92       	push	r14
    145c:	ff 92       	push	r15
    145e:	0f 93       	push	r16
    1460:	1f 93       	push	r17
    1462:	cf 93       	push	r28
    1464:	df 93       	push	r29
    1466:	cd b7       	in	r28, 0x3d	; 61
    1468:	de b7       	in	r29, 0x3e	; 62
    146a:	ca 1b       	sub	r28, r26
    146c:	db 0b       	sbc	r29, r27
    146e:	0f b6       	in	r0, 0x3f	; 63
    1470:	f8 94       	cli
    1472:	de bf       	out	0x3e, r29	; 62
    1474:	0f be       	out	0x3f, r0	; 63
    1476:	cd bf       	out	0x3d, r28	; 61
    1478:	09 94       	ijmp

0000147a <__epilogue_restores__>:
    147a:	2a 88       	ldd	r2, Y+18	; 0x12
    147c:	39 88       	ldd	r3, Y+17	; 0x11
    147e:	48 88       	ldd	r4, Y+16	; 0x10
    1480:	5f 84       	ldd	r5, Y+15	; 0x0f
    1482:	6e 84       	ldd	r6, Y+14	; 0x0e
    1484:	7d 84       	ldd	r7, Y+13	; 0x0d
    1486:	8c 84       	ldd	r8, Y+12	; 0x0c
    1488:	9b 84       	ldd	r9, Y+11	; 0x0b
    148a:	aa 84       	ldd	r10, Y+10	; 0x0a
    148c:	b9 84       	ldd	r11, Y+9	; 0x09
    148e:	c8 84       	ldd	r12, Y+8	; 0x08
    1490:	df 80       	ldd	r13, Y+7	; 0x07
    1492:	ee 80       	ldd	r14, Y+6	; 0x06
    1494:	fd 80       	ldd	r15, Y+5	; 0x05
    1496:	0c 81       	ldd	r16, Y+4	; 0x04
    1498:	1b 81       	ldd	r17, Y+3	; 0x03
    149a:	aa 81       	ldd	r26, Y+2	; 0x02
    149c:	b9 81       	ldd	r27, Y+1	; 0x01
    149e:	ce 0f       	add	r28, r30
    14a0:	d1 1d       	adc	r29, r1
    14a2:	0f b6       	in	r0, 0x3f	; 63
    14a4:	f8 94       	cli
    14a6:	de bf       	out	0x3e, r29	; 62
    14a8:	0f be       	out	0x3f, r0	; 63
    14aa:	cd bf       	out	0x3d, r28	; 61
    14ac:	ed 01       	movw	r28, r26
    14ae:	08 95       	ret

000014b0 <_exit>:
    14b0:	f8 94       	cli

000014b2 <__stop_program>:
    14b2:	ff cf       	rjmp	.-2      	; 0x14b2 <__stop_program>
